README.md:3:docker run -t -d -v $(pwd):/pintos -v /tmp/.X11-unix/:/tmp/.X11-unix -e DISPLAY=$DISPLAY --name pintos_study hangpark/pintos-dev-env-kaist
README.md:11:do `xhost -local:root`
Binary file .git/index matches
.git/info/exclude:1:# git ls-files --others --exclude-from=.git/info/exclude
Binary file .git/objects/f6/f803b9b6dc437a25876928679ab393176c086d matches
Binary file .git/objects/f6/3bb9abe870769582db3c501dd4c721752221fe matches
Binary file .git/objects/f6/4074a0d1482bec6654b34b8e5b5644c8a76fec matches
Binary file .git/objects/f6/d08716d61db1d7973ee1be86d18cf631f5da89 matches
Binary file .git/objects/93/dd577667e053f61d10e6d48d0b8437da863256 matches
Binary file .git/objects/93/c395208068801dcdbca3b4dffbec7b64c74712 matches
Binary file .git/objects/8d/64c056c9642cb07bfdabe96843b7f3ea61d640 matches
Binary file .git/objects/8d/a7a8bbe79a5c1f0520ebc0d4c62318b70e73fa matches
Binary file .git/objects/8d/0628b5a59caf5113621ead1e4b7ad72ff769ec matches
Binary file .git/objects/a4/521de86e32b91b7a939f68e06d6f6c7a0b83b3 matches
Binary file .git/objects/a4/da4c5e36ac2f3f85c38b3497f7f2e8ee154254 matches
Binary file .git/objects/a4/761b6b52c14d3202a783d1e7eb1ab64baba767 matches
Binary file .git/objects/22/bdc8c8b23dbd4a4b70df662738cb7c282ce7a1 matches
Binary file .git/objects/22/88ff6d6950034db2eedadf3b44c04d60377103 matches
Binary file .git/objects/22/b8b89811682374639f27395d2d190025318188 matches
Binary file .git/objects/22/54d05467ee7a8bce10994ff10f98a91919f7f4 matches
Binary file .git/objects/61/607eec599527403320f6168329d470425c2e13 matches
Binary file .git/objects/61/abe85e348350b37082760997b8936dce55bc66 matches
Binary file .git/objects/61/54d08dd93bec35c0e2db890b5766e81484ec58 matches
Binary file .git/objects/dc/bc8843efa2571e63f99a7c9530b004010d2e4c matches
Binary file .git/objects/dc/7c2a7c06b7c38349b11b1df81a0b0e07976091 matches
Binary file .git/objects/1d/db877c37f31c0d5c81def3342808639edcf5c1 matches
Binary file .git/objects/cc/09bb13a05effb3628bc1ce48f2d4673646b57f matches
Binary file .git/objects/cc/156b6d5eddd8e52378be5e17952d6e650ea5c8 matches
Binary file .git/objects/cc/6d6c03a60791071ba91663cfdaaebee67dbb78 matches
Binary file .git/objects/cc/e23b42e2a052dd502e9e0dc264d269b41568bc matches
Binary file .git/objects/cc/8ff8b4b37e0f594eb21bbd6980cdd130b84b47 matches
Binary file .git/objects/40/6b8b0414defc8544b6d29f24ba22e5a99eb123 matches
Binary file .git/objects/1c/d917522c076cb874e0b121a87d3b7633e28d21 matches
Binary file .git/objects/1c/4ced18ee018afc22716cea279fa8c5aec375f2 matches
Binary file .git/objects/1b/5258449ac708a042818a114a5dff137fd9cb17 matches
Binary file .git/objects/1b/136f21cd748e5c2563d9418b41f09c3303e01d matches
Binary file .git/objects/1b/701ed9076f8192e3e4e0247b2817ea10341dfb matches
Binary file .git/objects/4b/af7718bdbd0d1a3b162b9a93ef936d0dedca5a matches
Binary file .git/objects/88/33a3affc0069b4c34fcd8a92f1bbdb76fae989 matches
Binary file .git/objects/88/5fb415cd84fdb2adb69c60fa65c2b50124b11b matches
Binary file .git/objects/88/a814562cb6366db6f708736545592ab9cd045b matches
Binary file .git/objects/48/917e06b1a638f7b424938753302f22d0a6dfd3 matches
Binary file .git/objects/6b/2dc82a199faa93df8e627fce9981ef31b5bb49 matches
Binary file .git/objects/6b/630ecec0255068c020eb6afd1eab1b731d719c matches
Binary file .git/objects/b2/e69d1cf35e0a91d8ec0d0dad1a1b12167dc86f matches
Binary file .git/objects/70/9dd3a21241459ee59045f95f1cc6a57de72e9e matches
Binary file .git/objects/70/f84fb80303057366fa8b56264b887a62411133 matches
Binary file .git/objects/70/6b6c412c79d4c0e473ed3334796aacfbf64967 matches
Binary file .git/objects/49/a9d15949ee31350fec402b4ca195602d62606a matches
Binary file .git/objects/49/7b17c1156806128b59c8859b37168133210f2f matches
Binary file .git/objects/49/1ea5380d8d23aeed355f7fcfba66cd495675d9 matches
Binary file .git/objects/49/65d756c47700a82663e1140862f66486c47c3f matches
Binary file .git/objects/2d/41cf6d52e186633f014b7c0a5b482c08fc33b6 matches
Binary file .git/objects/f7/037255c8d5249b35cd72a47747b12f0789a532 matches
Binary file .git/objects/f7/0dc99acef673fc5a6408c0f7498dc7b027468f matches
Binary file .git/objects/fc/cc56352fc7b6bc9f299b66e818c6c168a7f613 matches
Binary file .git/objects/5b/d981384202504e528fa968edd25814679228a0 matches
Binary file .git/objects/5b/fd9592f9a3e57de8b76b7c4e3c5f99e1ff8973 matches
Binary file .git/objects/5b/fe97c26195669ce512e6a9e4f8fadea543ecfa matches
Binary file .git/objects/5b/19ff1391301a8174c2fd0f4bb268595c76223b matches
Binary file .git/objects/08/dc1612734966f0ad460ffb5a589e9e6aa8583c matches
Binary file .git/objects/f2/fc3e8a70dff0af5508690162fe0478760ba487 matches
Binary file .git/objects/f2/600916205eccba338346f243b1c2eb9939bf71 matches
Binary file .git/objects/e7/c041e497c887c998d89901dd28874f03f2fc5a matches
Binary file .git/objects/e7/e16093ce12c3ca1cd3aac33ebf46afba34f4a6 matches
Binary file .git/objects/d4/3e06d90831f76d54e04c4693765565f96ded7c matches
Binary file .git/objects/d4/c1f57415bff3bb4890461fd7c59e3f0b9d0b8e matches
Binary file .git/objects/58/93ce970b21fe12f707e4c3be55767e31c0034f matches
Binary file .git/objects/58/7b4935a52accb5fd2683c2f5dd7e054c12b4fa matches
Binary file .git/objects/58/0c30bd9040a9bbcc8195022dd48363ad558926 matches
Binary file .git/objects/ff/8d736ad755a54cdfa408c46ac3ad2d1877a1ee matches
Binary file .git/objects/ac/134056634333f8ddd7d11274a17f7c91caf29b matches
Binary file .git/objects/ac/187f162d0fa9e3976d30c78876a5cf3826041b matches
Binary file .git/objects/ac/948c8efe6978e98960fceda85218b84a3c3415 matches
Binary file .git/objects/69/ffc77ca4b3a7960adcdb91b66da10b0bb4fd96 matches
Binary file .git/objects/69/8ef01e0925152bd35525785308c3e640bb3086 matches
Binary file .git/objects/7f/a9607c41f78c495e75d2a8be30be9647d7e7b5 matches
Binary file .git/objects/7f/65fefc8de03dd9d219da356df8aad44cc85216 matches
Binary file .git/objects/cd/9d4895409fbb0f5f36533c4a5e8af8c3fbafad matches
Binary file .git/objects/cd/92447c2290bf4d0410a20b6a56af183922b429 matches
Binary file .git/objects/8a/cf0361e3e7a392f3c9a5143632c134ca646109 matches
Binary file .git/objects/8a/31c38921a6b04db5c07f9a8412b17ced99c73c matches
Binary file .git/objects/8a/8661290c6e31a1937418ea0d5b33b1038b18ab matches
Binary file .git/objects/8a/9e0c013e91a74bb87b318b7f2f3f094c341bd6 matches
Binary file .git/objects/77/d7a69d25013ffdd51aaa3290bfd228c9cb74af matches
Binary file .git/objects/77/a5e26252f6116cb2b25e2c7add0bb5e9787cb1 matches
Binary file .git/objects/77/2d736a26057ff095581a41c6b320e96b30a80f matches
Binary file .git/objects/f3/0b04aac291dea3e6f58b0869c63a0c32f7c4fe matches
Binary file .git/objects/f3/b11517e6a0ee9293f695857fdd4c77ec674d22 matches
Binary file .git/objects/87/6b6c869f2b5b2e2d40a53ddbb1dc31e64d4c64 matches
Binary file .git/objects/87/02541a9c913e71669cc6ef62cef16543f688c4 matches
Binary file .git/objects/30/6070ada735a1a0e8f78d9ccbc47a0efe3bc55d matches
Binary file .git/objects/30/bdfe263b67f58ee9787b413036de6984c7628b matches
Binary file .git/objects/64/47d380eba51719547768c6702835e383d80340 matches
Binary file .git/objects/64/8327b90027aaf896f77bf7fdd787cba9a3f258 matches
Binary file .git/objects/fa/27c7dc70ffd80dab51e1258be5ecd6eee86c9a matches
Binary file .git/objects/a8/a44e301eedbf6a1088829c0318a82d5a126834 matches
Binary file .git/objects/a8/507e23fc68d2482e17b478a26bf59e7357f59b matches
Binary file .git/objects/8f/a55a93cffd20e66cd625ccf9fb7ac121cc2211 matches
Binary file .git/objects/8f/e756ec6e640c3e50f6cf301a99c89253a1abb5 matches
Binary file .git/objects/33/4d8ccb0f78d9ca1124472056171799b2f9024e matches
Binary file .git/objects/b0/33cc641133f917ff0903ad05389af6d39f87f9 matches
Binary file .git/objects/b0/aad0c94b9e5502e162b710dd1ce0b9491f7b03 matches
Binary file .git/objects/ae/c52cf302fda17cf9557855a35e29dd2ed5497f matches
Binary file .git/objects/a2/f50e938f168d704a945cfbd1d0f9a04aae235d matches
Binary file .git/objects/a2/ba44d375987e7d3504adce66f1dd78efbfddf6 matches
Binary file .git/objects/a2/fc23725cd6da1dda4d35be78f411966150150a matches
Binary file .git/objects/80/5205b2a2d4e96430cfd5c286994c2e7cb79bb4 matches
Binary file .git/objects/b5/e754ab42be6a36820e76f889f34373a29fee61 matches
Binary file .git/objects/b5/7c78b38163c97d84ba82e73058df1876e207f0 matches
Binary file .git/objects/63/f5f78cc2d6be86d3fac76aa1d8f7fd6628f0d1 matches
Binary file .git/objects/63/1510736f95d7aa72361bc80f23f285523dcabd matches
Binary file .git/objects/3c/e858876d3be943978e9cecaf69a1722b12b71f matches
Binary file .git/objects/3c/bbcff5c5407785be4ce34a89f0ff29709914c9 matches
Binary file .git/objects/3c/bc4636b821647dccc895de56c48cb018594883 matches
Binary file .git/objects/d8/1feff594fa9d5dcfc7fba54c53d0a3ec465eef matches
Binary file .git/objects/d8/90ed8d3c7f0375dc9f3a6a1178254d2c2db011 matches
Binary file .git/objects/d8/89535cf279f9af2d5688fd0ef21a5c1caf0719 matches
Binary file .git/objects/3b/1bea5a177301abb2d6b28b9887a3baf2a1a1ae matches
Binary file .git/objects/3b/cbb9a10612d223434bae8b81bd75b72de3d4d4 matches
Binary file .git/objects/3f/fabca9dd9b0b3281d169f0b4edb92a246b18c6 matches
Binary file .git/objects/3f/06a5b81e98113fdd11e13b85fc24a0440f21bb matches
Binary file .git/objects/3f/7cbaf1ed41ad0df47d616e9d929562d3e8042d matches
Binary file .git/objects/68/8cd2a37fd2c1bd7fdcb417f834026a25fa4945 matches
Binary file .git/objects/32/18ab61360d8753c113674005dd8890d584aa95 matches
Binary file .git/objects/35/f0f9790ba4f64bc1200411a8f660568f8d559f matches
Binary file .git/objects/37/0c89b10f90501a4684c604ddbff9503481cf7a matches
Binary file .git/objects/37/d3afcea74243abcce4ccde4cb8a3590985c7c6 matches
Binary file .git/objects/6d/4992da31866946e9d39e427f613d376616dc14 matches
Binary file .git/objects/b3/3cb721ed77daa5c88df8f8995d22044a1a8f41 matches
Binary file .git/objects/51/b7c9f57ea6a15cfe60a254a7fb3cd04fae87ea matches
Binary file .git/objects/cb/4eb8fc2769ae240ebd089e76a2a4b87c7841e6 matches
Binary file .git/objects/12/e388093fd9b77b2f09e31ac70e4f1829bf72d4 matches
Binary file .git/objects/67/ca528ac06a890e8428e52961fc78d7b052a84f matches
Binary file .git/objects/a9/c5bc8500c517f58169a52c1dee5f1b78a3edff matches
Binary file .git/objects/a9/e09d73308ea73514230cc3b437b5435c85b268 matches
Binary file .git/objects/a9/725dc63e9f410d78a4fd4b70d1f88da0d38d9e matches
Binary file .git/objects/e2/f68e80a2fe142fc6fbd039d9bddb7e1f890784 matches
Binary file .git/objects/af/80e51e527efc00897eae04ca6fe6642fd89d1b matches
Binary file .git/objects/af/15aee1e4a0c4911acb750ddd586659d402285b matches
Binary file .git/objects/23/88f9acdbf8e553d79ff6a27b93703020a3739e matches
Binary file .git/objects/23/ff3d4dc9a9417e0650553b6a8efc768e61eabe matches
Binary file .git/objects/23/d3b02e8af0d6d6cc6b7a8fc149b43a1c7c14a1 matches
Binary file .git/objects/23/12b129e1fd984240bc5813d56da9760eb9bd3b matches
Binary file .git/objects/fb/9f32fe2cd7880b0a8304f0e6fe0e9a19f5c2db matches
Binary file .git/objects/fb/e27a1e5023312bf0a421969ed8989f9d24b4c6 matches
Binary file .git/objects/fb/60cda156d45706e853f08df09f0407e488d1d3 matches
Binary file .git/objects/79/c784a991b3d10414e76dfc6ed4af245e483ad4 matches
Binary file .git/objects/e8/4a064cb9d602d740fd14de8635f794dd031932 matches
Binary file .git/objects/ad/a366ba53578a228fc31bd6d2053ddce80f30f4 matches
Binary file .git/objects/ad/1b0f13fd17f9db46db6e1a7a03e35faa5b02e2 matches
Binary file .git/objects/ad/25173c86693ee2e2fff530436c49c4bd0f57df matches
Binary file .git/objects/ad/0f0f9a82816cd991300ed97f6740a94f7a3386 matches
Binary file .git/objects/42/5867145c79b2e54f892e51d8f0da33473cf53a matches
Binary file .git/objects/42/0f69b5d5ed3052d1435f4f1ca9cb3ac6aa76fa matches
Binary file .git/objects/ca/ef83c45c17f4986a3fc8838769a64d7a1e7606 matches
Binary file .git/objects/20/f4e923bc4f10e355957e90c2c8b3ca67b742e1 matches
Binary file .git/objects/20/eda447c4998883f693b011f930cc05ca8950e0 matches
Binary file .git/objects/c8/d229da8266847c15ccc1d3af7afd19c3ebc07f matches
Binary file .git/objects/c8/a3ee2849fe04ab8776f6e961cf2adf5abb6f50 matches
Binary file .git/objects/c8/375a5972f92dd0ecf79f2c584dd6995f8287b7 matches
Binary file .git/objects/04/b1b81666ac0407ffd05a7157048eabc6e6f911 matches
Binary file .git/objects/82/88ff04ac8b18c677eb0ee58a0267691654e04c matches
Binary file .git/objects/82/d074457bce0a259b88970510ae6569d402ca29 matches
Binary file .git/objects/82/55747244e641d599d686fadecb167a9fc6b4f7 matches
Binary file .git/objects/07/5962f5081cc09b4295ff87a35b8d9f057148e3 matches
Binary file .git/objects/a5/52702b61a9a880471746dad64b17787b9b2941 matches
Binary file .git/objects/a5/45e18eff1f159522e2ad9fb719279e176a85ca matches
Binary file .git/objects/a5/ea6b02f8181e3b7d8cd3a05d27ec61a1716d8a matches
Binary file .git/objects/f8/3e615bb1e010c8723510a99abb01d714c0f275 matches
Binary file .git/objects/f8/c85aef722f5d2bf2aa50450ebf333044fd0894 matches
Binary file .git/objects/73/be5f2e0c3723b28f1590cb662d1a1b70ed5296 matches
Binary file .git/objects/59/907ec935d36d8e498766730138741f0143e89d matches
Binary file .git/objects/59/9682f5a5d0f39e350ff66b43c438d7478ef25e matches
Binary file .git/objects/53/e0abe9f16337ba81f14caf127ef6a9a8f5a7e3 matches
Binary file .git/objects/53/3647900bfd21a8b7b09b6f32e0dee4fb62c8f7 matches
Binary file .git/objects/b1/74bc9c0332ef514561b5d94b0f9a072e4bbfa3 matches
Binary file .git/objects/44/040c4d22b57340a7c67034504ebf486daa05ef matches
Binary file .git/objects/84/c7f616716e2a71bce250c9dad86b966a5ee012 matches
Binary file .git/objects/84/19788f79866df3db1f2b396e8c2092ebfdf1f2 matches
Binary file .git/objects/84/b3b7f741de84841614b22b956876179f738dff matches
Binary file .git/objects/84/4eea47f9cb2f4e3120fa68a60c54bb4c6c6c4e matches
Binary file .git/objects/84/1e9104bbce9f3f881271ee0d643b75282d205b matches
Binary file .git/objects/b6/a3eb68cb4f2e761a081b6cdbf61704e9ba5bd5 matches
Binary file .git/objects/5c/f451850addaf0edb83e2b422beded39687a5cf matches
Binary file .git/objects/e6/a93703b3f034ca9f065d5820af9d901bdeccff matches
Binary file .git/objects/e6/363fb6104437513ed564e13a0842ae2afabf1b matches
Binary file .git/objects/4f/0615fa06fa642a531309dd0644fe60cccf9d44 matches
Binary file .git/objects/4f/6c34250f94d8bfa8ad92c83efba8b631fba460 matches
Binary file .git/objects/2e/0eb3676b3ac1961d17acabb4daa3fdc5ba8505 matches
Binary file .git/objects/df/4689cecc602a17bc6dfbe183dd23504a8970b1 matches
Binary file .git/objects/df/19216cead5d9feafc9da6a10cfcb7362e1649a matches
Binary file .git/objects/df/bcf4b878dc452455038e71a0406c8eac570a16 matches
Binary file .git/objects/ba/b41a66d184670f79bdd7e64c7840a0a42f52dc matches
Binary file .git/objects/ba/4c26ecbd862a46ce39cd8f24ac281fa1c20b3c matches
Binary file .git/objects/10/5ba18fc3bb8431ee2f2664e933ebc7de40c461 matches
Binary file .git/objects/4d/4d9266646fe2b275a5ded0aac32e8695fa3a56 matches
Binary file .git/objects/4d/7dfdf1a315df6cd3b92564c2719bc815d694de matches
Binary file .git/objects/a7/423b7ec986cfeae0fe439a6f697e51f5eff92c matches
Binary file .git/objects/c9/57ec43e5075bcdc26230e20a93ef6f013bfa58 matches
Binary file .git/objects/c9/ba1109e316c23f1c73211a760c30d770735dd3 matches
Binary file .git/objects/a3/faa0ebd560ac1f5af6b1180a50f489125860ca matches
Binary file .git/objects/a3/9eea27ff32ff60540b5017959a95274b80c03a matches
Binary file .git/objects/a3/6bb8815d18d2a6674449aada49746330854f36 matches
Binary file .git/objects/b4/932995294b684c3a7c822b24224ae91b5a3953 matches
Binary file .git/objects/a6/fec055d0b66067fd590441b06c2d2a141492ea matches
Binary file .git/objects/a6/b1a3cd77920604c6c9ff41854be7a1b347abfa matches
Binary file .git/objects/a6/0a139a94e1bdb1dea9a76c1a70005b9c67869d matches
Binary file .git/objects/a6/b6431c1de6e39d7a9ae312ad9d3b2f2df57b81 matches
Binary file .git/objects/0e/f7aaa76d4728a67ac571058ad33daad3466ac2 matches
Binary file .git/objects/0e/2217df58da7e4272ffd9ce40a0926d099213d1 matches
Binary file .git/objects/0e/d299828315945e98eb39e3b4ca3525d4837e6b matches
Binary file .git/objects/0e/2939d81d1deffb48e81603b184f5a265bd1e9d matches
Binary file .git/objects/7d/dbc3f9d38e2d90d5895553a12a982da3966128 matches
Binary file .git/objects/36/56e2ee13c5c14986a1060f74ae8bb2d39e9b85 matches
Binary file .git/objects/36/31cf1b221b2a3bf3e5e0fb02457338a39132db matches
Binary file .git/objects/36/8b759d48e0d989253a145de2c55c3f7b6ad066 matches
Binary file .git/objects/36/8f369d501df126dd1eecba3728e12b561c87db matches
Binary file .git/objects/1e/669db94c360f64295857ad83f6d04e24122b2c matches
Binary file .git/objects/3d/285074f505fd82fe9a3028bc2f4e9c1883f267 matches
Binary file .git/objects/24/582b4da4b7e8d8ca00968cbe4986c4fe21a0ad matches
Binary file .git/objects/24/4249e07c063594fc3f385937781d22b0bd2371 matches
Binary file .git/objects/c0/f23a1a3111cdbb113c152789a052852238ecdb matches
Binary file .git/objects/d6/c5621eb5ff0147606384a3a08d1054a85d56a0 matches
Binary file .git/objects/2b/0b8abe157101b5be555b13374b68645d0c0a8b matches
Binary file .git/objects/ab/992498bcf4e338948741641ff9a53645ec9c75 matches
Binary file .git/objects/ab/a808bde2b52dde3b559d31fd3e9e75771140da matches
Binary file .git/objects/2f/b368bcca5e8ec7392a3c7be9759758b256f171 matches
Binary file .git/objects/02/8dca4272aee56836c64a68974e8cd4bf4ef5a4 matches
Binary file .git/objects/65/610fb505b7330bc92b4284878462b076ff7f9c matches
Binary file .git/objects/65/2a47b36c8e83e203b9dfe968b1aae67a113fcb matches
Binary file .git/objects/65/1aa62b58f8c6830c66922221a87a3cb2d01975 matches
Binary file .git/objects/65/2bc99eff1f34d1c40e34259af31291d4069d85 matches
Binary file .git/objects/65/7dfb56c0acd8aef6cf7eedff4ee65a2d81f329 matches
Binary file .git/objects/0b/512a0e59797e0e7e3ae006d44dea83710d2508 matches
Binary file .git/objects/0b/2552f29852e4e1121d99ddd8ed7537aa414abc matches
Binary file .git/objects/7c/61a375060504e4103be65377cbc9542519494b matches
Binary file .git/objects/7c/36a429e4f1a6b4bdd282c6481bec1ad6820e47 matches
Binary file .git/objects/be/e0ba0dd45b1472d1c0ccabcf8129f374ceb606 matches
Binary file .git/objects/be/8cbc7bf8d118e154cd59aef20bfe9bb9b70968 matches
Binary file .git/objects/be/008ffc1adcc102f5907b236fc99b839d59d6a6 matches
Binary file .git/objects/be/cf72417998054d4007a0155005425041d3f155 matches
Binary file .git/objects/50/00966ed473eaaad125bc8879f4e47202b71414 matches
Binary file .git/objects/50/50fec989ccb23041ed7010d2973f834fd35123 matches
Binary file .git/objects/50/e83e276406714b03ab8d199a16259ee574ffbf matches
Binary file .git/objects/34/c10aa4f508714da040e81389fa51e56ba2d97a matches
Binary file .git/objects/4a/07bb3b7f807c10e42254d155990f325cb8e108 matches
Binary file .git/objects/4a/12160ec721ec4bbeb7bc215ef6dd9afa0b37a8 matches
Binary file .git/objects/4a/99bce04600aca879d1c46bc8380d799c80d100 matches
Binary file .git/objects/4c/0ab8a2bc7c146bb6322204803a92af82153ec2 matches
Binary file .git/objects/ef/5f214e150a59102dc313c6702483b6e26d7a9f matches
Binary file .git/objects/41/aaae0a8256df4694d8cf011ea603a9677a25fa matches
Binary file .git/objects/6e/0477850b0b25ae384f033c7a0610c52113af8c matches
Binary file .git/objects/6e/ab210bd135045071b09e3f84c8aa78a433df14 matches
Binary file .git/objects/c6/a34200ca6658368300c054b8faae57699c304f matches
Binary file .git/objects/c6/a116fbef976db59b7cb9239e3e995262b4a704 matches
Binary file .git/objects/ed/9c06bc90d2a03fd9f48c6d245bdcc22770d859 matches
Binary file .git/objects/28/7cb23fe338c899eca63e2d7231d89469e02c99 matches
Binary file .git/objects/28/3fbced32402f270ea43b3b8b28f87f7fc28856 matches
Binary file .git/objects/5d/f0e9c1330f5376e41241fe63a98692820d9bd2 matches
Binary file .git/objects/fe/94707cbbbbbf7c69987cb3a4b4163d76a9fb08 matches
Binary file .git/objects/fe/dda08e1d6730421a129e286117298821fd75fb matches
Binary file .git/objects/fe/8c75280c19f90743c154a7b884ad893a275d4a matches
Binary file .git/objects/19/aca125e331783bad87330e8e7213f72072e580 matches
Binary file .git/objects/ec/a3e3f5a19dac0305319104ae15f5e8cb0e7ea5 matches
Binary file .git/objects/00/39560018ddc942fb2f10002ddd4d94e3045b8c matches
Binary file .git/objects/00/6885ef82e49efcc10a7147fece62dec86a882a matches
Binary file .git/objects/00/b59ededcc1fde171a5b58ed013ae5fd19ac4b4 matches
Binary file .git/objects/0d/031b5b4bdd6a2257f416bdf1fc1ffdbbb4398e matches
Binary file .git/objects/0d/2dacf704f253d352c55288f48156370528c510 matches
Binary file .git/objects/0d/2bab07aefecada5942ae1e3ca9e2d4a993820d matches
Binary file .git/objects/0d/265d5da78b7be2ca705a5a9b7eeacfbcd5dfd2 matches
Binary file .git/objects/94/b406d1518431bc17dd36625bbcb803fe80abc2 matches
Binary file .git/objects/94/1254c768b097675a196acaf43bb2498bd16345 matches
Binary file .git/objects/05/e972459e7e83c9eea89a9c81153200a303873f matches
Binary file .git/objects/f1/73a912ad086ac0189191240fc728f5c8d81ece matches
Binary file .git/objects/d1/4afa38384e599969135d7178342a0624f47e2a matches
Binary file .git/objects/d1/5e41ae7ba255217ed947ccf95f87d4693456ff matches
Binary file .git/objects/bf/c9b5a4bd044b930093f5dc6d34c707cc63db89 matches
Binary file .git/objects/bf/08cad14678c17fbcc611578f8e56c5f7948235 matches
Binary file .git/objects/6f/a47395f62338c98878d178b93ffae0351b8dda matches
Binary file .git/objects/6f/70d973e0b022be4b6128a0d96d9e687c09fbbc matches
Binary file .git/objects/92/3460ed14a7d20ab84ffa2fdcd60bda110e7cc4 matches
Binary file .git/objects/92/a2995f7eb986dcab1e0348c10fff8b9a6bcee5 matches
Binary file .git/objects/92/2572c8fa4bab0def739058f0b0ac2a4a6c74ec matches
Binary file .git/objects/74/fa980fb73d8e102a2cd61503a1ddcd6b7aa471 matches
Binary file .git/objects/b9/6f2786cf76cac1b6e75505b89b3635de3c84c2 matches
Binary file .git/objects/66/4d3e43b3ed497af19e2e30f7769228a931be61 matches
Binary file .git/objects/ea/1dc9cb09ba54c795ee298c03eca32cfce4928c matches
Binary file .git/objects/ea/76c44d6561e43e3598acfde440150ffb600fd7 matches
Binary file .git/objects/ea/b41e4811b15d074acf74ab27592d9eb56bb678 matches
Binary file .git/objects/9e/a5d492e631f0049959e9740a459896197a7bcc matches
Binary file .git/objects/76/8290032c395bce235e73fb7bf663412c944445 matches
Binary file .git/objects/76/d63f676cd838f76ffc20a75508ad377428ddca matches
Binary file .git/objects/89/811056338ef199208fbf48d5a3471f1cf64266 matches
Binary file .git/objects/d5/fc10de15004e98d4f8490aa8a7ec8a4c7efcff matches
Binary file .git/objects/29/e0707ed362a3fdbdb9116685ba8edf888ba8bd matches
Binary file .git/objects/29/921ad2919e74257428efe628d344e954fdcde2 matches
Binary file .git/objects/78/e13dea23492dd5f69953220c53d25b898f2b95 matches
Binary file .git/objects/57/eed450c91cc5dbae214445d16b72f52d7a7c3c matches
Binary file .git/objects/d9/3a422709c68bbb4582c6de876d336d5162cac2 matches
Binary file .git/objects/d9/fd3cc8e9eb2dfb8bf26ce9c56bc94a1eb2f744 matches
Binary file .git/objects/6c/b0bd8656d5861ee0593f441c17fc6b2dab339d matches
Binary file .git/objects/55/df5c4a8101f81ae5ddeb029f3f1157c9509c90 matches
Binary file .git/objects/c1/efb1bdee871759fb05b3ca5267bf24f7cd0a98 matches
Binary file .git/objects/c1/5830170311a2dc78429351b2f1ef963b30a74e matches
Binary file .git/objects/95/e422f04793610960414529f543ae6d82132c6c matches
Binary file .git/objects/31/08d172a59dfec78dfcf1e39c4fe731797952d4 matches
Binary file .git/objects/31/215dffe754d3b5d8ab7b48aa00f7e6e489e655 matches
Binary file .git/objects/31/89f3a0b94a030290b286ea4a78623ddd5ea2e3 matches
Binary file .git/objects/1f/ff82a060c32080a99810c4d9413dc97a441910 matches
Binary file .git/objects/09/b7872aa67cf9cecfe9908eff7ed7a77cd53a77 matches
Binary file .git/objects/09/82c65d270d20ba121c2bebb8abfcd411c3639f matches
Binary file .git/objects/09/ea039d45e2772075c7c195c5341d6506c1df8d matches
Binary file .git/objects/b7/40c67a4313d496c78a0fa8d360ef30d9fce7c1 matches
Binary file .git/objects/b7/d1035a745bb18b140e5a6aa6c9e32ba63acac5 matches
Binary file .git/objects/b7/533ed9d81499d33bf090c61dc75426ffc82266 matches
Binary file .git/objects/b7/8908119e73409581dd3161976a94ee50e9712f matches
Binary file .git/objects/b7/842d3840743c6f25ab0bceaafcbd97e74e65fd matches
Binary file .git/objects/b7/f96d8bcd59650c5a6bb1ad57b4a9e9e838e0cc matches
Binary file .git/objects/4e/241e8b15ba9abf83faa2806275bb0e97e1a4ee matches
Binary file .git/objects/11/9658c68108451aa1964298cd8e8f513b275bc8 matches
Binary file .git/objects/11/f1dd3e31b305be45b61643a42a0d742abd688a matches
Binary file .git/objects/5a/495c4651fecd6bf3d920130123f47f55f6588e matches
Binary file .git/objects/5a/fef49a9cdd7675e75e87e6fc5e356d42957cc7 matches
Binary file .git/objects/83/6c69ef3fe9644edec51b7552bef56cc4b0fb94 matches
Binary file .git/objects/83/0c77c0bcf20db9389d4fcd170b5b929176967e matches
Binary file .git/objects/83/0bccf38be9ddf4df11d4014ac43cc527831206 matches
Binary file .git/objects/e9/993cbd0a5e6295d806a566b9ce4c8d76aa299c matches
Binary file .git/objects/14/a45079c7a65d74166b8cd2b720fb6c9b10dfbe matches
Binary file .git/objects/14/6318e0c330cf7e65cb1dede2462251b60c8d37 matches
Binary file .git/objects/14/5a2e895db69ce129677e816156d620af54189c matches
Binary file .git/objects/14/39862dd2ddf1aba0816deaad0e13014aaa4a91 matches
Binary file .git/objects/14/fc63158be840c550d7eb7a9d42d6ecb23b0c77 matches
Binary file .git/objects/e1/c178b4427f6aa7bae76e9bd41ef74c78248d36 matches
Binary file .git/objects/98/c4e6aebae157c63794b3aaf9c2c6e5c33468b7 matches
Binary file .git/objects/98/0de35ca6cb582cd8f0cad26465569dd021e74c matches
Binary file .git/objects/e0/d892251e02c4573000e56f11e56ac11b422eb0 matches
Binary file .git/objects/e0/297aa38475f5adcf41562be33f20a4f9a159e8 matches
Binary file .git/objects/db/9f6746431a4aa24f60baf762b2c37fb965275e matches
Binary file .git/objects/db/45499615db12f6bf0c2fb8c081b22c3f7cb3ef matches
Binary file .git/objects/db/452b0917621798578d14c3f2115943969c37eb matches
Binary file .git/objects/6a/8fb1c96fc7600ebaeb6abe125be5c9af5bb6f4 matches
Binary file .git/objects/6a/4472daed7575a319e0ee57cdf26836af34f5bd matches
Binary file .git/objects/f4/9b8749bd0fae9336fca588f0044d8ebeac6374 matches
Binary file .git/objects/f4/d9b2f34f1fdc6a3910f83b43f33ca826f1ae20 matches
Binary file .git/objects/c3/816c660fa087f64d8af500a3c5cb6f71a5b72d matches
Binary file .git/objects/60/91dc88c12f897bfb10f769480fed0c6d5e85ef matches
Binary file .git/objects/60/33d5d34f0404784bb3d379229fdf14eeed5516 matches
Binary file .git/objects/60/402d0a90b20895060b0af9d7b08c0121cdd154 matches
Binary file .git/objects/3e/fbb5f7e43a6abfc785d92d3cf19b29b310be31 matches
Binary file .git/objects/3e/a99074acf473d512e344844574d354ff35c4c1 matches
Binary file .git/objects/43/a26ee66c3ac2e2277ae7faa1053b72e7ace63e matches
Binary file .git/objects/43/766bf1b5ebfc0c67e4d8a0a45616e4568d81c5 matches
Binary file .git/objects/26/ff2f16743f55f7cf826bf791d3e3c6164157c6 matches
Binary file .git/objects/90/96aca4dbc7f0cded660d624dd364b831cdbfc5 matches
Binary file .git/objects/90/8c71c61d916fcf25317c0072ff9c5eb6496930 matches
Binary file .git/objects/90/4c530ab0997f3e776e6f83549649c6f1f596cd matches
Binary file .git/objects/90/c14ef035e6e1a0db6d017c970bf9b179045ab8 matches
Binary file .git/objects/90/fcd8cceadf478b1272cf6ece651747497e8bb7 matches
Binary file .git/objects/90/4c278a0e307d1ebc22fdbdb77da74e64849818 matches
Binary file .git/objects/46/7bd19e51ffc4f1bce00ea88496302c9ae9d6f2 matches
Binary file .git/objects/46/44f802387c21cae6a486294cd765aeab22911d matches
Binary file .git/objects/46/a91247d7703bb161053e12fbcd39f749c274ba matches
Binary file .git/objects/81/fe50cbd39c9a0a40642e5ed741001dac726b43 matches
Binary file .git/objects/81/0b05a1d76973ebdf28f914d03c91318c021e85 matches
Binary file .git/objects/c4/468305e5790f5fe0c525b363161a4dacb5a786 matches
Binary file .git/objects/e4/41817d13f8b0c4f969d49489de95bb748b050d matches
Binary file .git/objects/e4/75222a4c9d7a1a1d5cc218e58210509a484add matches
Binary file .git/objects/aa/e1c1e8589d8c04ec4186517752feac5d7ede2c matches
Binary file .git/objects/9c/19966fa5cde0e997a005cfe3d97c9e6e170f5c matches
Binary file .git/objects/9c/eba157e27e57d74a9096a2f35f0ff3008ffb10 matches
Binary file .git/objects/9c/aff4dbae88823f109b1d3ee99c7535f79a55ce matches
Binary file .git/objects/9c/cc4ea31b6a775634b1ca52d818602dbe7d39bd matches
Binary file .git/objects/9c/57034ea71f320ab81178b71369ed3cdc07ea13 matches
Binary file .git/objects/bb/cb24f1d2e2e0f9c015ee7e6f7a8ba90376e160 matches
Binary file .git/objects/bb/4d051e7b4a3b0b48a81fa91bfc0fb3848745e1 matches
Binary file .git/objects/bb/0a994ac69093d728c27b212c69205f75f869c4 matches
Binary file .git/objects/bb/42baa3da01ed0e01ff9a61f9900a8c2e1293f3 matches
Binary file .git/objects/5f/edcc7c7f6600ec87df48f65851c01322c31f50 matches
Binary file .git/objects/5f/7444d99b7a25ccc8260d0d9cd6e05a95c287d5 matches
Binary file .git/objects/5f/5da5b930e88b9a3a9ecc02270cebc1431b1718 matches
Binary file .git/objects/8c/a80dc30d5bd3cf051cfd5b794c0e5a80f3a77b matches
Binary file .git/objects/8c/e222c156b0692e5847ea81a4f487ca51211214 matches
Binary file .git/objects/8c/e04e39ff6b6067a601cc8af888d14276d9f39a matches
Binary file .git/objects/d7/8f69da534a19813ba9d7bb3ab28b6095f3563f matches
Binary file .git/objects/d7/2d87868c8e31edce579f852ee9de9999cbff4c matches
Binary file .git/objects/75/a872baa62a5fdebb143b5d32b0e8d3feea54a2 matches
Binary file .git/objects/3a/a66427409c4e3be1e061a8d910cba38b4766f3 matches
Binary file .git/objects/3a/f98a30ac217e7e7978c87ce1327771c42b10b7 matches
Binary file .git/objects/3a/3a9a590a2b677031524ad351f6e20e88216b8d matches
Binary file .git/objects/5e/b1069575e7acfe94641deb49af6063a809f098 matches
Binary file .git/objects/cf/3ae2483435f2d0ef10b9fe9e74008c091527e5 matches
Binary file .git/objects/45/a3f72e1127cd02f97b79d995277bec67a0812f matches
Binary file .git/objects/45/6903538990dedcdc15bfef32dc6e0112033ef1 matches
Binary file .git/objects/d3/186a1bfbf72ab8a677f5d306b447f8a2d79b08 matches
Binary file .git/objects/d3/afcf3c63f671b65fbfcaa4538e9accd6878a81 matches
Binary file .git/objects/d3/5a79efc128c1a5be38cc13f0def7f0f953669e matches
Binary file .git/objects/d3/23b8982e552c1dcc7ab385de78786b661aa36a matches
Binary file .git/objects/d3/cc93847d0e0a64b0214d4ac47c5968361600fe matches
Binary file .git/objects/d3/619a3ecc6b2048369b4020eec303545f11a7ad matches
Binary file .git/objects/62/8411cd53cd081460613fbfbbaa095e73366b1b matches
Binary file .git/objects/17/7832b51700faa0916078d65a1e2d6f025a7949 matches
Binary file .git/objects/ee/36505caf726c3fa6ed304b536ce309a71529a7 matches
Binary file .git/objects/ee/791ffe79433a946b41276333950a6e3c33188f matches
Binary file .git/objects/ee/375d50996ef3eba6bf021b175ae6cb17344341 matches
Binary file .git/objects/ee/eea68656408efc8e29e7bad8ba4ff013ead40d matches
Binary file .git/objects/18/4c8241c832a6705031b3a1f785eece8e380455 matches
Binary file .git/objects/18/4ac16a0a1c2c45304ca7580145eb067e3416a9 matches
Binary file .git/objects/9d/619e0d644de8b7342f1300a9829a068eb14e86 matches
Binary file .git/objects/d0/630b961d17130f7117e669d43b62b2a59dac71 matches
Binary file .git/objects/16/66d6cd469b93d1190681cae13bd8b51f24a221 matches
Binary file .git/objects/16/60727108385418a2cf07edba939f2a77ed9399 matches
Binary file .git/objects/16/b31bd5e227e0d314d569888c926d665b840cba matches
Binary file .git/objects/16/92f46c1a6e7cd35d79910deeb56a9e1bff8d93 matches
Binary file .git/objects/a0/d0e549a626a8cfcae5fcdd697bcabf7e0adcad matches
Binary file .git/objects/a1/9e88b181dff1208839ff890154aa69b299ce91 matches
Binary file .git/objects/0a/badd30f141913977806fc6892cb34810d7359b matches
Binary file .git/objects/0a/b34c0fac314d536c06b4e06b1358cade0e21b0 matches
Binary file .git/objects/56/2c45102a6fbc2fea2733100ddeba700eaa06d9 matches
Binary file .git/objects/56/b4ed29683f07f7798055b3a848846bcc9d94d6 matches
Binary file .git/objects/fd/83bcd4087f5edacbf2bf81b82e83d49c9c049b matches
Binary file .git/objects/d2/de1d428383fb8e925098566ec85815911fd6ba matches
Binary file .git/objects/d2/77a37272fa61bfce5b60f72d50909612084be1 matches
Binary file .git/objects/d2/13b49a91afcd4995de560404e41be5557e9a63 matches
Binary file .git/objects/d2/23c89f48493793c52dc45dbcf288328776fd6f matches
Binary file .git/objects/d2/305cfd5ba4c974fa39bfda983593f0c92bd234 matches
Binary file .git/objects/d2/c9cc511f43da3eb8f0910477925757310efd6d matches
Binary file .git/objects/9f/ea8f23c79348a51c8804b2d582a79619f56257 matches
Binary file .git/objects/9f/a6024c09a679df06bcef847f2132fc07e39c35 matches
Binary file .git/objects/21/3e64968c83b48c27678f5076d84844e24bd61a matches
Binary file .git/objects/21/28cc22ff88410aa3f44178fd5e071d78f5c235 matches
Binary file .git/objects/21/a7af952f8728f93b77d6867ebbf60a7699864c matches
Binary file .git/objects/27/7373effe4910e6818671581ba51b9223599cfc matches
Binary file .git/objects/91/ed6f08cb658bb9b1444ad4ca83c21f71da9f71 matches
Binary file .git/objects/7b/397601045cb8f24c4b00e055b26fbc851ebf91 matches
Binary file .git/objects/7b/ae5a159d61053839dd7788fe546665ed50164d matches
Binary file .git/objects/15/0f383d0d4df217d5cc30fc91c3b77a3e134895 matches
Binary file .git/objects/99/4f41ce967bb5336732175555f6f22ed78f97e1 matches
Binary file .git/objects/99/624cd7bd87174462fb6dc1635485e1b7b2557d matches
.git/hooks/pre-applypatch.sample:4:# by applypatch from an e-mail message.
.git/hooks/pre-applypatch.sample:6:# The hook should exit with non-zero status after issuing an
.git/hooks/pre-applypatch.sample:9:# To enable this hook, rename this file to "pre-applypatch".
.git/hooks/pre-applypatch.sample:11:. git-sh-setup
.git/hooks/pre-applypatch.sample:12:precommit="$(git rev-parse --git-path hooks/pre-commit)"
.git/hooks/pre-applypatch.sample:13:test -x "$precommit" && exec "$precommit" ${1+"$@"}
.git/hooks/pre-rebase.sample:5:# The "pre-rebase" hook is run just before "git rebase" starts doing
.git/hooks/pre-rebase.sample:7:# non-zero status.
.git/hooks/pre-rebase.sample:11:# $1 -- the upstream the series was forked from.
.git/hooks/pre-rebase.sample:12:# $2 -- the branch being rebased (or empty when rebasing the current branch).
.git/hooks/pre-rebase.sample:24:	topic=`git symbolic-ref HEAD` ||
.git/hooks/pre-rebase.sample:40:git show-ref -q "$topic" || {
.git/hooks/pre-rebase.sample:46:not_in_master=`git rev-list --pretty=oneline ^master "$topic"`
.git/hooks/pre-rebase.sample:47:if test -z "$not_in_master"
.git/hooks/pre-rebase.sample:54:only_next_1=`git rev-list ^master "^$topic" ${publish} | sort`
.git/hooks/pre-rebase.sample:55:only_next_2=`git rev-list ^master           ${publish} | sort`
.git/hooks/pre-rebase.sample:58:	not_in_topic=`git rev-list "^$topic" master`
.git/hooks/pre-rebase.sample:59:	if test -z "$not_in_topic"
.git/hooks/pre-rebase.sample:67:	not_in_next=`git rev-list --pretty=oneline ^${publish} "$topic"`
.git/hooks/pre-rebase.sample:68:	/usr/bin/perl -e '
.git/hooks/pre-rebase.sample:72:			/^([0-9a-f]+) /;
.git/hooks/pre-rebase.sample:76:				/^([0-9a-f]+) (.*)$/;
.git/hooks/pre-rebase.sample:79:			if (!exists $not_in_next{$elem->[0]}) {
.git/hooks/pre-rebase.sample:84:				print STDERR " $elem->[1]\n";
.git/hooks/pre-rebase.sample:125:    build on top of it -- other people may already want to
.git/hooks/pre-rebase.sample:133:		   o---o---o---o---o---o---o---o---o---o "next"
.git/hooks/pre-rebase.sample:135:		 /   a---a---b A     /           /
.git/hooks/pre-rebase.sample:137:	       /   /   c---c---c---c B         /
.git/hooks/pre-rebase.sample:139:	     /   /   /   b---b C     \       /
.git/hooks/pre-rebase.sample:141:    ---o---o---o---o---o---o---o---o---o---o---o "master"
.git/hooks/pre-rebase.sample:158:	git rev-list ^master ^topic next
.git/hooks/pre-rebase.sample:159:	git rev-list ^master        next
.git/hooks/pre-rebase.sample:165:	git rev-list master..topic
.git/hooks/pre-receive.sample:7:# To enable this hook, rename this file to "pre-receive".
.git/hooks/pre-receive.sample:9:if test -n "$GIT_PUSH_OPTION_COUNT"
.git/hooks/pre-receive.sample:12:	while test "$i" -lt "$GIT_PUSH_OPTION_COUNT"
.git/hooks/pre-receive.sample:17:			echo "echo from the pre-receive-hook: ${value#*=}" >&2
.git/hooks/commit-msg.sample:5:# that has the commit message.  The hook should exit with non-zero
.git/hooks/commit-msg.sample:9:# To enable this hook, rename this file to "commit-msg".
.git/hooks/commit-msg.sample:11:# Uncomment the below to add a Signed-off-by line to the message.
.git/hooks/commit-msg.sample:12:# Doing this in a hook is a bad idea in general, but the prepare-commit-msg
.git/hooks/commit-msg.sample:15:# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\(.*>\).*$/Signed-off-by: \1/p')
.git/hooks/commit-msg.sample:16:# grep -qs "^$SOB" "$1" || echo "$SOB" >> "$1"
.git/hooks/commit-msg.sample:18:# This example catches duplicate Signed-off-by lines.
.git/hooks/commit-msg.sample:20:test "" = "$(grep '^Signed-off-by: ' "$1" |
.git/hooks/commit-msg.sample:21:	 sort | uniq -c | sed -e '/^[ 	]*1[ 	]/d')" || {
.git/hooks/commit-msg.sample:22:	echo >&2 Duplicate Signed-off-by lines.
.git/hooks/pre-merge-commit.sample:5:# exit with non-zero status after issuing an appropriate message to
.git/hooks/pre-merge-commit.sample:8:# To enable this hook, rename this file to "pre-merge-commit".
.git/hooks/pre-merge-commit.sample:10:. git-sh-setup
.git/hooks/pre-merge-commit.sample:11:test -x "$GIT_DIR/hooks/pre-commit" &&
.git/hooks/pre-merge-commit.sample:12:        exec "$GIT_DIR/hooks/pre-commit"
.git/hooks/pre-commit.sample:5:# exit with non-zero status after issuing an appropriate message if
.git/hooks/pre-commit.sample:8:# To enable this hook, rename this file to "pre-commit".
.git/hooks/pre-commit.sample:10:if git rev-parse --verify HEAD >/dev/null 2>&1
.git/hooks/pre-commit.sample:15:	against=$(git hash-object -t tree /dev/null)
.git/hooks/pre-commit.sample:18:# If you want to allow non-ASCII filenames set this variable to true.
.git/hooks/pre-commit.sample:19:allownonascii=$(git config --bool hooks.allownonascii)
.git/hooks/pre-commit.sample:24:# Cross platform projects tend to avoid non-ASCII filenames; prevent
.git/hooks/pre-commit.sample:31:	test $(git diff --cached --name-only --diff-filter=A -z $against |
.git/hooks/pre-commit.sample:32:	  LC_ALL=C tr -d '[ -~]\0' | wc -c) != 0
.git/hooks/pre-commit.sample:35:Error: Attempt to add a non-ASCII file name.
.git/hooks/pre-commit.sample:49:exec git diff-index --check --cached $against --
.git/hooks/fsmonitor-watchman.sample:16:# To enable this hook, rename this file to "query-watchman" and set
.git/hooks/fsmonitor-watchman.sample:17:# 'git config core.fsmonitor .git/hooks/query-watchman'
.git/hooks/fsmonitor-watchman.sample:26:	$time = int ($time / 1000000000) - 1;
.git/hooks/fsmonitor-watchman.sample:28:	die "Unsupported query-fsmonitor hook version '$version'.\n" .
.git/hooks/fsmonitor-watchman.sample:47:	my $pid = open2(\*CHLD_OUT, \*CHLD_IN, 'watchman -j --no-pretty')
.git/hooks/fsmonitor-watchman.sample:85:	my $o = $json_pkg->new->utf8->decode($response);
.git/hooks/fsmonitor-watchman.sample:87:	if ($retry > 0 and $o->{error} and $o->{error} =~ m/unable to resolve root .* directory (.*) is not watched/) {
.git/hooks/fsmonitor-watchman.sample:89:		$retry--;
.git/hooks/fsmonitor-watchman.sample:103:	die "Watchman: $o->{error}.\n" .
.git/hooks/fsmonitor-watchman.sample:104:	    "Falling back to scanning...\n" if $o->{error};
.git/hooks/fsmonitor-watchman.sample:108:	print @{$o->{files}};
.git/hooks/prepare-commit-msg.sample:7:# message file.  If the hook fails with a non-zero status,
.git/hooks/prepare-commit-msg.sample:10:# To enable this hook, rename this file to "prepare-commit-msg".
.git/hooks/prepare-commit-msg.sample:15:# The second includes the output of "git diff --name-status -r"
.git/hooks/prepare-commit-msg.sample:17:# commented because it doesn't cope with --amend or with squashed
.git/hooks/prepare-commit-msg.sample:20:# The third example adds a Signed-off-by line to the message, that can
.git/hooks/prepare-commit-msg.sample:27:/usr/bin/perl -i.bak -ne 'print unless(m/^. Please enter the commit message/..m/^#$/)' "$COMMIT_MSG_FILE"
.git/hooks/prepare-commit-msg.sample:31:#    /usr/bin/perl -i.bak -pe '
.git/hooks/prepare-commit-msg.sample:32:#       print "\n" . `git diff --cached --name-status -r`
.git/hooks/prepare-commit-msg.sample:37:# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\(.*>\).*$/Signed-off-by: \1/p')
.git/hooks/prepare-commit-msg.sample:38:# git interpret-trailers --in-place --trailer "$SOB" "$COMMIT_MSG_FILE"
.git/hooks/prepare-commit-msg.sample:39:# if test -z "$COMMIT_SOURCE"
.git/hooks/prepare-commit-msg.sample:41:#   /usr/bin/perl -i.bak -pe 'print "\n" if !$first_line++' "$COMMIT_MSG_FILE"
.git/hooks/applypatch-msg.sample:4:# applypatch from an e-mail message.
.git/hooks/applypatch-msg.sample:6:# The hook should exit with non-zero status after issuing an
.git/hooks/applypatch-msg.sample:10:# To enable this hook, rename this file to "applypatch-msg".
.git/hooks/applypatch-msg.sample:12:. git-sh-setup
.git/hooks/applypatch-msg.sample:13:commitmsg="$(git rev-parse --git-path hooks/commit-msg)"
.git/hooks/applypatch-msg.sample:14:test -x "$commitmsg" && exec "$commitmsg" ${1+"$@"}
.git/hooks/update.sample:4:# Called by "git receive-pack" with arguments: refname sha1-old sha1-new
.git/hooks/update.sample:9:# ------
.git/hooks/update.sample:27:# --- Command line
.git/hooks/update.sample:32:# --- Safety check
.git/hooks/update.sample:33:if [ -z "$GIT_DIR" ]; then
.git/hooks/update.sample:40:if [ -z "$refname" -o -z "$oldrev" -o -z "$newrev" ]; then
.git/hooks/update.sample:45:# --- Config
.git/hooks/update.sample:46:allowunannotated=$(git config --bool hooks.allowunannotated)
.git/hooks/update.sample:47:allowdeletebranch=$(git config --bool hooks.allowdeletebranch)
.git/hooks/update.sample:48:denycreatebranch=$(git config --bool hooks.denycreatebranch)
.git/hooks/update.sample:49:allowdeletetag=$(git config --bool hooks.allowdeletetag)
.git/hooks/update.sample:50:allowmodifytag=$(git config --bool hooks.allowmodifytag)
.git/hooks/update.sample:53:projectdesc=$(sed -e '1q' "$GIT_DIR/description")
.git/hooks/update.sample:61:# --- Check types
.git/hooks/update.sample:67:	newrev_type=$(git cat-file -t $newrev)
.git/hooks/update.sample:72:		# un-annotated tag
.git/hooks/update.sample:75:			echo "*** The un-annotated tag, $short_refname, is not allowed in this repository" >&2
.git/hooks/update.sample:76:			echo "*** Use 'git tag [ -a | -s ]' for tags you want to propagate." >&2
.git/hooks/update.sample:89:		if [ "$allowmodifytag" != "true" ] && git rev-parse $refname > /dev/null 2>&1
.git/hooks/update.sample:98:		if [ "$oldrev" = "$zero" -a "$denycreatebranch" = "true" ]; then
.git/hooks/update.sample:127:# --- Finished
.git/hooks/post-update.sample:6:# To enable this hook, rename this file to "post-update".
.git/hooks/post-update.sample:8:exec git update-server-info
.git/hooks/pre-push.sample:5:# pushed.  If this script exits with a non-zero status nothing will be pushed.
.git/hooks/pre-push.sample:9:# $1 -- Name of the remote to which the push is being done
.git/hooks/pre-push.sample:10:# $2 -- URL to which the push is being done
.git/hooks/pre-push.sample:44:		commit=`git rev-list -n 1 --grep '^WIP' "$range"`
.git/hooks/pre-push.sample:45:		if [ -n "$commit" ]
.git/logs/refs/heads/dev:2:a5e4c404592d5152a50fda3f0729ffc0f182a0d3 5bfd9592f9a3e57de8b76b7c4e3c5f99e1ff8973 Jonghun Park <jonghun.park.194@gmail.com> 1587906149 +0900	merge hw2/prob1: Fast-forward
.git/logs/HEAD:9:a5e4c404592d5152a50fda3f0729ffc0f182a0d3 5bfd9592f9a3e57de8b76b7c4e3c5f99e1ff8973 Jonghun Park <jonghun.park.194@gmail.com> 1587906149 +0900	merge hw2/prob1: Fast-forward
src/userprog/gdt.h:10:#define SEL_TSS         0x28    /* Task-state segment. */
src/userprog/exception.h:5:#define PF_P 0x1    /* 0: not-present page. 1: access rights violation. */
src/userprog/pagedir.c:95:   otherwise it is read-only.
src/userprog/pagedir.c:227:     new page tables immediately.  See [IA32-v2a] "MOV--Move
src/userprog/pagedir.c:228:     to/from Control Registers" and [IA32-v3a] 3.7.5 "Base
src/userprog/pagedir.c:239:     See [IA32-v2a] "MOV--Move to/from Control Registers" and
src/userprog/pagedir.c:240:     [IA32-v3a] 3.7.5 "Base Address of the Page Directory". */
src/userprog/pagedir.c:247:   lookaside buffer (TLB) to become out-of-sync with the page
src/userprog/pagedir.c:249:   re-activating it.
src/userprog/pagedir.c:259:      /* Re-activating PD clears the TLB.  See [IA32-v3a] 3.12
src/userprog/exception.c:17:   In a real Unix-like OS, most of these interrupts would be
src/userprog/exception.c:19:   described in [SV-386] 3-24 and 3-25, but we don't implement
src/userprog/exception.c:27:   Refer to [IA32-v3a] section 5.15 "Exception and Interrupt
src/userprog/exception.c:53:  intr_register_int (16, 0, INTR_ON, kill, "#MF x87 FPU Floating-Point Error");
src/userprog/exception.c:55:                     "#XF SIMD Floating-Point Exception");
src/userprog/exception.c:60:  intr_register_int (14, 0, INTR_OFF, page_fault, "#PF Page-Fault Exception");
src/userprog/exception.c:78:     the kernel.  Real Unix-like operating systems pass most
src/userprog/exception.c:84:  switch (f->cs)
src/userprog/exception.c:90:              thread_name (), f->vec_no, intr_name (f->vec_no));
src/userprog/exception.c:97:         may cause kernel exceptions--but they shouldn't arrive
src/userprog/exception.c:100:      PANIC ("Kernel bug - unexpected interrupt in kernel"); 
src/userprog/exception.c:106:             f->vec_no, intr_name (f->vec_no), f->cs);
src/userprog/exception.c:120:   description of "Interrupt 14--Page Fault Exception (#PF)" in
src/userprog/exception.c:121:   [IA32-v3a] section 5.15 "Exception and Interrupt Reference". */
src/userprog/exception.c:125:  bool not_present;  /* True: not-present page, false: writing r/o page. */
src/userprog/exception.c:133:     that caused the fault (that's f->eip).
src/userprog/exception.c:134:     See [IA32-v2a] "MOV--Move to/from Control Registers" and
src/userprog/exception.c:135:     [IA32-v3a] 5.15 "Interrupt 14--Page Fault Exception
src/userprog/exception.c:147:  not_present = (f->error_code & PF_P) == 0;
src/userprog/exception.c:148:  write = (f->error_code & PF_W) != 0;
src/userprog/exception.c:149:  user = (f->error_code & PF_U) != 0;
src/userprog/tss.c:9:/* The Task-State Segment (TSS).
src/userprog/tss.c:11:   Instances of the TSS, an x86-specific structure, are used to
src/userprog/tss.c:29:     - If the code interrupted by the interrupt is in the same
src/userprog/tss.c:35:     - If the interrupted code is in a different ring from the
src/userprog/tss.c:47:   See [IA32-v3a] 6.2.1 "Task-State Segment (TSS)" for a
src/userprog/tss.c:48:   description of the TSS.  See [IA32-v3a] 5.12.1 "Exception- or
src/userprog/tss.c:49:   Interrupt-Handler Procedures" for a description of when and
src/userprog/tss.c:86:  tss->ss0 = SEL_KDSEG;
src/userprog/tss.c:87:  tss->bitmap = 0xdfff;
src/userprog/tss.c:105:  tss->esp0 = (uint8_t *) thread_current () + PGSIZE;
src/userprog/syscall.c:3:#include <syscall-nr.h>
src/userprog/Make.vars:1:# -*- makefile -*-
src/userprog/Make.vars:3:os.dsk: DEFINES = -DUSERPROG -DFILESYS
src/userprog/Make.vars:5:TEST_SUBDIRS = tests/userprog tests/userprog/no-vm tests/filesys/base
src/userprog/Make.vars:7:SIMULATOR = --qemu
src/userprog/process.c:71:     threads/intr-stubs.S).  Because intr_exit takes all of its
src/userprog/process.c:81:   exception), returns -1.  If TID is invalid or if it was not a
src/userprog/process.c:83:   been successfully called for the given TID, returns -1
src/userprog/process.c:86:   This function will be implemented in problem 2-2.  For now, it
src/userprog/process.c:91:  return -1;
src/userprog/process.c:102:     to the kernel-only page directory. */
src/userprog/process.c:103:  pd = curr->pagedir;
src/userprog/process.c:107:         cur->pagedir to NULL before switching page directories,
src/userprog/process.c:113:      curr->pagedir = NULL;
src/userprog/process.c:128:  pagedir_activate (t->pagedir);
src/userprog/process.c:136:   from the ELF specification, [ELF1], more-or-less verbatim.  */
src/userprog/process.c:138:/* ELF types.  See [ELF1] 1-2. */
src/userprog/process.c:148:/* Executable header.  See [ELF1] 1-4 to 1-8.
src/userprog/process.c:168:/* Program header.  See [ELF1] 2-2 to 2-4.
src/userprog/process.c:170:   (see [ELF1] 1-6). */
src/userprog/process.c:183:/* Values for p_type.  See [ELF1] 2-3. */
src/userprog/process.c:193:/* Flags for p_flags.  See [ELF3] 2-3 and 2-4. */
src/userprog/process.c:219:  t->pagedir = pagedir_create ();
src/userprog/process.c:220:  if (t->pagedir == NULL) 
src/userprog/process.c:285:                                - read_bytes);
src/userprog/process.c:329:  if ((phdr->p_offset & PGMASK) != (phdr->p_vaddr & PGMASK)) 
src/userprog/process.c:333:  if (phdr->p_offset > (Elf32_Off) file_length (file)) 
src/userprog/process.c:337:  if (phdr->p_memsz < phdr->p_filesz) 
src/userprog/process.c:341:  if (phdr->p_memsz == 0)
src/userprog/process.c:346:  if (!is_user_vaddr ((void *) phdr->p_vaddr))
src/userprog/process.c:348:  if (!is_user_vaddr ((void *) (phdr->p_vaddr + phdr->p_memsz)))
src/userprog/process.c:353:  if (phdr->p_vaddr + phdr->p_memsz < phdr->p_vaddr)
src/userprog/process.c:361:  if (phdr->p_vaddr < PGSIZE)
src/userprog/process.c:372:        - READ_BYTES bytes at UPAGE must be read from FILE
src/userprog/process.c:375:        - ZERO_BYTES bytes at UPAGE + READ_BYTES must be zeroed.
src/userprog/process.c:378:   user process if WRITABLE is true, read-only otherwise.
src/userprog/process.c:397:      size_t page_zero_bytes = PGSIZE - page_read_bytes;
src/userprog/process.c:420:      read_bytes -= page_read_bytes;
src/userprog/process.c:421:      zero_bytes -= page_zero_bytes;
src/userprog/process.c:438:      success = install_page (((uint8_t *) PHYS_BASE) - PGSIZE, kpage, true);
src/userprog/process.c:450:   otherwise, it is read-only.
src/userprog/process.c:463:  return (pagedir_get_page (t->pagedir, upage) == NULL
src/userprog/process.c:464:          && pagedir_set_page (t->pagedir, upage, kpage, writable));
src/userprog/gdt.c:9:   The GDT, an x86-specific structure, defines segments that can
src/userprog/gdt.c:11:   their permissions.  There is also a per-process Local
src/userprog/gdt.c:18:   Task-State Segment descriptors.  The former two types are
src/userprog/gdt.c:23:   [IA32-v3a] 3.2 "Using Segments" through 3.5 "System Descriptor
src/userprog/gdt.c:34:   include user-mode selectors or a TSS, but we need both now. */
src/userprog/gdt.c:48:  /* Load GDTR, TR.  See [IA32-v3a] 2.4.1 "Global Descriptor
src/userprog/gdt.c:51:  gdtr_operand = make_gdtr_operand (sizeof gdt - 1, gdt);
src/userprog/gdt.c:66:    GRAN_BYTE = 0,              /* Limit has 1-byte granularity. */
src/userprog/gdt.c:70:/* Returns a segment descriptor with the given 32-bit BASE and
src/userprog/gdt.c:71:   20-bit LIMIT (whose interpretation depends on GRANULARITY).
src/userprog/gdt.c:80:   [IA32-v3a] 4.5 "Privilege Levels" for further discussion. */
src/userprog/gdt.c:106:        | (1 << 22)                  /* 32-bit segment. */
src/userprog/gdt.c:129:/* Returns a descriptor for an "available" 32-bit Task-State
src/userprog/gdt.c:131:   0x67 bytes (the size of a 32-bit TSS), and a DPL of 0.
src/userprog/gdt.c:132:   See [IA32-v3a] 6.2.2 "TSS Descriptor". */
src/Makefile.kernel:1:# -*- makefile -*-
src/Makefile.kernel:12:	mkdir -p $@
src/Makefile.kernel:20:	rm -rf build
src/Makefile.build:1:# -*- makefile -*-
src/Makefile.build:12:os.dsk: CPPFLAGS += -I$(SRCDIR)/lib/kernel
src/Makefile.build:19:threads_SRC += threads/intr-stubs.S	# Interrupt stubs.
src/Makefile.build:36:lib_SRC += lib/random.c			# Pseudo-random numbers.
src/Makefile.build:42:# Kernel-specific library code.
src/Makefile.build:44:lib/kernel_SRC += lib/kernel/list.c	# Doubly-linked lists.
src/Makefile.build:62:filesys_SRC += filesys/free-map.c	# Free sector bitmap.
src/Makefile.build:72:threads/kernel.lds.s: CPPFLAGS += -P
src/Makefile.build:76:	$(LD) -T $< -o $@ $(OBJECTS)
src/Makefile.build:79:	$(OBJCOPY) -O binary -R .note -R .comment -S $< $@.tmp
src/Makefile.build:84:	$(CC) -c $< -o $@ $(ASFLAGS) $(CPPFLAGS) $(DEFINES) -DKERNEL_LOAD_PAGES=`perl -e 'print +(-s "kernel.bin") / 4096;'`
src/Makefile.build:87:	$(LD) -N -e start -Ttext 0x7c00 --oformat binary -o $@ $<
src/Makefile.build:93:	rm -f $(OBJECTS) $(DEPENDS) 
src/Makefile.build:94:	rm -f threads/loader.o threads/kernel.lds.s threads/loader.d
src/Makefile.build:95:	rm -f kernel.o kernel.lds.s
src/Makefile.build:96:	rm -f kernel.bin loader.bin os.dsk
src/Makefile.build:97:	rm -f bochsout.txt bochsrc.txt
src/Makefile.build:98:	rm -f results grade
src/Makefile.build:103:-include $(DEPENDS)
src/tests/userprog/sc-bad-arg.ck:1:# -*- perl -*-
src/tests/userprog/sc-bad-arg.ck:6:(sc-bad-arg) begin
src/tests/userprog/sc-bad-arg.ck:7:sc-bad-arg: exit(-1)
src/tests/userprog/close-normal.ck:1:# -*- perl -*-
src/tests/userprog/close-normal.ck:6:(close-normal) begin
src/tests/userprog/close-normal.ck:7:(close-normal) open "sample.txt"
src/tests/userprog/close-normal.ck:8:(close-normal) close "sample.txt"
src/tests/userprog/close-normal.ck:9:(close-normal) end
src/tests/userprog/close-normal.ck:10:close-normal: exit(0)
src/tests/userprog/create-null.ck:1:# -*- perl -*-
src/tests/userprog/create-null.ck:6:(create-null) begin
src/tests/userprog/create-null.ck:7:create-null: exit(-1)
src/tests/userprog/wait-simple.c:10:  msg ("wait(exec()) = %d", wait (exec ("child-simple")));
src/tests/userprog/close-bad-fd.c:2:   or terminate with exit code -1. */
src/tests/userprog/read-zero.ck:1:# -*- perl -*-
src/tests/userprog/read-zero.ck:6:(read-zero) begin
src/tests/userprog/read-zero.ck:7:(read-zero) open "sample.txt"
src/tests/userprog/read-zero.ck:8:(read-zero) end
src/tests/userprog/read-zero.ck:9:read-zero: exit(0)
src/tests/userprog/rox-child.c:5:#include "tests/userprog/rox-child.inc"
src/tests/userprog/boundary.c:18:  if (p - dst < 2048)
src/tests/userprog/boundary.c:29:  p -= strlen (src) < 4096 ? strlen (src) / 2 : 4096;
src/tests/userprog/open-empty.c:11:  if (handle != -1)
src/tests/userprog/open-empty.c:12:    fail ("open() returned %d instead of -1", handle);
src/tests/userprog/sc-boundary-2.c:5:#include <syscall-nr.h>
src/tests/userprog/sc-boundary-2.c:15:  int *p = (int *) ((char *) get_boundary_area () - 7);
src/tests/userprog/read-bad-fd.ck:1:# -*- perl -*-
src/tests/userprog/read-bad-fd.ck:6:(read-bad-fd) begin
src/tests/userprog/read-bad-fd.ck:7:(read-bad-fd) end
src/tests/userprog/read-bad-fd.ck:8:read-bad-fd: exit(0)
src/tests/userprog/read-bad-fd.ck:10:(read-bad-fd) begin
src/tests/userprog/read-bad-fd.ck:11:read-bad-fd: exit(-1)
src/tests/userprog/write-stdin.c:2:   which may just fail or terminate the process with -1 exit
src/tests/userprog/exec-multiple.c:10:  wait (exec ("child-simple"));
src/tests/userprog/exec-multiple.c:11:  wait (exec ("child-simple"));
src/tests/userprog/exec-multiple.c:12:  wait (exec ("child-simple"));
src/tests/userprog/exec-multiple.c:13:  wait (exec ("child-simple"));
src/tests/userprog/rox-child.inc:1:/* -*- c -*- */
src/tests/userprog/rox-child.inc:10:  const char *child_cmd = "child-rox " CHILD_CNT;
src/tests/userprog/rox-child.inc:15:  /* Open child-rox, read from it, write back same data. */
src/tests/userprog/rox-child.inc:16:  CHECK ((handle = open ("child-rox")) > 1, "open \"child-rox\"");
src/tests/userprog/rox-child.inc:18:         "read \"child-rox\"");
src/tests/userprog/rox-child.inc:21:         "write \"child-rox\"");
src/tests/userprog/rox-child.inc:23:  /* Execute child-rox and wait for it. */
src/tests/userprog/rox-child.inc:24:  CHECK ((child = exec (child_cmd)) != -1, "exec \"%s\"", child_cmd);
src/tests/userprog/rox-child.inc:29:  /* Write to child-rox again. */
src/tests/userprog/rox-child.inc:32:         "write \"child-rox\"");
src/tests/userprog/Rubric.functionality:2:- Test argument passing on Pintos command line.
src/tests/userprog/Rubric.functionality:3:3	args-none
src/tests/userprog/Rubric.functionality:4:3	args-single
src/tests/userprog/Rubric.functionality:5:3	args-multiple
src/tests/userprog/Rubric.functionality:6:3	args-many
src/tests/userprog/Rubric.functionality:7:3	args-dbl-space
src/tests/userprog/Rubric.functionality:9:- Test "create" system call.
src/tests/userprog/Rubric.functionality:10:3	create-empty
src/tests/userprog/Rubric.functionality:11:3	create-long
src/tests/userprog/Rubric.functionality:12:3	create-normal
src/tests/userprog/Rubric.functionality:13:3	create-exists
src/tests/userprog/Rubric.functionality:15:- Test "open" system call.
src/tests/userprog/Rubric.functionality:16:3	open-missing
src/tests/userprog/Rubric.functionality:17:3	open-normal
src/tests/userprog/Rubric.functionality:18:3	open-twice
src/tests/userprog/Rubric.functionality:20:- Test "read" system call.
src/tests/userprog/Rubric.functionality:21:3	read-normal
src/tests/userprog/Rubric.functionality:22:3	read-zero
src/tests/userprog/Rubric.functionality:24:- Test "write" system call.
src/tests/userprog/Rubric.functionality:25:3	write-normal
src/tests/userprog/Rubric.functionality:26:3	write-zero
src/tests/userprog/Rubric.functionality:28:- Test "close" system call.
src/tests/userprog/Rubric.functionality:29:3	close-normal
src/tests/userprog/Rubric.functionality:31:- Test "exec" system call.
src/tests/userprog/Rubric.functionality:32:5	exec-once
src/tests/userprog/Rubric.functionality:33:5	exec-multiple
src/tests/userprog/Rubric.functionality:34:5	exec-arg
src/tests/userprog/Rubric.functionality:36:- Test "wait" system call.
src/tests/userprog/Rubric.functionality:37:5	wait-simple
src/tests/userprog/Rubric.functionality:38:5	wait-twice
src/tests/userprog/Rubric.functionality:40:- Test "exit" system call.
src/tests/userprog/Rubric.functionality:43:- Test "halt" system call.
src/tests/userprog/Rubric.functionality:46:- Test recursive execution of user programs.
src/tests/userprog/Rubric.functionality:47:15	multi-recurse
src/tests/userprog/Rubric.functionality:49:- Test read-only executable feature.
src/tests/userprog/Rubric.functionality:50:3	rox-simple
src/tests/userprog/Rubric.functionality:51:3	rox-child
src/tests/userprog/Rubric.functionality:52:3	rox-multichild
src/tests/userprog/sc-boundary-2.ck:1:# -*- perl -*-
src/tests/userprog/sc-boundary-2.ck:6:(sc-boundary-2) begin
src/tests/userprog/sc-boundary-2.ck:7:sc-boundary-2: exit(67)
src/tests/userprog/bad-write.ck:1:# -*- perl -*-
src/tests/userprog/bad-write.ck:6:(bad-write) begin
src/tests/userprog/bad-write.ck:7:bad-write: exit(-1)
src/tests/userprog/write-stdin.ck:1:# -*- perl -*-
src/tests/userprog/write-stdin.ck:6:(write-stdin) begin
src/tests/userprog/write-stdin.ck:7:(write-stdin) end
src/tests/userprog/write-stdin.ck:8:write-stdin: exit(0)
src/tests/userprog/write-stdin.ck:10:(write-stdin) begin
src/tests/userprog/write-stdin.ck:11:write-stdin: exit(-1)
src/tests/userprog/wait-bad-pid.c:2:   process with -1 exit code. */
src/tests/userprog/child-rox.c:1:/* Child process run by rox-child and rox-multichild tests.
src/tests/userprog/child-rox.c:5:   first command-line argument. */
src/tests/userprog/child-rox.c:13:const char *test_name = "child-rox";
src/tests/userprog/child-rox.c:22:  CHECK ((handle = open ("child-rox")) > 1, "open \"child-rox\"");
src/tests/userprog/child-rox.c:26:         "try to write \"child-rox\"");
src/tests/userprog/child-rox.c:38:    fail ("bad command-line arguments");
src/tests/userprog/child-rox.c:44:      snprintf (cmd, sizeof cmd, "child-rox %d", atoi (argv[1]) - 1);
src/tests/userprog/child-rox.c:45:      CHECK ((child = exec (cmd)) != -1, "exec \"%s\"", cmd);
src/tests/userprog/child-rox.c:47:      CHECK (wait (child) == 12, "wait for \"child-rox\"");
src/tests/userprog/open-null.ck:1:# -*- perl -*-
src/tests/userprog/open-null.ck:6:(open-null) begin
src/tests/userprog/open-null.ck:7:(open-null) end
src/tests/userprog/open-null.ck:8:open-null: exit(0)
src/tests/userprog/open-null.ck:10:(open-null) begin
src/tests/userprog/open-null.ck:11:open-null: exit(-1)
src/tests/userprog/no-vm/multi-oom.ck:1:# -*- perl -*-
src/tests/userprog/no-vm/multi-oom.ck:6:(multi-oom) begin
src/tests/userprog/no-vm/multi-oom.ck:7:(multi-oom) success. program forked 10 times.
src/tests/userprog/no-vm/multi-oom.ck:8:(multi-oom) end
src/tests/userprog/no-vm/multi-oom.c:7:   return -1, not a valid PID.
src/tests/userprog/no-vm/multi-oom.c:30:const char *test_name = "multi-oom";
src/tests/userprog/no-vm/multi-oom.c:41:            "%s %d %s", test_name, c, mode == CRASH ? "-k" : "");
src/tests/userprog/no-vm/multi-oom.c:56:     A low-memory condition in open() should not lead to the
src/tests/userprog/no-vm/multi-oom.c:59:    if (open (test_name) == -1)
src/tests/userprog/no-vm/multi-oom.c:88:        exit (-1);
src/tests/userprog/no-vm/multi-oom.c:102:   Some children are started with the '-k' flag, which will
src/tests/userprog/no-vm/multi-oom.c:115:  /* If -k is passed, crash this process. */
src/tests/userprog/no-vm/multi-oom.c:116:  if (argc > 2 && !strcmp(argv[2], "-k"))
src/tests/userprog/no-vm/multi-oom.c:123:  int i, expected_depth = -1;
src/tests/userprog/no-vm/multi-oom.c:135:          if (child_pid != -1)
src/tests/userprog/no-vm/multi-oom.c:137:              if (wait (child_pid) != -1)
src/tests/userprog/no-vm/multi-oom.c:138:                fail ("crashed child should return -1.");
src/tests/userprog/no-vm/multi-oom.c:148:      if (child_pid == -1)
src/tests/userprog/no-vm/multi-oom.c:153:      if (reached_depth == -1)
src/tests/userprog/no-vm/multi-oom.c:154:        fail ("wait returned -1.");
src/tests/userprog/no-vm/Rubric:3:1	multi-oom
src/tests/userprog/no-vm/Make.tests:1:# -*- makefile -*-
src/tests/userprog/no-vm/Make.tests:3:tests/userprog/no-vm_TESTS = tests/userprog/no-vm/multi-oom
src/tests/userprog/no-vm/Make.tests:4:tests/userprog/no-vm_PROGS = $(tests/userprog/no-vm_TESTS)
src/tests/userprog/no-vm/Make.tests:5:tests/userprog/no-vm/multi-oom_SRC = tests/userprog/no-vm/multi-oom.c	\
src/tests/userprog/no-vm/Make.tests:8:tests/userprog/no-vm/multi-oom.output: TIMEOUT = 360
src/tests/userprog/wait-killed.ck:1:# -*- perl -*-
src/tests/userprog/wait-killed.ck:6:(wait-killed) begin
src/tests/userprog/wait-killed.ck:7:(child-bad) begin
src/tests/userprog/wait-killed.ck:8:child-bad: exit(-1)
src/tests/userprog/wait-killed.ck:9:(wait-killed) wait(exec()) = -1
src/tests/userprog/wait-killed.ck:10:(wait-killed) end
src/tests/userprog/wait-killed.ck:11:wait-killed: exit(0)
src/tests/userprog/write-boundary.c:22:  byte_cnt = write (handle, sample_p, sizeof sample - 1);
src/tests/userprog/write-boundary.c:23:  if (byte_cnt != sizeof sample - 1)
src/tests/userprog/write-boundary.c:24:    fail ("write() returned %d instead of %zu", byte_cnt, sizeof sample - 1);
src/tests/userprog/Grading:10:10%	tests/userprog/no-vm/Rubric
src/tests/userprog/write-zero.ck:1:# -*- perl -*-
src/tests/userprog/write-zero.ck:6:(write-zero) begin
src/tests/userprog/write-zero.ck:7:(write-zero) open "sample.txt"
src/tests/userprog/write-zero.ck:8:(write-zero) end
src/tests/userprog/write-zero.ck:9:write-zero: exit(0)
src/tests/userprog/read-boundary.c:20:  buffer = get_boundary_area () - sizeof sample / 2;
src/tests/userprog/read-boundary.c:21:  byte_cnt = read (handle, buffer, sizeof sample - 1);
src/tests/userprog/read-boundary.c:22:  if (byte_cnt != sizeof sample - 1)
src/tests/userprog/read-boundary.c:23:    fail ("read() returned %d instead of %zu", byte_cnt, sizeof sample - 1);
src/tests/userprog/sample.inc:5:  " have carpeting.\" --Dave Barry\n" 
src/tests/userprog/create-null.c:2:   The process must be terminated with exit code -1. */
src/tests/userprog/multi-recurse.c:2:   first command-line argument. */
src/tests/userprog/multi-recurse.c:10:const char *test_name = "multi-recurse";
src/tests/userprog/multi-recurse.c:24:      snprintf (child_cmd, sizeof child_cmd, "multi-recurse %d", n - 1);
src/tests/userprog/multi-recurse.c:25:      CHECK ((child_pid = exec (child_cmd)) != -1, "exec(\"%s\")", child_cmd);
src/tests/userprog/multi-recurse.c:28:      if (code != n - 1)
src/tests/userprog/read-bad-ptr.c:2:   The process must be terminated with -1 exit code. */
src/tests/userprog/close-stdout.ck:1:# -*- perl -*-
src/tests/userprog/close-stdout.ck:6:(close-stdout) begin
src/tests/userprog/close-stdout.ck:7:(close-stdout) end
src/tests/userprog/close-stdout.ck:8:close-stdout: exit(0)
src/tests/userprog/close-stdout.ck:10:(close-stdout) begin
src/tests/userprog/close-stdout.ck:11:close-stdout: exit(-1)
src/tests/userprog/Rubric.robustness:2:- Test robustness of file descriptor handling.
src/tests/userprog/Rubric.robustness:3:2	close-stdin
src/tests/userprog/Rubric.robustness:4:2	close-stdout
src/tests/userprog/Rubric.robustness:5:2	close-bad-fd
src/tests/userprog/Rubric.robustness:6:2	close-twice
src/tests/userprog/Rubric.robustness:7:2	read-bad-fd
src/tests/userprog/Rubric.robustness:8:2	read-stdout
src/tests/userprog/Rubric.robustness:9:2	write-bad-fd
src/tests/userprog/Rubric.robustness:10:2	write-stdin
src/tests/userprog/Rubric.robustness:11:2	multi-child-fd
src/tests/userprog/Rubric.robustness:13:- Test robustness of pointer handling.
src/tests/userprog/Rubric.robustness:14:3	create-bad-ptr
src/tests/userprog/Rubric.robustness:15:3	exec-bad-ptr
src/tests/userprog/Rubric.robustness:16:3	open-bad-ptr
src/tests/userprog/Rubric.robustness:17:3	read-bad-ptr
src/tests/userprog/Rubric.robustness:18:3	write-bad-ptr
src/tests/userprog/Rubric.robustness:20:- Test robustness of buffer copying across page boundaries.
src/tests/userprog/Rubric.robustness:21:3	create-bound
src/tests/userprog/Rubric.robustness:22:3	open-boundary
src/tests/userprog/Rubric.robustness:23:3	read-boundary
src/tests/userprog/Rubric.robustness:24:3	write-boundary
src/tests/userprog/Rubric.robustness:26:- Test handling of null pointer and empty strings.
src/tests/userprog/Rubric.robustness:27:2	create-null
src/tests/userprog/Rubric.robustness:28:2	open-null
src/tests/userprog/Rubric.robustness:29:2	open-empty
src/tests/userprog/Rubric.robustness:31:- Test robustness of system call implementation.
src/tests/userprog/Rubric.robustness:32:3	sc-bad-arg
src/tests/userprog/Rubric.robustness:33:3	sc-bad-sp
src/tests/userprog/Rubric.robustness:34:5	sc-boundary
src/tests/userprog/Rubric.robustness:35:5	sc-boundary-2
src/tests/userprog/Rubric.robustness:37:- Test robustness of "exec" and "wait" system calls.
src/tests/userprog/Rubric.robustness:38:5	exec-missing
src/tests/userprog/Rubric.robustness:39:5	wait-bad-pid
src/tests/userprog/Rubric.robustness:40:5	wait-killed
src/tests/userprog/Rubric.robustness:42:- Test robustness of exception handling.
src/tests/userprog/Rubric.robustness:43:1	bad-read
src/tests/userprog/Rubric.robustness:44:1	bad-write
src/tests/userprog/Rubric.robustness:45:1	bad-jump
src/tests/userprog/Rubric.robustness:46:1	bad-read2
src/tests/userprog/Rubric.robustness:47:1	bad-write2
src/tests/userprog/Rubric.robustness:48:1	bad-jump2
src/tests/userprog/create-bad-ptr.ck:1:# -*- perl -*-
src/tests/userprog/create-bad-ptr.ck:6:(create-bad-ptr) begin
src/tests/userprog/create-bad-ptr.ck:7:create-bad-ptr: exit(-1)
src/tests/userprog/args-none.ck:1:# -*- perl -*-
src/tests/userprog/args-none.ck:8:(args) argv[0] = 'args-none'
src/tests/userprog/args-none.ck:11:args-none: exit(0)
src/tests/userprog/create-bound.ck:1:# -*- perl -*-
src/tests/userprog/create-bound.ck:6:(create-bound) begin
src/tests/userprog/create-bound.ck:7:(create-bound) create("quux.dat"): 1
src/tests/userprog/create-bound.ck:8:(create-bound) end
src/tests/userprog/create-bound.ck:9:create-bound: exit(0)
src/tests/userprog/args-dbl-space.ck:1:# -*- perl -*-
src/tests/userprog/args-dbl-space.ck:8:(args) argv[0] = 'args-dbl-space'
src/tests/userprog/args-dbl-space.ck:13:args-dbl-space: exit(0)
src/tests/userprog/rox-simple.ck:1:# -*- perl -*-
src/tests/userprog/rox-simple.ck:6:(rox-simple) begin
src/tests/userprog/rox-simple.ck:7:(rox-simple) open "rox-simple"
src/tests/userprog/rox-simple.ck:8:(rox-simple) read "rox-simple"
src/tests/userprog/rox-simple.ck:9:(rox-simple) try to write "rox-simple"
src/tests/userprog/rox-simple.ck:10:(rox-simple) end
src/tests/userprog/rox-simple.ck:11:rox-simple: exit(0)
src/tests/userprog/exec-missing.ck:1:# -*- perl -*-
src/tests/userprog/exec-missing.ck:6:(exec-missing) begin
src/tests/userprog/exec-missing.ck:7:load: no-such-file: open failed
src/tests/userprog/exec-missing.ck:8:(exec-missing) exec("no-such-file"): -1
src/tests/userprog/exec-missing.ck:9:(exec-missing) end
src/tests/userprog/exec-missing.ck:10:exec-missing: exit(0)
src/tests/userprog/exec-missing.ck:12:(exec-missing) begin
src/tests/userprog/exec-missing.ck:13:(exec-missing) exec("no-such-file"): -1
src/tests/userprog/exec-missing.ck:14:(exec-missing) end
src/tests/userprog/exec-missing.ck:15:exec-missing: exit(0)
src/tests/userprog/exec-missing.ck:17:(exec-missing) begin
src/tests/userprog/exec-missing.ck:18:load: no-such-file: open failed
src/tests/userprog/exec-missing.ck:19:no-such-file: exit(-1)
src/tests/userprog/exec-missing.ck:20:(exec-missing) exec("no-such-file"): -1
src/tests/userprog/exec-missing.ck:21:(exec-missing) end
src/tests/userprog/exec-missing.ck:22:exec-missing: exit(0)
src/tests/userprog/exec-missing.ck:24:(exec-missing) begin
src/tests/userprog/exec-missing.ck:25:load: no-such-file: open failed
src/tests/userprog/exec-missing.ck:26:(exec-missing) exec("no-such-file"): -1
src/tests/userprog/exec-missing.ck:27:no-such-file: exit(-1)
src/tests/userprog/exec-missing.ck:28:(exec-missing) end
src/tests/userprog/exec-missing.ck:29:exec-missing: exit(0)
src/tests/userprog/halt.ck:1:# -*- perl -*-
src/tests/userprog/halt.ck:13:fail "found 'fail' message--halt didn't really halt\n"
src/tests/userprog/write-normal.c:13:  CHECK (create ("test.txt", sizeof sample - 1), "create \"test.txt\"");
src/tests/userprog/write-normal.c:16:  byte_cnt = write (handle, sample, sizeof sample - 1);
src/tests/userprog/write-normal.c:17:  if (byte_cnt != sizeof sample - 1)
src/tests/userprog/write-normal.c:18:    fail ("write() returned %d instead of %zu", byte_cnt, sizeof sample - 1);
src/tests/userprog/bad-write2.c:2:   This should terminate the process with a -1 exit code. */
src/tests/userprog/bad-write2.c:11:  fail ("should have exited with -1");
src/tests/userprog/read-zero.c:1:/* Try a 0-byte read, which should return 0 without reading
src/tests/userprog/read-zero.c:21:    fail ("0-byte read() modified buffer");
src/tests/userprog/exit.ck:1:# -*- perl -*-
src/tests/userprog/bad-jump.c:2:   This should terminate the process with a -1 exit code. */
src/tests/userprog/bad-jump.c:10:  msg ("Congratulations - you have successfully called NULL: %d", 
src/tests/userprog/bad-jump.c:12:  fail ("should have exited with -1");
src/tests/userprog/close-stdin.ck:1:# -*- perl -*-
src/tests/userprog/close-stdin.ck:6:(close-stdin) begin
src/tests/userprog/close-stdin.ck:7:(close-stdin) end
src/tests/userprog/close-stdin.ck:8:close-stdin: exit(0)
src/tests/userprog/close-stdin.ck:10:(close-stdin) begin
src/tests/userprog/close-stdin.ck:11:close-stdin: exit(-1)
src/tests/userprog/wait-twice.ck:1:# -*- perl -*-
src/tests/userprog/wait-twice.ck:6:(wait-twice) begin
src/tests/userprog/wait-twice.ck:7:(child-simple) run
src/tests/userprog/wait-twice.ck:8:child-simple: exit(81)
src/tests/userprog/wait-twice.ck:9:(wait-twice) wait(exec()) = 81
src/tests/userprog/wait-twice.ck:10:(wait-twice) wait(exec()) = -1
src/tests/userprog/wait-twice.ck:11:(wait-twice) end
src/tests/userprog/wait-twice.ck:12:wait-twice: exit(0)
src/tests/userprog/args-single.ck:1:# -*- perl -*-
src/tests/userprog/args-single.ck:8:(args) argv[0] = 'args-single'
src/tests/userprog/args-single.ck:12:args-single: exit(0)
src/tests/userprog/open-missing.c:10:  int handle = open ("no-such-file");
src/tests/userprog/open-missing.c:11:  if (handle != -1)
src/tests/userprog/bad-jump.ck:1:# -*- perl -*-
src/tests/userprog/bad-jump.ck:6:(bad-jump) begin
src/tests/userprog/bad-jump.ck:7:bad-jump: exit(-1)
src/tests/userprog/read-stdout.c:2:   which may just fail or terminate the process with -1 exit
src/tests/userprog/child-bad.c:1:/* Child process run by wait-killed test.
src/tests/userprog/child-bad.c:4:   -1 exit code. */
src/tests/userprog/child-bad.c:13:  fail ("should have exited with -1");
src/tests/userprog/write-bad-fd.c:3:   exit code -1. */
src/tests/userprog/write-bad-fd.c:16:  write (-5, &buf, 1);
src/tests/userprog/write-bad-fd.c:17:  write (-8192, &buf, 1);
src/tests/userprog/write-bad-fd.c:19:  write (INT_MAX - 1, &buf, 1);
src/tests/userprog/args.c:1:/* Prints the command-line arguments.
src/tests/userprog/args.c:2:   This program is used for all of the args-* tests.  Grading is
src/tests/userprog/args.c:3:   done differently for each of the args-* tests based on the
src/tests/userprog/exec-missing.c:2:   The exec system call must return -1. */
src/tests/userprog/exec-missing.c:11:  msg ("exec(\"no-such-file\"): %d", exec ("no-such-file"));
src/tests/userprog/create-exists.ck:1:# -*- perl -*-
src/tests/userprog/create-exists.ck:6:(create-exists) begin
src/tests/userprog/create-exists.ck:7:(create-exists) create quux.dat
src/tests/userprog/create-exists.ck:8:(create-exists) create warble.dat
src/tests/userprog/create-exists.ck:9:(create-exists) try to re-create quux.dat
src/tests/userprog/create-exists.ck:10:(create-exists) create baffle.dat
src/tests/userprog/create-exists.ck:11:(create-exists) try to re-create quux.dat
src/tests/userprog/create-exists.ck:12:(create-exists) end
src/tests/userprog/create-exists.ck:13:create-exists: exit(0)
src/tests/userprog/create-empty.ck:1:# -*- perl -*-
src/tests/userprog/create-empty.ck:6:(create-empty) begin
src/tests/userprog/create-empty.ck:7:(create-empty) create(""): 0
src/tests/userprog/create-empty.ck:8:(create-empty) end
src/tests/userprog/create-empty.ck:9:create-empty: exit(0)
src/tests/userprog/create-empty.ck:11:(create-empty) begin
src/tests/userprog/create-empty.ck:12:create-empty: exit(-1)
src/tests/userprog/wait-bad-pid.ck:1:# -*- perl -*-
src/tests/userprog/wait-bad-pid.ck:6:(wait-bad-pid) begin
src/tests/userprog/wait-bad-pid.ck:7:(wait-bad-pid) end
src/tests/userprog/wait-bad-pid.ck:8:wait-bad-pid: exit(0)
src/tests/userprog/wait-bad-pid.ck:10:(wait-bad-pid) begin
src/tests/userprog/wait-bad-pid.ck:11:wait-bad-pid: exit(-1)
src/tests/userprog/read-bad-fd.c:3:   exit code -1. */
src/tests/userprog/read-bad-fd.c:17:  read (-1, &buf, 1);
src/tests/userprog/read-bad-fd.c:18:  read (-1024, &buf, 1);
src/tests/userprog/sc-bad-arg.c:4:   with -1 exit code because the argument to the system call
src/tests/userprog/sc-bad-arg.c:7:#include <syscall-nr.h>
src/tests/userprog/sc-bad-arg.c:16:  fail ("should have called exit(-1)");
src/tests/userprog/bad-jump2.ck:1:# -*- perl -*-
src/tests/userprog/bad-jump2.ck:6:(bad-jump2) begin
src/tests/userprog/bad-jump2.ck:7:bad-jump2: exit(-1)
src/tests/userprog/exec-once.c:10:  wait (exec ("child-simple"));
src/tests/userprog/multi-child-fd.c:20:  snprintf (child_cmd, sizeof child_cmd, "child-close %d", handle);
src/tests/userprog/multi-child-fd.c:24:  check_file_handle (handle, "sample.txt", sample, sizeof sample - 1);
src/tests/userprog/close-stdout.c:2:   fail silently or terminate with exit code -1. */
src/tests/userprog/write-bad-ptr.ck:1:# -*- perl -*-
src/tests/userprog/write-bad-ptr.ck:6:(write-bad-ptr) begin
src/tests/userprog/write-bad-ptr.ck:7:(write-bad-ptr) open "sample.txt"
src/tests/userprog/write-bad-ptr.ck:8:(write-bad-ptr) end
src/tests/userprog/write-bad-ptr.ck:9:write-bad-ptr: exit(0)
src/tests/userprog/write-bad-ptr.ck:11:(write-bad-ptr) begin
src/tests/userprog/write-bad-ptr.ck:12:(write-bad-ptr) open "sample.txt"
src/tests/userprog/write-bad-ptr.ck:13:write-bad-ptr: exit(-1)
src/tests/userprog/wait-simple.ck:1:# -*- perl -*-
src/tests/userprog/wait-simple.ck:6:(wait-simple) begin
src/tests/userprog/wait-simple.ck:7:(child-simple) run
src/tests/userprog/wait-simple.ck:8:child-simple: exit(81)
src/tests/userprog/wait-simple.ck:9:(wait-simple) wait(exec()) = 81
src/tests/userprog/wait-simple.ck:10:(wait-simple) end
src/tests/userprog/wait-simple.ck:11:wait-simple: exit(0)
src/tests/userprog/rox-multichild.c:5:#include "tests/userprog/rox-child.inc"
src/tests/userprog/sc-bad-sp.ck:1:# -*- perl -*-
src/tests/userprog/sc-bad-sp.ck:6:(sc-bad-sp) begin
src/tests/userprog/sc-bad-sp.ck:7:sc-bad-sp: exit(-1)
src/tests/userprog/wait-killed.c:10:  msg ("wait(exec()) = %d", wait (exec ("child-bad")));
src/tests/userprog/wait-twice.c:3:   The second wait call must return -1 immediately. */
src/tests/userprog/wait-twice.c:12:  pid_t child = exec ("child-simple");
src/tests/userprog/bad-write2.ck:1:# -*- perl -*-
src/tests/userprog/bad-write2.ck:6:(bad-write2) begin
src/tests/userprog/bad-write2.ck:7:bad-write2: exit(-1)
src/tests/userprog/write-bad-ptr.c:2:   The process must be terminated with -1 exit code. */
src/tests/userprog/write-bad-ptr.c:15:  fail ("should have exited with -1");
src/tests/userprog/open-twice.ck:1:# -*- perl -*-
src/tests/userprog/open-twice.ck:6:(open-twice) begin
src/tests/userprog/open-twice.ck:7:(open-twice) open "sample.txt" once
src/tests/userprog/open-twice.ck:8:(open-twice) open "sample.txt" again
src/tests/userprog/open-twice.ck:9:(open-twice) end
src/tests/userprog/open-twice.ck:10:open-twice: exit(0)
src/tests/userprog/read-boundary.ck:1:# -*- perl -*-
src/tests/userprog/read-boundary.ck:6:(read-boundary) begin
src/tests/userprog/read-boundary.ck:7:(read-boundary) open "sample.txt"
src/tests/userprog/read-boundary.ck:8:(read-boundary) end
src/tests/userprog/read-boundary.ck:9:read-boundary: exit(0)
src/tests/userprog/open-missing.ck:1:# -*- perl -*-
src/tests/userprog/open-missing.ck:6:(open-missing) begin
src/tests/userprog/open-missing.ck:7:(open-missing) end
src/tests/userprog/open-missing.ck:8:open-missing: exit(0)
src/tests/userprog/exec-bad-ptr.c:2:   The process must be terminated with -1 exit code. */
src/tests/userprog/exec-bad-ptr.ck:1:# -*- perl -*-
src/tests/userprog/exec-bad-ptr.ck:6:(exec-bad-ptr) begin
src/tests/userprog/exec-bad-ptr.ck:7:(exec-bad-ptr) end
src/tests/userprog/exec-bad-ptr.ck:8:exec-bad-ptr: exit(0)
src/tests/userprog/exec-bad-ptr.ck:10:(exec-bad-ptr) begin
src/tests/userprog/exec-bad-ptr.ck:11:exec-bad-ptr: exit(-1)
src/tests/userprog/child-simple.c:1:/* Child process run by exec-multiple, exec-one, wait-simple, and
src/tests/userprog/child-simple.c:2:   wait-twice tests.
src/tests/userprog/child-simple.c:8:const char *test_name = "child-simple";
src/tests/userprog/write-normal.ck:1:# -*- perl -*-
src/tests/userprog/write-normal.ck:6:(write-normal) begin
src/tests/userprog/write-normal.ck:7:(write-normal) create "test.txt"
src/tests/userprog/write-normal.ck:8:(write-normal) open "test.txt"
src/tests/userprog/write-normal.ck:9:(write-normal) end
src/tests/userprog/write-normal.ck:10:write-normal: exit(0)
src/tests/userprog/close-bad-fd.ck:1:# -*- perl -*-
src/tests/userprog/close-bad-fd.ck:6:(close-bad-fd) begin
src/tests/userprog/close-bad-fd.ck:7:(close-bad-fd) end
src/tests/userprog/close-bad-fd.ck:8:close-bad-fd: exit(0)
src/tests/userprog/close-bad-fd.ck:10:(close-bad-fd) begin
src/tests/userprog/close-bad-fd.ck:11:close-bad-fd: exit(-1)
src/tests/userprog/args-multiple.ck:1:# -*- perl -*-
src/tests/userprog/args-multiple.ck:8:(args) argv[0] = 'args-multiple'
src/tests/userprog/args-multiple.ck:15:args-multiple: exit(0)
src/tests/userprog/close-twice.ck:1:# -*- perl -*-
src/tests/userprog/close-twice.ck:6:(close-twice) begin
src/tests/userprog/close-twice.ck:7:(close-twice) open "sample.txt"
src/tests/userprog/close-twice.ck:8:(close-twice) close "sample.txt"
src/tests/userprog/close-twice.ck:9:(close-twice) close "sample.txt" again
src/tests/userprog/close-twice.ck:10:(close-twice) end
src/tests/userprog/close-twice.ck:11:close-twice: exit(0)
src/tests/userprog/close-twice.ck:13:(close-twice) begin
src/tests/userprog/close-twice.ck:14:(close-twice) open "sample.txt"
src/tests/userprog/close-twice.ck:15:(close-twice) close "sample.txt"
src/tests/userprog/close-twice.ck:16:(close-twice) close "sample.txt" again
src/tests/userprog/close-twice.ck:17:close-twice: exit(-1)
src/tests/userprog/exec-arg.c:9:  wait (exec ("child-args childarg"));
src/tests/userprog/create-bad-ptr.c:3:   -1. */
src/tests/userprog/rox-simple.c:14:  CHECK ((handle = open ("rox-simple")) > 1, "open \"rox-simple\"");
src/tests/userprog/rox-simple.c:16:         "read \"rox-simple\"");
src/tests/userprog/rox-simple.c:18:         "try to write \"rox-simple\"");
src/tests/userprog/multi-child-fd.ck:1:# -*- perl -*-
src/tests/userprog/multi-child-fd.ck:6:(multi-child-fd) begin
src/tests/userprog/multi-child-fd.ck:7:(multi-child-fd) open "sample.txt"
src/tests/userprog/multi-child-fd.ck:8:(child-close) begin
src/tests/userprog/multi-child-fd.ck:9:(child-close) end
src/tests/userprog/multi-child-fd.ck:10:child-close: exit(0)
src/tests/userprog/multi-child-fd.ck:11:(multi-child-fd) wait(exec()) = 0
src/tests/userprog/multi-child-fd.ck:12:(multi-child-fd) verified contents of "sample.txt"
src/tests/userprog/multi-child-fd.ck:13:(multi-child-fd) end
src/tests/userprog/multi-child-fd.ck:14:multi-child-fd: exit(0)
src/tests/userprog/multi-child-fd.ck:16:(multi-child-fd) begin
src/tests/userprog/multi-child-fd.ck:17:(multi-child-fd) open "sample.txt"
src/tests/userprog/multi-child-fd.ck:18:(child-close) begin
src/tests/userprog/multi-child-fd.ck:19:child-close: exit(-1)
src/tests/userprog/multi-child-fd.ck:20:(multi-child-fd) wait(exec()) = -1
src/tests/userprog/multi-child-fd.ck:21:(multi-child-fd) verified contents of "sample.txt"
src/tests/userprog/multi-child-fd.ck:22:(multi-child-fd) end
src/tests/userprog/multi-child-fd.ck:23:multi-child-fd: exit(0)
src/tests/userprog/rox-multichild.ck:1:# -*- perl -*-
src/tests/userprog/rox-multichild.ck:6:(rox-multichild) begin
src/tests/userprog/rox-multichild.ck:7:(rox-multichild) open "child-rox"
src/tests/userprog/rox-multichild.ck:8:(rox-multichild) read "child-rox"
src/tests/userprog/rox-multichild.ck:9:(rox-multichild) write "child-rox"
src/tests/userprog/rox-multichild.ck:10:(rox-multichild) exec "child-rox 5"
src/tests/userprog/rox-multichild.ck:11:(child-rox) begin
src/tests/userprog/rox-multichild.ck:12:(child-rox) try to write "child-rox"
src/tests/userprog/rox-multichild.ck:13:(child-rox) exec "child-rox 4"
src/tests/userprog/rox-multichild.ck:14:(child-rox) begin
src/tests/userprog/rox-multichild.ck:15:(child-rox) try to write "child-rox"
src/tests/userprog/rox-multichild.ck:16:(child-rox) exec "child-rox 3"
src/tests/userprog/rox-multichild.ck:17:(child-rox) begin
src/tests/userprog/rox-multichild.ck:18:(child-rox) try to write "child-rox"
src/tests/userprog/rox-multichild.ck:19:(child-rox) exec "child-rox 2"
src/tests/userprog/rox-multichild.ck:20:(child-rox) begin
src/tests/userprog/rox-multichild.ck:21:(child-rox) try to write "child-rox"
src/tests/userprog/rox-multichild.ck:22:(child-rox) exec "child-rox 1"
src/tests/userprog/rox-multichild.ck:23:(child-rox) begin
src/tests/userprog/rox-multichild.ck:24:(child-rox) try to write "child-rox"
src/tests/userprog/rox-multichild.ck:25:(child-rox) try to write "child-rox"
src/tests/userprog/rox-multichild.ck:26:(child-rox) end
src/tests/userprog/rox-multichild.ck:27:child-rox: exit(12)
src/tests/userprog/rox-multichild.ck:28:(child-rox) try to write "child-rox"
src/tests/userprog/rox-multichild.ck:29:(child-rox) end
src/tests/userprog/rox-multichild.ck:30:child-rox: exit(12)
src/tests/userprog/rox-multichild.ck:31:(child-rox) try to write "child-rox"
src/tests/userprog/rox-multichild.ck:32:(child-rox) end
src/tests/userprog/rox-multichild.ck:33:child-rox: exit(12)
src/tests/userprog/rox-multichild.ck:34:(child-rox) try to write "child-rox"
src/tests/userprog/rox-multichild.ck:35:(child-rox) end
src/tests/userprog/rox-multichild.ck:36:child-rox: exit(12)
src/tests/userprog/rox-multichild.ck:37:(child-rox) try to write "child-rox"
src/tests/userprog/rox-multichild.ck:38:(child-rox) end
src/tests/userprog/rox-multichild.ck:39:child-rox: exit(12)
src/tests/userprog/rox-multichild.ck:40:(rox-multichild) write "child-rox"
src/tests/userprog/rox-multichild.ck:41:(rox-multichild) end
src/tests/userprog/rox-multichild.ck:42:rox-multichild: exit(0)
src/tests/userprog/read-normal.ck:1:# -*- perl -*-
src/tests/userprog/read-normal.ck:6:(read-normal) begin
src/tests/userprog/read-normal.ck:7:(read-normal) open "sample.txt" for verification
src/tests/userprog/read-normal.ck:8:(read-normal) verified contents of "sample.txt"
src/tests/userprog/read-normal.ck:9:(read-normal) close "sample.txt"
src/tests/userprog/read-normal.ck:10:(read-normal) end
src/tests/userprog/read-normal.ck:11:read-normal: exit(0)
src/tests/userprog/exec-once.ck:1:# -*- perl -*-
src/tests/userprog/exec-once.ck:6:(exec-once) begin
src/tests/userprog/exec-once.ck:7:(child-simple) run
src/tests/userprog/exec-once.ck:8:child-simple: exit(81)
src/tests/userprog/exec-once.ck:9:(exec-once) end
src/tests/userprog/exec-once.ck:10:exec-once: exit(0)
src/tests/userprog/read-bad-ptr.ck:1:# -*- perl -*-
src/tests/userprog/read-bad-ptr.ck:6:(read-bad-ptr) begin
src/tests/userprog/read-bad-ptr.ck:7:(read-bad-ptr) open "sample.txt"
src/tests/userprog/read-bad-ptr.ck:8:(read-bad-ptr) end
src/tests/userprog/read-bad-ptr.ck:9:read-bad-ptr: exit(0)
src/tests/userprog/read-bad-ptr.ck:11:(read-bad-ptr) begin
src/tests/userprog/read-bad-ptr.ck:12:(read-bad-ptr) open "sample.txt"
src/tests/userprog/read-bad-ptr.ck:13:read-bad-ptr: exit(-1)
src/tests/userprog/null.ck:1:# -*- perl -*-
src/tests/userprog/sc-boundary.ck:1:# -*- perl -*-
src/tests/userprog/sc-boundary.ck:6:(sc-boundary) begin
src/tests/userprog/sc-boundary.ck:7:sc-boundary: exit(42)
src/tests/userprog/rox-child.ck:1:# -*- perl -*-
src/tests/userprog/rox-child.ck:6:(rox-child) begin
src/tests/userprog/rox-child.ck:7:(rox-child) open "child-rox"
src/tests/userprog/rox-child.ck:8:(rox-child) read "child-rox"
src/tests/userprog/rox-child.ck:9:(rox-child) write "child-rox"
src/tests/userprog/rox-child.ck:10:(rox-child) exec "child-rox 1"
src/tests/userprog/rox-child.ck:11:(child-rox) begin
src/tests/userprog/rox-child.ck:12:(child-rox) try to write "child-rox"
src/tests/userprog/rox-child.ck:13:(child-rox) try to write "child-rox"
src/tests/userprog/rox-child.ck:14:(child-rox) end
src/tests/userprog/rox-child.ck:15:child-rox: exit(12)
src/tests/userprog/rox-child.ck:16:(rox-child) write "child-rox"
src/tests/userprog/rox-child.ck:17:(rox-child) end
src/tests/userprog/rox-child.ck:18:rox-child: exit(0)
src/tests/userprog/bad-read.ck:1:# -*- perl -*-
src/tests/userprog/bad-read.ck:6:(bad-read) begin
src/tests/userprog/bad-read.ck:7:bad-read: exit(-1)
src/tests/userprog/bad-read2.ck:1:# -*- perl -*-
src/tests/userprog/bad-read2.ck:6:(bad-read2) begin
src/tests/userprog/bad-read2.ck:7:bad-read2: exit(-1)
src/tests/userprog/multi-recurse.ck:1:# -*- perl -*-
src/tests/userprog/multi-recurse.ck:6:(multi-recurse) begin 15
src/tests/userprog/multi-recurse.ck:7:(multi-recurse) exec("multi-recurse 14")
src/tests/userprog/multi-recurse.ck:8:(multi-recurse) begin 14
src/tests/userprog/multi-recurse.ck:9:(multi-recurse) exec("multi-recurse 13")
src/tests/userprog/multi-recurse.ck:10:(multi-recurse) begin 13
src/tests/userprog/multi-recurse.ck:11:(multi-recurse) exec("multi-recurse 12")
src/tests/userprog/multi-recurse.ck:12:(multi-recurse) begin 12
src/tests/userprog/multi-recurse.ck:13:(multi-recurse) exec("multi-recurse 11")
src/tests/userprog/multi-recurse.ck:14:(multi-recurse) begin 11
src/tests/userprog/multi-recurse.ck:15:(multi-recurse) exec("multi-recurse 10")
src/tests/userprog/multi-recurse.ck:16:(multi-recurse) begin 10
src/tests/userprog/multi-recurse.ck:17:(multi-recurse) exec("multi-recurse 9")
src/tests/userprog/multi-recurse.ck:18:(multi-recurse) begin 9
src/tests/userprog/multi-recurse.ck:19:(multi-recurse) exec("multi-recurse 8")
src/tests/userprog/multi-recurse.ck:20:(multi-recurse) begin 8
src/tests/userprog/multi-recurse.ck:21:(multi-recurse) exec("multi-recurse 7")
src/tests/userprog/multi-recurse.ck:22:(multi-recurse) begin 7
src/tests/userprog/multi-recurse.ck:23:(multi-recurse) exec("multi-recurse 6")
src/tests/userprog/multi-recurse.ck:24:(multi-recurse) begin 6
src/tests/userprog/multi-recurse.ck:25:(multi-recurse) exec("multi-recurse 5")
src/tests/userprog/multi-recurse.ck:26:(multi-recurse) begin 5
src/tests/userprog/multi-recurse.ck:27:(multi-recurse) exec("multi-recurse 4")
src/tests/userprog/multi-recurse.ck:28:(multi-recurse) begin 4
src/tests/userprog/multi-recurse.ck:29:(multi-recurse) exec("multi-recurse 3")
src/tests/userprog/multi-recurse.ck:30:(multi-recurse) begin 3
src/tests/userprog/multi-recurse.ck:31:(multi-recurse) exec("multi-recurse 2")
src/tests/userprog/multi-recurse.ck:32:(multi-recurse) begin 2
src/tests/userprog/multi-recurse.ck:33:(multi-recurse) exec("multi-recurse 1")
src/tests/userprog/multi-recurse.ck:34:(multi-recurse) begin 1
src/tests/userprog/multi-recurse.ck:35:(multi-recurse) exec("multi-recurse 0")
src/tests/userprog/multi-recurse.ck:36:(multi-recurse) begin 0
src/tests/userprog/multi-recurse.ck:37:(multi-recurse) end 0
src/tests/userprog/multi-recurse.ck:38:multi-recurse: exit(0)
src/tests/userprog/multi-recurse.ck:39:(multi-recurse) end 1
src/tests/userprog/multi-recurse.ck:40:multi-recurse: exit(1)
src/tests/userprog/multi-recurse.ck:41:(multi-recurse) end 2
src/tests/userprog/multi-recurse.ck:42:multi-recurse: exit(2)
src/tests/userprog/multi-recurse.ck:43:(multi-recurse) end 3
src/tests/userprog/multi-recurse.ck:44:multi-recurse: exit(3)
src/tests/userprog/multi-recurse.ck:45:(multi-recurse) end 4
src/tests/userprog/multi-recurse.ck:46:multi-recurse: exit(4)
src/tests/userprog/multi-recurse.ck:47:(multi-recurse) end 5
src/tests/userprog/multi-recurse.ck:48:multi-recurse: exit(5)
src/tests/userprog/multi-recurse.ck:49:(multi-recurse) end 6
src/tests/userprog/multi-recurse.ck:50:multi-recurse: exit(6)
src/tests/userprog/multi-recurse.ck:51:(multi-recurse) end 7
src/tests/userprog/multi-recurse.ck:52:multi-recurse: exit(7)
src/tests/userprog/multi-recurse.ck:53:(multi-recurse) end 8
src/tests/userprog/multi-recurse.ck:54:multi-recurse: exit(8)
src/tests/userprog/multi-recurse.ck:55:(multi-recurse) end 9
src/tests/userprog/multi-recurse.ck:56:multi-recurse: exit(9)
src/tests/userprog/multi-recurse.ck:57:(multi-recurse) end 10
src/tests/userprog/multi-recurse.ck:58:multi-recurse: exit(10)
src/tests/userprog/multi-recurse.ck:59:(multi-recurse) end 11
src/tests/userprog/multi-recurse.ck:60:multi-recurse: exit(11)
src/tests/userprog/multi-recurse.ck:61:(multi-recurse) end 12
src/tests/userprog/multi-recurse.ck:62:multi-recurse: exit(12)
src/tests/userprog/multi-recurse.ck:63:(multi-recurse) end 13
src/tests/userprog/multi-recurse.ck:64:multi-recurse: exit(13)
src/tests/userprog/multi-recurse.ck:65:(multi-recurse) end 14
src/tests/userprog/multi-recurse.ck:66:multi-recurse: exit(14)
src/tests/userprog/multi-recurse.ck:67:(multi-recurse) end 15
src/tests/userprog/multi-recurse.ck:68:multi-recurse: exit(15)
src/tests/userprog/bad-write.c:2:   This should terminate the process with a -1 exit code. */
src/tests/userprog/bad-write.c:11:  fail ("should have exited with -1");
src/tests/userprog/write-boundary.ck:1:# -*- perl -*-
src/tests/userprog/write-boundary.ck:6:(write-boundary) begin
src/tests/userprog/write-boundary.ck:7:(write-boundary) open "sample.txt"
src/tests/userprog/write-boundary.ck:8:(write-boundary) end
src/tests/userprog/write-boundary.ck:9:write-boundary: exit(0)
src/tests/userprog/open-null.c:2:   The process must be terminated with exit code -1. */
src/tests/userprog/create-normal.ck:1:# -*- perl -*-
src/tests/userprog/create-normal.ck:6:(create-normal) begin
src/tests/userprog/create-normal.ck:7:(create-normal) create quux.dat
src/tests/userprog/create-normal.ck:8:(create-normal) end
src/tests/userprog/create-normal.ck:9:create-normal: exit(0)
src/tests/userprog/open-normal.ck:1:# -*- perl -*-
src/tests/userprog/open-normal.ck:6:(open-normal) begin
src/tests/userprog/open-normal.ck:7:(open-normal) end
src/tests/userprog/open-normal.ck:8:open-normal: exit(0)
src/tests/userprog/sc-boundary.c:4:#include <syscall-nr.h>
src/tests/userprog/sc-boundary.c:15:  p--;
src/tests/userprog/open-empty.ck:1:# -*- perl -*-
src/tests/userprog/open-empty.ck:6:(open-empty) begin
src/tests/userprog/open-empty.ck:7:(open-empty) end
src/tests/userprog/open-empty.ck:8:open-empty: exit(0)
src/tests/userprog/bad-read.c:2:   This should terminate the process with a -1 exit code. */
src/tests/userprog/bad-read.c:10:  msg ("Congratulations - you have successfully dereferenced NULL: %d", 
src/tests/userprog/bad-read.c:12:  fail ("should have exited with -1");
src/tests/userprog/close-twice.c:3:   -1. */
src/tests/userprog/sample.txt:4: have carpeting." --Dave Barry
src/tests/userprog/exec-multiple.ck:1:# -*- perl -*-
src/tests/userprog/exec-multiple.ck:6:(exec-multiple) begin
src/tests/userprog/exec-multiple.ck:7:(child-simple) run
src/tests/userprog/exec-multiple.ck:8:child-simple: exit(81)
src/tests/userprog/exec-multiple.ck:9:(child-simple) run
src/tests/userprog/exec-multiple.ck:10:child-simple: exit(81)
src/tests/userprog/exec-multiple.ck:11:(child-simple) run
src/tests/userprog/exec-multiple.ck:12:child-simple: exit(81)
src/tests/userprog/exec-multiple.ck:13:(child-simple) run
src/tests/userprog/exec-multiple.ck:14:child-simple: exit(81)
src/tests/userprog/exec-multiple.ck:15:(exec-multiple) end
src/tests/userprog/exec-multiple.ck:16:exec-multiple: exit(0)
src/tests/userprog/open-bad-ptr.ck:1:# -*- perl -*-
src/tests/userprog/open-bad-ptr.ck:6:(open-bad-ptr) begin
src/tests/userprog/open-bad-ptr.ck:7:(open-bad-ptr) end
src/tests/userprog/open-bad-ptr.ck:8:open-bad-ptr: exit(0)
src/tests/userprog/open-bad-ptr.ck:10:(open-bad-ptr) begin
src/tests/userprog/open-bad-ptr.ck:11:open-bad-ptr: exit(-1)
src/tests/userprog/child-close.c:1:/* Child process run by multi-child-fd test.
src/tests/userprog/child-close.c:4:   command-line argument.  This is invalid, because file
src/tests/userprog/child-close.c:8:   -1 exit code. */
src/tests/userprog/child-close.c:16:const char *test_name = "child-close";
src/tests/userprog/child-close.c:23:    fail ("bad command-line arguments");
src/tests/userprog/Make.tests:1:# -*- makefile -*-
src/tests/userprog/Make.tests:4:tests/%.output: PUTFILES = $(filter-out os.dsk, $^)
src/tests/userprog/Make.tests:6:tests/userprog_TESTS = $(addprefix tests/userprog/,args-none		\
src/tests/userprog/Make.tests:7:args-single args-multiple args-many args-dbl-space sc-bad-sp		\
src/tests/userprog/Make.tests:8:sc-bad-arg sc-boundary sc-boundary-2 halt exit create-normal		\
src/tests/userprog/Make.tests:9:create-empty create-null create-bad-ptr create-long create-exists	\
src/tests/userprog/Make.tests:10:create-bound open-normal open-missing open-boundary open-empty		\
src/tests/userprog/Make.tests:11:open-null open-bad-ptr open-twice close-normal close-twice close-stdin	\
src/tests/userprog/Make.tests:12:close-stdout close-bad-fd read-normal read-bad-ptr read-boundary	\
src/tests/userprog/Make.tests:13:read-zero read-stdout read-bad-fd write-normal write-bad-ptr		\
src/tests/userprog/Make.tests:14:write-boundary write-zero write-stdin write-bad-fd exec-once exec-arg	\
src/tests/userprog/Make.tests:15:exec-multiple exec-missing exec-bad-ptr wait-simple wait-twice		\
src/tests/userprog/Make.tests:16:wait-killed wait-bad-pid multi-recurse multi-child-fd rox-simple	\
src/tests/userprog/Make.tests:17:rox-child rox-multichild bad-read bad-write bad-read2 bad-write2        \
src/tests/userprog/Make.tests:18:bad-jump bad-jump2)
src/tests/userprog/Make.tests:21:tests/userprog/,child-simple child-args child-bad child-close child-rox)
src/tests/userprog/Make.tests:23:tests/userprog/args-none_SRC = tests/userprog/args.c
src/tests/userprog/Make.tests:24:tests/userprog/args-single_SRC = tests/userprog/args.c
src/tests/userprog/Make.tests:25:tests/userprog/args-multiple_SRC = tests/userprog/args.c
src/tests/userprog/Make.tests:26:tests/userprog/args-many_SRC = tests/userprog/args.c
src/tests/userprog/Make.tests:27:tests/userprog/args-dbl-space_SRC = tests/userprog/args.c
src/tests/userprog/Make.tests:28:tests/userprog/sc-bad-sp_SRC = tests/userprog/sc-bad-sp.c tests/main.c
src/tests/userprog/Make.tests:29:tests/userprog/sc-bad-arg_SRC = tests/userprog/sc-bad-arg.c tests/main.c
src/tests/userprog/Make.tests:30:tests/userprog/bad-read_SRC = tests/userprog/bad-read.c tests/main.c
src/tests/userprog/Make.tests:31:tests/userprog/bad-write_SRC = tests/userprog/bad-write.c tests/main.c
src/tests/userprog/Make.tests:32:tests/userprog/bad-jump_SRC = tests/userprog/bad-jump.c tests/main.c
src/tests/userprog/Make.tests:33:tests/userprog/bad-read2_SRC = tests/userprog/bad-read2.c tests/main.c
src/tests/userprog/Make.tests:34:tests/userprog/bad-write2_SRC = tests/userprog/bad-write2.c tests/main.c
src/tests/userprog/Make.tests:35:tests/userprog/bad-jump2_SRC = tests/userprog/bad-jump2.c tests/main.c
src/tests/userprog/Make.tests:36:tests/userprog/sc-boundary_SRC = tests/userprog/sc-boundary.c	\
src/tests/userprog/Make.tests:38:tests/userprog/sc-boundary-2_SRC = tests/userprog/sc-boundary-2.c	\
src/tests/userprog/Make.tests:42:tests/userprog/create-normal_SRC = tests/userprog/create-normal.c tests/main.c
src/tests/userprog/Make.tests:43:tests/userprog/create-empty_SRC = tests/userprog/create-empty.c tests/main.c
src/tests/userprog/Make.tests:44:tests/userprog/create-null_SRC = tests/userprog/create-null.c tests/main.c
src/tests/userprog/Make.tests:45:tests/userprog/create-bad-ptr_SRC = tests/userprog/create-bad-ptr.c	\
src/tests/userprog/Make.tests:47:tests/userprog/create-long_SRC = tests/userprog/create-long.c tests/main.c
src/tests/userprog/Make.tests:48:tests/userprog/create-exists_SRC = tests/userprog/create-exists.c tests/main.c
src/tests/userprog/Make.tests:49:tests/userprog/create-bound_SRC = tests/userprog/create-bound.c	\
src/tests/userprog/Make.tests:51:tests/userprog/open-normal_SRC = tests/userprog/open-normal.c tests/main.c
src/tests/userprog/Make.tests:52:tests/userprog/open-missing_SRC = tests/userprog/open-missing.c tests/main.c
src/tests/userprog/Make.tests:53:tests/userprog/open-boundary_SRC = tests/userprog/open-boundary.c	\
src/tests/userprog/Make.tests:55:tests/userprog/open-empty_SRC = tests/userprog/open-empty.c tests/main.c
src/tests/userprog/Make.tests:56:tests/userprog/open-null_SRC = tests/userprog/open-null.c tests/main.c
src/tests/userprog/Make.tests:57:tests/userprog/open-bad-ptr_SRC = tests/userprog/open-bad-ptr.c tests/main.c
src/tests/userprog/Make.tests:58:tests/userprog/open-twice_SRC = tests/userprog/open-twice.c tests/main.c
src/tests/userprog/Make.tests:59:tests/userprog/close-normal_SRC = tests/userprog/close-normal.c tests/main.c
src/tests/userprog/Make.tests:60:tests/userprog/close-twice_SRC = tests/userprog/close-twice.c tests/main.c
src/tests/userprog/Make.tests:61:tests/userprog/close-stdin_SRC = tests/userprog/close-stdin.c tests/main.c
src/tests/userprog/Make.tests:62:tests/userprog/close-stdout_SRC = tests/userprog/close-stdout.c tests/main.c
src/tests/userprog/Make.tests:63:tests/userprog/close-bad-fd_SRC = tests/userprog/close-bad-fd.c tests/main.c
src/tests/userprog/Make.tests:64:tests/userprog/read-normal_SRC = tests/userprog/read-normal.c tests/main.c
src/tests/userprog/Make.tests:65:tests/userprog/read-bad-ptr_SRC = tests/userprog/read-bad-ptr.c tests/main.c
src/tests/userprog/Make.tests:66:tests/userprog/read-boundary_SRC = tests/userprog/read-boundary.c	\
src/tests/userprog/Make.tests:68:tests/userprog/read-zero_SRC = tests/userprog/read-zero.c tests/main.c
src/tests/userprog/Make.tests:69:tests/userprog/read-stdout_SRC = tests/userprog/read-stdout.c tests/main.c
src/tests/userprog/Make.tests:70:tests/userprog/read-bad-fd_SRC = tests/userprog/read-bad-fd.c tests/main.c
src/tests/userprog/Make.tests:71:tests/userprog/write-normal_SRC = tests/userprog/write-normal.c tests/main.c
src/tests/userprog/Make.tests:72:tests/userprog/write-bad-ptr_SRC = tests/userprog/write-bad-ptr.c tests/main.c
src/tests/userprog/Make.tests:73:tests/userprog/write-boundary_SRC = tests/userprog/write-boundary.c	\
src/tests/userprog/Make.tests:75:tests/userprog/write-zero_SRC = tests/userprog/write-zero.c tests/main.c
src/tests/userprog/Make.tests:76:tests/userprog/write-stdin_SRC = tests/userprog/write-stdin.c tests/main.c
src/tests/userprog/Make.tests:77:tests/userprog/write-bad-fd_SRC = tests/userprog/write-bad-fd.c tests/main.c
src/tests/userprog/Make.tests:78:tests/userprog/exec-once_SRC = tests/userprog/exec-once.c tests/main.c
src/tests/userprog/Make.tests:79:tests/userprog/exec-arg_SRC = tests/userprog/exec-arg.c tests/main.c
src/tests/userprog/Make.tests:80:tests/userprog/exec-multiple_SRC = tests/userprog/exec-multiple.c tests/main.c
src/tests/userprog/Make.tests:81:tests/userprog/exec-missing_SRC = tests/userprog/exec-missing.c tests/main.c
src/tests/userprog/Make.tests:82:tests/userprog/exec-bad-ptr_SRC = tests/userprog/exec-bad-ptr.c tests/main.c
src/tests/userprog/Make.tests:83:tests/userprog/wait-simple_SRC = tests/userprog/wait-simple.c tests/main.c
src/tests/userprog/Make.tests:84:tests/userprog/wait-twice_SRC = tests/userprog/wait-twice.c tests/main.c
src/tests/userprog/Make.tests:85:tests/userprog/wait-killed_SRC = tests/userprog/wait-killed.c tests/main.c
src/tests/userprog/Make.tests:86:tests/userprog/wait-bad-pid_SRC = tests/userprog/wait-bad-pid.c tests/main.c
src/tests/userprog/Make.tests:87:tests/userprog/multi-recurse_SRC = tests/userprog/multi-recurse.c
src/tests/userprog/Make.tests:88:tests/userprog/multi-child-fd_SRC = tests/userprog/multi-child-fd.c	\
src/tests/userprog/Make.tests:90:tests/userprog/rox-simple_SRC = tests/userprog/rox-simple.c tests/main.c
src/tests/userprog/Make.tests:91:tests/userprog/rox-child_SRC = tests/userprog/rox-child.c tests/main.c
src/tests/userprog/Make.tests:92:tests/userprog/rox-multichild_SRC = tests/userprog/rox-multichild.c	\
src/tests/userprog/Make.tests:95:tests/userprog/child-simple_SRC = tests/userprog/child-simple.c
src/tests/userprog/Make.tests:96:tests/userprog/child-args_SRC = tests/userprog/args.c
src/tests/userprog/Make.tests:97:tests/userprog/child-bad_SRC = tests/userprog/child-bad.c tests/main.c
src/tests/userprog/Make.tests:98:tests/userprog/child-close_SRC = tests/userprog/child-close.c
src/tests/userprog/Make.tests:99:tests/userprog/child-rox_SRC = tests/userprog/child-rox.c
src/tests/userprog/Make.tests:103:tests/userprog/args-single_ARGS = onearg
src/tests/userprog/Make.tests:104:tests/userprog/args-multiple_ARGS = some arguments for you!
src/tests/userprog/Make.tests:105:tests/userprog/args-many_ARGS = a b c d e f g h i j k l m n o p q r s t u v
src/tests/userprog/Make.tests:106:tests/userprog/args-dbl-space_ARGS = two  spaces!
src/tests/userprog/Make.tests:107:tests/userprog/multi-recurse_ARGS = 15
src/tests/userprog/Make.tests:109:tests/userprog/open-normal_PUTFILES += tests/userprog/sample.txt
src/tests/userprog/Make.tests:110:tests/userprog/open-boundary_PUTFILES += tests/userprog/sample.txt
src/tests/userprog/Make.tests:111:tests/userprog/open-twice_PUTFILES += tests/userprog/sample.txt
src/tests/userprog/Make.tests:112:tests/userprog/close-normal_PUTFILES += tests/userprog/sample.txt
src/tests/userprog/Make.tests:113:tests/userprog/close-twice_PUTFILES += tests/userprog/sample.txt
src/tests/userprog/Make.tests:114:tests/userprog/read-normal_PUTFILES += tests/userprog/sample.txt
src/tests/userprog/Make.tests:115:tests/userprog/read-bad-ptr_PUTFILES += tests/userprog/sample.txt
src/tests/userprog/Make.tests:116:tests/userprog/read-boundary_PUTFILES += tests/userprog/sample.txt
src/tests/userprog/Make.tests:117:tests/userprog/read-zero_PUTFILES += tests/userprog/sample.txt
src/tests/userprog/Make.tests:118:tests/userprog/write-normal_PUTFILES += tests/userprog/sample.txt
src/tests/userprog/Make.tests:119:tests/userprog/write-bad-ptr_PUTFILES += tests/userprog/sample.txt
src/tests/userprog/Make.tests:120:tests/userprog/write-boundary_PUTFILES += tests/userprog/sample.txt
src/tests/userprog/Make.tests:121:tests/userprog/write-zero_PUTFILES += tests/userprog/sample.txt
src/tests/userprog/Make.tests:122:tests/userprog/multi-child-fd_PUTFILES += tests/userprog/sample.txt
src/tests/userprog/Make.tests:124:tests/userprog/exec-once_PUTFILES += tests/userprog/child-simple
src/tests/userprog/Make.tests:125:tests/userprog/exec-multiple_PUTFILES += tests/userprog/child-simple
src/tests/userprog/Make.tests:126:tests/userprog/wait-simple_PUTFILES += tests/userprog/child-simple
src/tests/userprog/Make.tests:127:tests/userprog/wait-twice_PUTFILES += tests/userprog/child-simple
src/tests/userprog/Make.tests:129:tests/userprog/exec-arg_PUTFILES += tests/userprog/child-args
src/tests/userprog/Make.tests:130:tests/userprog/multi-child-fd_PUTFILES += tests/userprog/child-close
src/tests/userprog/Make.tests:131:tests/userprog/wait-killed_PUTFILES += tests/userprog/child-bad
src/tests/userprog/Make.tests:132:tests/userprog/rox-child_PUTFILES += tests/userprog/child-rox
src/tests/userprog/Make.tests:133:tests/userprog/rox-multichild_PUTFILES += tests/userprog/child-rox
src/tests/userprog/args-many.ck:1:# -*- perl -*-
src/tests/userprog/args-many.ck:8:(args) argv[0] = 'args-many'
src/tests/userprog/args-many.ck:33:args-many: exit(0)
src/tests/userprog/write-bad-fd.ck:1:# -*- perl -*-
src/tests/userprog/write-bad-fd.ck:6:(write-bad-fd) begin
src/tests/userprog/write-bad-fd.ck:7:(write-bad-fd) end
src/tests/userprog/write-bad-fd.ck:8:write-bad-fd: exit(0)
src/tests/userprog/write-bad-fd.ck:10:(write-bad-fd) begin
src/tests/userprog/write-bad-fd.ck:11:write-bad-fd: exit(-1)
src/tests/userprog/exec-arg.ck:1:# -*- perl -*-
src/tests/userprog/exec-arg.ck:6:(exec-arg) begin
src/tests/userprog/exec-arg.ck:9:(args) argv[0] = 'child-args'
src/tests/userprog/exec-arg.ck:13:child-args: exit(0)
src/tests/userprog/exec-arg.ck:14:(exec-arg) end
src/tests/userprog/exec-arg.ck:15:exec-arg: exit(0)
src/tests/userprog/read-normal.c:10:  check_file ("sample.txt", sample, sizeof sample - 1);
src/tests/userprog/open-bad-ptr.c:2:   The process must be terminated with -1 exit code. */
src/tests/userprog/open-bad-ptr.c:12:  fail ("should have called exit(-1)");
src/tests/userprog/bad-read2.c:2:   This should terminate the process with a -1 exit code. */
src/tests/userprog/bad-read2.c:10:  msg ("Congratulations - you have successfully read kernel memory: %d", 
src/tests/userprog/bad-read2.c:12:  fail ("should have exited with -1");
src/tests/userprog/create-long.ck:1:# -*- perl -*-
src/tests/userprog/create-long.ck:6:(create-long) begin
src/tests/userprog/create-long.ck:7:(create-long) create("x..."): 0
src/tests/userprog/create-long.ck:8:(create-long) end
src/tests/userprog/create-long.ck:9:create-long: exit(0)
src/tests/userprog/write-zero.c:1:/* Try a 0-byte write, which should return 0 without writing
src/tests/userprog/close-stdin.c:2:   fail silently or terminate with exit code -1. */
src/tests/userprog/read-stdout.ck:1:# -*- perl -*-
src/tests/userprog/read-stdout.ck:6:(read-stdout) begin
src/tests/userprog/read-stdout.ck:7:(read-stdout) end
src/tests/userprog/read-stdout.ck:8:read-stdout: exit(0)
src/tests/userprog/read-stdout.ck:10:(read-stdout) begin
src/tests/userprog/read-stdout.ck:11:read-stdout: exit(-1)
src/tests/userprog/create-long.c:14:  name[sizeof name - 1] = '\0';
src/tests/userprog/bad-jump2.c:2:   This should terminate the process with a -1 exit code. */
src/tests/userprog/bad-jump2.c:10:  msg ("Congratulations - you have successfully called kernel code: %d", 
src/tests/userprog/bad-jump2.c:12:  fail ("should have exited with -1");
src/tests/userprog/sc-bad-sp.c:2:   bad address.  The process must be terminated with -1 exit
src/tests/userprog/sc-bad-sp.c:18:  asm volatile ("movl $.-(64*1024*1024), %esp; int $0x30");
src/tests/userprog/sc-bad-sp.c:19:  fail ("should have called exit(-1)");
src/tests/userprog/open-boundary.ck:1:# -*- perl -*-
src/tests/userprog/open-boundary.ck:6:(open-boundary) begin
src/tests/userprog/open-boundary.ck:7:(open-boundary) open "sample.txt"
src/tests/userprog/open-boundary.ck:8:(open-boundary) end
src/tests/userprog/open-boundary.ck:9:open-boundary: exit(0)
src/tests/userprog/create-exists.c:13:  CHECK (!create ("quux.dat", 0), "try to re-create quux.dat");
src/tests/userprog/create-exists.c:15:  CHECK (!create ("warble.dat", 0), "try to re-create quux.dat");
src/tests/cksum.c:68:  for (i = n; i > 0; --i)
src/tests/lib.pm:9:    my (@a) = 0...$cnt - 1;
src/tests/lib.pm:10:    for my $i (0...$cnt - 1) {
src/tests/lib.pm:11:	my ($j) = $i + random_ulong () % ($cnt - $i);
src/tests/threads/priority-donate-sema.c:54:  lock_acquire (&ls->lock);
src/tests/threads/priority-donate-sema.c:56:  sema_down (&ls->sema);
src/tests/threads/priority-donate-sema.c:58:  lock_release (&ls->lock);
src/tests/threads/priority-donate-sema.c:67:  sema_down (&ls->sema);
src/tests/threads/priority-donate-sema.c:76:  lock_acquire (&ls->lock);
src/tests/threads/priority-donate-sema.c:79:  sema_up (&ls->sema);
src/tests/threads/priority-donate-sema.c:80:  lock_release (&ls->lock);
src/tests/threads/alarm-priority.c:2:   higher-priority threads run first. */
src/tests/threads/alarm-priority.c:29:      int priority = PRI_DEFAULT - (i + 5) % 10 - 1;
src/tests/threads/alarm-priority.c:44:  /* Busy-wait until the current time changes. */
src/tests/threads/alarm-priority.c:52:  timer_sleep (wake_time - timer_ticks ());
src/tests/threads/alarm-priority.c:54:  /* Print a message on wake-up. */
src/tests/threads/priority-donate-multiple2.ck:1:# -*- perl -*-
src/tests/threads/priority-donate-multiple2.ck:6:(priority-donate-multiple2) begin
src/tests/threads/priority-donate-multiple2.ck:7:(priority-donate-multiple2) Main thread should have priority 34.  Actual priority: 34.
src/tests/threads/priority-donate-multiple2.ck:8:(priority-donate-multiple2) Main thread should have priority 36.  Actual priority: 36.
src/tests/threads/priority-donate-multiple2.ck:9:(priority-donate-multiple2) Main thread should have priority 36.  Actual priority: 36.
src/tests/threads/priority-donate-multiple2.ck:10:(priority-donate-multiple2) Thread b acquired lock b.
src/tests/threads/priority-donate-multiple2.ck:11:(priority-donate-multiple2) Thread b finished.
src/tests/threads/priority-donate-multiple2.ck:12:(priority-donate-multiple2) Thread a acquired lock a.
src/tests/threads/priority-donate-multiple2.ck:13:(priority-donate-multiple2) Thread a finished.
src/tests/threads/priority-donate-multiple2.ck:14:(priority-donate-multiple2) Thread c finished.
src/tests/threads/priority-donate-multiple2.ck:15:(priority-donate-multiple2) Threads b, a, c should have just finished, in that order.
src/tests/threads/priority-donate-multiple2.ck:16:(priority-donate-multiple2) Main thread should have priority 31.  Actual priority: 31.
src/tests/threads/priority-donate-multiple2.ck:17:(priority-donate-multiple2) end
src/tests/threads/tests.c:14:    {"alarm-single", test_alarm_single},
src/tests/threads/tests.c:15:    {"alarm-multiple", test_alarm_multiple},
src/tests/threads/tests.c:16:    {"alarm-simultaneous", test_alarm_simultaneous},
src/tests/threads/tests.c:17:    {"alarm-priority", test_alarm_priority},
src/tests/threads/tests.c:18:    {"alarm-zero", test_alarm_zero},
src/tests/threads/tests.c:19:    {"alarm-negative", test_alarm_negative},
src/tests/threads/tests.c:20:    {"priority-change", test_priority_change},
src/tests/threads/tests.c:21:    {"priority-donate-one", test_priority_donate_one},
src/tests/threads/tests.c:22:    {"priority-donate-multiple", test_priority_donate_multiple},
src/tests/threads/tests.c:23:    {"priority-donate-multiple2", test_priority_donate_multiple2},
src/tests/threads/tests.c:24:    {"priority-donate-nest", test_priority_donate_nest},
src/tests/threads/tests.c:25:    {"priority-donate-sema", test_priority_donate_sema},
src/tests/threads/tests.c:26:    {"priority-donate-lower", test_priority_donate_lower},
src/tests/threads/tests.c:27:    {"priority-donate-chain", test_priority_donate_chain},
src/tests/threads/tests.c:28:    {"priority-fifo", test_priority_fifo},
src/tests/threads/tests.c:29:    {"priority-preempt", test_priority_preempt},
src/tests/threads/tests.c:30:    {"priority-sema", test_priority_sema},
src/tests/threads/tests.c:31:    {"priority-condvar", test_priority_condvar},
src/tests/threads/tests.c:32:    {"mlfqs-load-1", test_mlfqs_load_1},
src/tests/threads/tests.c:33:    {"mlfqs-load-60", test_mlfqs_load_60},
src/tests/threads/tests.c:34:    {"mlfqs-load-avg", test_mlfqs_load_avg},
src/tests/threads/tests.c:35:    {"mlfqs-recent-1", test_mlfqs_recent_1},
src/tests/threads/tests.c:36:    {"mlfqs-fair-2", test_mlfqs_fair_2},
src/tests/threads/tests.c:37:    {"mlfqs-fair-20", test_mlfqs_fair_20},
src/tests/threads/tests.c:38:    {"mlfqs-nice-2", test_mlfqs_nice_2},
src/tests/threads/tests.c:39:    {"mlfqs-nice-10", test_mlfqs_nice_10},
src/tests/threads/tests.c:40:    {"mlfqs-block", test_mlfqs_block},
src/tests/threads/tests.c:52:    if (!strcmp (name, t->name))
src/tests/threads/tests.c:56:        t->function ();
src/tests/threads/tests.c:65:   and following it with a new-line character. */
src/tests/threads/tests.c:80:   and following it with a new-line character,
src/tests/threads/priority-condvar.ck:1:# -*- perl -*-
src/tests/threads/priority-condvar.ck:6:(priority-condvar) begin
src/tests/threads/priority-condvar.ck:7:(priority-condvar) Thread priority 23 starting.
src/tests/threads/priority-condvar.ck:8:(priority-condvar) Thread priority 22 starting.
src/tests/threads/priority-condvar.ck:9:(priority-condvar) Thread priority 21 starting.
src/tests/threads/priority-condvar.ck:10:(priority-condvar) Thread priority 30 starting.
src/tests/threads/priority-condvar.ck:11:(priority-condvar) Thread priority 29 starting.
src/tests/threads/priority-condvar.ck:12:(priority-condvar) Thread priority 28 starting.
src/tests/threads/priority-condvar.ck:13:(priority-condvar) Thread priority 27 starting.
src/tests/threads/priority-condvar.ck:14:(priority-condvar) Thread priority 26 starting.
src/tests/threads/priority-condvar.ck:15:(priority-condvar) Thread priority 25 starting.
src/tests/threads/priority-condvar.ck:16:(priority-condvar) Thread priority 24 starting.
src/tests/threads/priority-condvar.ck:17:(priority-condvar) Signaling...
src/tests/threads/priority-condvar.ck:18:(priority-condvar) Thread priority 30 woke up.
src/tests/threads/priority-condvar.ck:19:(priority-condvar) Signaling...
src/tests/threads/priority-condvar.ck:20:(priority-condvar) Thread priority 29 woke up.
src/tests/threads/priority-condvar.ck:21:(priority-condvar) Signaling...
src/tests/threads/priority-condvar.ck:22:(priority-condvar) Thread priority 28 woke up.
src/tests/threads/priority-condvar.ck:23:(priority-condvar) Signaling...
src/tests/threads/priority-condvar.ck:24:(priority-condvar) Thread priority 27 woke up.
src/tests/threads/priority-condvar.ck:25:(priority-condvar) Signaling...
src/tests/threads/priority-condvar.ck:26:(priority-condvar) Thread priority 26 woke up.
src/tests/threads/priority-condvar.ck:27:(priority-condvar) Signaling...
src/tests/threads/priority-condvar.ck:28:(priority-condvar) Thread priority 25 woke up.
src/tests/threads/priority-condvar.ck:29:(priority-condvar) Signaling...
src/tests/threads/priority-condvar.ck:30:(priority-condvar) Thread priority 24 woke up.
src/tests/threads/priority-condvar.ck:31:(priority-condvar) Signaling...
src/tests/threads/priority-condvar.ck:32:(priority-condvar) Thread priority 23 woke up.
src/tests/threads/priority-condvar.ck:33:(priority-condvar) Signaling...
src/tests/threads/priority-condvar.ck:34:(priority-condvar) Thread priority 22 woke up.
src/tests/threads/priority-condvar.ck:35:(priority-condvar) Signaling...
src/tests/threads/priority-condvar.ck:36:(priority-condvar) Thread priority 21 woke up.
src/tests/threads/priority-condvar.ck:37:(priority-condvar) end
src/tests/threads/priority-preempt.c:1:/* Ensures that a high-priority thread really preempts.
src/tests/threads/priority-preempt.c:26:  thread_create ("high-priority", PRI_DEFAULT + 1, simple_thread_func, NULL);
src/tests/threads/priority-preempt.c:27:  msg ("The high-priority thread should have already completed.");
src/tests/threads/Rubric.mlfqs:2:5	mlfqs-load-1
src/tests/threads/Rubric.mlfqs:3:5	mlfqs-load-60
src/tests/threads/Rubric.mlfqs:4:3	mlfqs-load-avg
src/tests/threads/Rubric.mlfqs:6:5	mlfqs-recent-1
src/tests/threads/Rubric.mlfqs:8:5	mlfqs-fair-2
src/tests/threads/Rubric.mlfqs:9:3	mlfqs-fair-20
src/tests/threads/Rubric.mlfqs:11:4	mlfqs-nice-2
src/tests/threads/Rubric.mlfqs:12:2	mlfqs-nice-10
src/tests/threads/Rubric.mlfqs:14:5	mlfqs-block
src/tests/threads/mlfqs-load-1.c:4:   perl -e '$i++,$a=(59*$a+1)/60while$a<=.5;print "$i\n"'
src/tests/threads/priority-donate-multiple.ck:1:# -*- perl -*-
src/tests/threads/priority-donate-multiple.ck:6:(priority-donate-multiple) begin
src/tests/threads/priority-donate-multiple.ck:7:(priority-donate-multiple) Main thread should have priority 32.  Actual priority: 32.
src/tests/threads/priority-donate-multiple.ck:8:(priority-donate-multiple) Main thread should have priority 33.  Actual priority: 33.
src/tests/threads/priority-donate-multiple.ck:9:(priority-donate-multiple) Thread b acquired lock b.
src/tests/threads/priority-donate-multiple.ck:10:(priority-donate-multiple) Thread b finished.
src/tests/threads/priority-donate-multiple.ck:11:(priority-donate-multiple) Thread b should have just finished.
src/tests/threads/priority-donate-multiple.ck:12:(priority-donate-multiple) Main thread should have priority 32.  Actual priority: 32.
src/tests/threads/priority-donate-multiple.ck:13:(priority-donate-multiple) Thread a acquired lock a.
src/tests/threads/priority-donate-multiple.ck:14:(priority-donate-multiple) Thread a finished.
src/tests/threads/priority-donate-multiple.ck:15:(priority-donate-multiple) Thread a should have just finished.
src/tests/threads/priority-donate-multiple.ck:16:(priority-donate-multiple) Main thread should have priority 31.  Actual priority: 31.
src/tests/threads/priority-donate-multiple.ck:17:(priority-donate-multiple) end
src/tests/threads/priority-sema.ck:1:# -*- perl -*-
src/tests/threads/priority-sema.ck:6:(priority-sema) begin
src/tests/threads/priority-sema.ck:7:(priority-sema) Thread priority 30 woke up.
src/tests/threads/priority-sema.ck:8:(priority-sema) Back in main thread.
src/tests/threads/priority-sema.ck:9:(priority-sema) Thread priority 29 woke up.
src/tests/threads/priority-sema.ck:10:(priority-sema) Back in main thread.
src/tests/threads/priority-sema.ck:11:(priority-sema) Thread priority 28 woke up.
src/tests/threads/priority-sema.ck:12:(priority-sema) Back in main thread.
src/tests/threads/priority-sema.ck:13:(priority-sema) Thread priority 27 woke up.
src/tests/threads/priority-sema.ck:14:(priority-sema) Back in main thread.
src/tests/threads/priority-sema.ck:15:(priority-sema) Thread priority 26 woke up.
src/tests/threads/priority-sema.ck:16:(priority-sema) Back in main thread.
src/tests/threads/priority-sema.ck:17:(priority-sema) Thread priority 25 woke up.
src/tests/threads/priority-sema.ck:18:(priority-sema) Back in main thread.
src/tests/threads/priority-sema.ck:19:(priority-sema) Thread priority 24 woke up.
src/tests/threads/priority-sema.ck:20:(priority-sema) Back in main thread.
src/tests/threads/priority-sema.ck:21:(priority-sema) Thread priority 23 woke up.
src/tests/threads/priority-sema.ck:22:(priority-sema) Back in main thread.
src/tests/threads/priority-sema.ck:23:(priority-sema) Thread priority 22 woke up.
src/tests/threads/priority-sema.ck:24:(priority-sema) Back in main thread.
src/tests/threads/priority-sema.ck:25:(priority-sema) Thread priority 21 woke up.
src/tests/threads/priority-sema.ck:26:(priority-sema) Back in main thread.
src/tests/threads/priority-sema.ck:27:(priority-sema) end
src/tests/threads/mlfqs-fair-20.ck:1:# -*- perl -*-
src/tests/threads/priority-fifo.ck:1:# -*- perl -*-
src/tests/threads/priority-fifo.ck:5:# (priority-fifo) iteration: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
src/tests/threads/priority-fifo.ck:6:# (priority-fifo) iteration: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
src/tests/threads/priority-fifo.ck:7:# (priority-fifo) iteration: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
src/tests/threads/priority-fifo.ck:8:# (priority-fifo) iteration: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
src/tests/threads/priority-fifo.ck:9:# (priority-fifo) iteration: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
src/tests/threads/priority-fifo.ck:10:# (priority-fifo) iteration: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
src/tests/threads/priority-fifo.ck:11:# (priority-fifo) iteration: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
src/tests/threads/priority-fifo.ck:12:# (priority-fifo) iteration: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
src/tests/threads/priority-fifo.ck:13:# (priority-fifo) iteration: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
src/tests/threads/priority-fifo.ck:14:# (priority-fifo) iteration: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
src/tests/threads/priority-fifo.ck:15:# (priority-fifo) iteration: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
src/tests/threads/priority-fifo.ck:16:# (priority-fifo) iteration: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
src/tests/threads/priority-fifo.ck:17:# (priority-fifo) iteration: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
src/tests/threads/priority-fifo.ck:18:# (priority-fifo) iteration: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
src/tests/threads/priority-fifo.ck:19:# (priority-fifo) iteration: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
src/tests/threads/priority-fifo.ck:20:# (priority-fifo) iteration: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
src/tests/threads/priority-fifo.ck:37:my (@t) = (-1) x $thread_cnt;
src/tests/threads/priority-sema.c:1:/* Tests that the highest-priority thread waiting on a semaphore
src/tests/threads/priority-sema.c:27:      int priority = PRI_DEFAULT - (i + 3) % 10 - 1;
src/tests/threads/priority-donate-nest.ck:1:# -*- perl -*-
src/tests/threads/priority-donate-nest.ck:6:(priority-donate-nest) begin
src/tests/threads/priority-donate-nest.ck:7:(priority-donate-nest) Low thread should have priority 32.  Actual priority: 32.
src/tests/threads/priority-donate-nest.ck:8:(priority-donate-nest) Low thread should have priority 33.  Actual priority: 33.
src/tests/threads/priority-donate-nest.ck:9:(priority-donate-nest) Medium thread should have priority 33.  Actual priority: 33.
src/tests/threads/priority-donate-nest.ck:10:(priority-donate-nest) Medium thread got the lock.
src/tests/threads/priority-donate-nest.ck:11:(priority-donate-nest) High thread got the lock.
src/tests/threads/priority-donate-nest.ck:12:(priority-donate-nest) High thread finished.
src/tests/threads/priority-donate-nest.ck:13:(priority-donate-nest) High thread should have just finished.
src/tests/threads/priority-donate-nest.ck:14:(priority-donate-nest) Middle thread finished.
src/tests/threads/priority-donate-nest.ck:15:(priority-donate-nest) Medium thread should just have finished.
src/tests/threads/priority-donate-nest.ck:16:(priority-donate-nest) Low thread should have priority 31.  Actual priority: 31.
src/tests/threads/priority-donate-nest.ck:17:(priority-donate-nest) end
src/tests/threads/mlfqs-recent-1.c:121:      timer_sleep (DIV_ROUND_UP (start_time, TIMER_FREQ) - start_time
src/tests/threads/alarm-single.ck:1:# -*- perl -*-
src/tests/threads/mlfqs-load-60.ck:1:# -*- perl -*-
src/tests/threads/Rubric.priority:2:3	priority-change
src/tests/threads/Rubric.priority:3:3	priority-preempt
src/tests/threads/Rubric.priority:5:3	priority-fifo
src/tests/threads/Rubric.priority:6:3	priority-sema
src/tests/threads/Rubric.priority:7:3	priority-condvar
src/tests/threads/Rubric.priority:9:3	priority-donate-one
src/tests/threads/Rubric.priority:10:3	priority-donate-multiple
src/tests/threads/Rubric.priority:11:3	priority-donate-multiple2
src/tests/threads/Rubric.priority:12:3	priority-donate-nest
src/tests/threads/Rubric.priority:13:5	priority-donate-chain
src/tests/threads/Rubric.priority:14:3	priority-donate-sema
src/tests/threads/Rubric.priority:15:3	priority-donate-lower
src/tests/threads/priority-condvar.c:1:/* Tests that cond_signal() wakes up the highest-priority thread
src/tests/threads/priority-condvar.c:30:      int priority = PRI_DEFAULT - (i + 7) % 10 - 1;
src/tests/threads/mlfqs-load-60.c:136:      timer_sleep (sleep_until - timer_ticks ());
src/tests/threads/mlfqs-load-60.c:151:  timer_sleep (sleep_time - timer_elapsed (start_time));
src/tests/threads/mlfqs-load-60.c:154:  timer_sleep (exit_time - timer_elapsed (start_time));
src/tests/threads/priority-donate-lower.c:2:   higher-priority thread that blocks acquiring the lock, causing
src/tests/threads/priority-donate-lower.c:33:  thread_set_priority (PRI_DEFAULT - 10);
src/tests/threads/priority-donate-lower.c:39:       PRI_DEFAULT - 10, thread_get_priority ());
src/tests/threads/priority-donate-multiple.c:2:   higher-priority threads.  Each of these threads blocks
src/tests/threads/priority-preempt.ck:1:# -*- perl -*-
src/tests/threads/priority-preempt.ck:6:(priority-preempt) begin
src/tests/threads/priority-preempt.ck:7:(priority-preempt) Thread high-priority iteration 0
src/tests/threads/priority-preempt.ck:8:(priority-preempt) Thread high-priority iteration 1
src/tests/threads/priority-preempt.ck:9:(priority-preempt) Thread high-priority iteration 2
src/tests/threads/priority-preempt.ck:10:(priority-preempt) Thread high-priority iteration 3
src/tests/threads/priority-preempt.ck:11:(priority-preempt) Thread high-priority iteration 4
src/tests/threads/priority-preempt.ck:12:(priority-preempt) Thread high-priority done!
src/tests/threads/priority-preempt.ck:13:(priority-preempt) The high-priority thread should have already completed.
src/tests/threads/priority-preempt.ck:14:(priority-preempt) end
src/tests/threads/priority-donate-chain.ck:1:# -*- perl -*-
src/tests/threads/priority-donate-chain.ck:6:(priority-donate-chain) begin
src/tests/threads/priority-donate-chain.ck:7:(priority-donate-chain) main got lock.
src/tests/threads/priority-donate-chain.ck:8:(priority-donate-chain) main should have priority 3.  Actual priority: 3.
src/tests/threads/priority-donate-chain.ck:9:(priority-donate-chain) main should have priority 6.  Actual priority: 6.
src/tests/threads/priority-donate-chain.ck:10:(priority-donate-chain) main should have priority 9.  Actual priority: 9.
src/tests/threads/priority-donate-chain.ck:11:(priority-donate-chain) main should have priority 12.  Actual priority: 12.
src/tests/threads/priority-donate-chain.ck:12:(priority-donate-chain) main should have priority 15.  Actual priority: 15.
src/tests/threads/priority-donate-chain.ck:13:(priority-donate-chain) main should have priority 18.  Actual priority: 18.
src/tests/threads/priority-donate-chain.ck:14:(priority-donate-chain) main should have priority 21.  Actual priority: 21.
src/tests/threads/priority-donate-chain.ck:15:(priority-donate-chain) thread 1 got lock
src/tests/threads/priority-donate-chain.ck:16:(priority-donate-chain) thread 1 should have priority 21. Actual priority: 21
src/tests/threads/priority-donate-chain.ck:17:(priority-donate-chain) thread 2 got lock
src/tests/threads/priority-donate-chain.ck:18:(priority-donate-chain) thread 2 should have priority 21. Actual priority: 21
src/tests/threads/priority-donate-chain.ck:19:(priority-donate-chain) thread 3 got lock
src/tests/threads/priority-donate-chain.ck:20:(priority-donate-chain) thread 3 should have priority 21. Actual priority: 21
src/tests/threads/priority-donate-chain.ck:21:(priority-donate-chain) thread 4 got lock
src/tests/threads/priority-donate-chain.ck:22:(priority-donate-chain) thread 4 should have priority 21. Actual priority: 21
src/tests/threads/priority-donate-chain.ck:23:(priority-donate-chain) thread 5 got lock
src/tests/threads/priority-donate-chain.ck:24:(priority-donate-chain) thread 5 should have priority 21. Actual priority: 21
src/tests/threads/priority-donate-chain.ck:25:(priority-donate-chain) thread 6 got lock
src/tests/threads/priority-donate-chain.ck:26:(priority-donate-chain) thread 6 should have priority 21. Actual priority: 21
src/tests/threads/priority-donate-chain.ck:27:(priority-donate-chain) thread 7 got lock
src/tests/threads/priority-donate-chain.ck:28:(priority-donate-chain) thread 7 should have priority 21. Actual priority: 21
src/tests/threads/priority-donate-chain.ck:29:(priority-donate-chain) thread 7 finishing with priority 21.
src/tests/threads/priority-donate-chain.ck:30:(priority-donate-chain) interloper 7 finished.
src/tests/threads/priority-donate-chain.ck:31:(priority-donate-chain) thread 6 finishing with priority 18.
src/tests/threads/priority-donate-chain.ck:32:(priority-donate-chain) interloper 6 finished.
src/tests/threads/priority-donate-chain.ck:33:(priority-donate-chain) thread 5 finishing with priority 15.
src/tests/threads/priority-donate-chain.ck:34:(priority-donate-chain) interloper 5 finished.
src/tests/threads/priority-donate-chain.ck:35:(priority-donate-chain) thread 4 finishing with priority 12.
src/tests/threads/priority-donate-chain.ck:36:(priority-donate-chain) interloper 4 finished.
src/tests/threads/priority-donate-chain.ck:37:(priority-donate-chain) thread 3 finishing with priority 9.
src/tests/threads/priority-donate-chain.ck:38:(priority-donate-chain) interloper 3 finished.
src/tests/threads/priority-donate-chain.ck:39:(priority-donate-chain) thread 2 finishing with priority 6.
src/tests/threads/priority-donate-chain.ck:40:(priority-donate-chain) interloper 2 finished.
src/tests/threads/priority-donate-chain.ck:41:(priority-donate-chain) thread 1 finishing with priority 3.
src/tests/threads/priority-donate-chain.ck:42:(priority-donate-chain) interloper 1 finished.
src/tests/threads/priority-donate-chain.ck:43:(priority-donate-chain) main finishing with priority 0.
src/tests/threads/priority-donate-chain.ck:44:(priority-donate-chain) end
src/tests/threads/alarm-multiple.ck:1:# -*- perl -*-
src/tests/threads/alarm-simultaneous.c:2:   duration, M times.  Records the wake-up order and verifies
src/tests/threads/alarm-simultaneous.c:70:  for (i = 1; i < test.output_pos - output; i++) 
src/tests/threads/alarm-simultaneous.c:72:         i / thread_cnt, i % thread_cnt, output[i] - output[i - 1]);
src/tests/threads/alarm-simultaneous.c:87:  for (i = 1; i <= test->iterations; i++) 
src/tests/threads/alarm-simultaneous.c:89:      int64_t sleep_until = test->start + i * 10;
src/tests/threads/alarm-simultaneous.c:90:      timer_sleep (sleep_until - timer_ticks ());
src/tests/threads/alarm-simultaneous.c:91:      *test->output_pos++ = timer_ticks () - test->start;
src/tests/threads/priority-change.c:2:   longer the highest-priority thread in the system causes it to
src/tests/threads/priority-change.c:18:  msg ("Creating a high-priority thread 2.");
src/tests/threads/priority-change.c:21:  thread_set_priority (PRI_DEFAULT - 2);
src/tests/threads/priority-change.c:29:  thread_set_priority (PRI_DEFAULT - 1);
src/tests/threads/mlfqs-block.ck:1:# -*- perl -*-
src/tests/threads/mlfqs-block.ck:6:(mlfqs-block) begin
src/tests/threads/mlfqs-block.ck:7:(mlfqs-block) Main thread acquiring lock.
src/tests/threads/mlfqs-block.ck:8:(mlfqs-block) Main thread creating block thread, sleeping 25 seconds...
src/tests/threads/mlfqs-block.ck:9:(mlfqs-block) Block thread spinning for 20 seconds...
src/tests/threads/mlfqs-block.ck:10:(mlfqs-block) Block thread acquiring lock...
src/tests/threads/mlfqs-block.ck:11:(mlfqs-block) Main thread spinning for 5 seconds...
src/tests/threads/mlfqs-block.ck:12:(mlfqs-block) Main thread releasing lock.
src/tests/threads/mlfqs-block.ck:13:(mlfqs-block) ...got it.
src/tests/threads/mlfqs-block.ck:14:(mlfqs-block) Block thread should have already acquired lock.
src/tests/threads/mlfqs-block.ck:15:(mlfqs-block) end
src/tests/threads/mlfqs-load-avg.c:142:  thread_set_nice (-20);
src/tests/threads/mlfqs-load-avg.c:148:      timer_sleep (sleep_until - timer_ticks ());
src/tests/threads/mlfqs-load-avg.c:163:  timer_sleep (sleep_time - timer_elapsed (start_time));
src/tests/threads/mlfqs-load-avg.c:166:  timer_sleep (exit_time - timer_elapsed (start_time));
src/tests/threads/priority-donate-one.ck:1:# -*- perl -*-
src/tests/threads/priority-donate-one.ck:6:(priority-donate-one) begin
src/tests/threads/priority-donate-one.ck:7:(priority-donate-one) This thread should have priority 32.  Actual priority: 32.
src/tests/threads/priority-donate-one.ck:8:(priority-donate-one) This thread should have priority 33.  Actual priority: 33.
src/tests/threads/priority-donate-one.ck:9:(priority-donate-one) acquire2: got the lock
src/tests/threads/priority-donate-one.ck:10:(priority-donate-one) acquire2: done
src/tests/threads/priority-donate-one.ck:11:(priority-donate-one) acquire1: got the lock
src/tests/threads/priority-donate-one.ck:12:(priority-donate-one) acquire1: done
src/tests/threads/priority-donate-one.ck:13:(priority-donate-one) acquire2, acquire1 must already have finished, in that order.
src/tests/threads/priority-donate-one.ck:14:(priority-donate-one) This should be the last line before finishing this test.
src/tests/threads/priority-donate-one.ck:15:(priority-donate-one) end
src/tests/threads/mlfqs-load-1.ck:1:# -*- perl -*-
src/tests/threads/mlfqs-load-1.ck:13:  unless grep ($_ eq '(mlfqs-load-1) PASS', @output);
src/tests/threads/alarm-zero.ck:1:# -*- perl -*-
src/tests/threads/alarm-zero.ck:6:(alarm-zero) begin
src/tests/threads/alarm-zero.ck:7:(alarm-zero) PASS
src/tests/threads/alarm-zero.ck:8:(alarm-zero) end
src/tests/threads/alarm-priority.ck:1:# -*- perl -*-
src/tests/threads/alarm-priority.ck:6:(alarm-priority) begin
src/tests/threads/alarm-priority.ck:7:(alarm-priority) Thread priority 30 woke up.
src/tests/threads/alarm-priority.ck:8:(alarm-priority) Thread priority 29 woke up.
src/tests/threads/alarm-priority.ck:9:(alarm-priority) Thread priority 28 woke up.
src/tests/threads/alarm-priority.ck:10:(alarm-priority) Thread priority 27 woke up.
src/tests/threads/alarm-priority.ck:11:(alarm-priority) Thread priority 26 woke up.
src/tests/threads/alarm-priority.ck:12:(alarm-priority) Thread priority 25 woke up.
src/tests/threads/alarm-priority.ck:13:(alarm-priority) Thread priority 24 woke up.
src/tests/threads/alarm-priority.ck:14:(alarm-priority) Thread priority 23 woke up.
src/tests/threads/alarm-priority.ck:15:(alarm-priority) Thread priority 22 woke up.
src/tests/threads/alarm-priority.ck:16:(alarm-priority) Thread priority 21 woke up.
src/tests/threads/alarm-priority.ck:17:(alarm-priority) end
src/tests/threads/mlfqs-fair.c:8:   The mlfqs-nice-2 test runs 2 threads, one with nice 0, the
src/tests/threads/mlfqs-fair.c:12:   The mlfqs-nice-10 test runs 10 threads with nice 0 through 9.
src/tests/threads/mlfqs-fair.c:75:  ASSERT (nice_min >= -10);
src/tests/threads/mlfqs-fair.c:77:  ASSERT (nice_min + nice_step * (thread_cnt - 1) <= 20);
src/tests/threads/mlfqs-fair.c:79:  thread_set_nice (-20);
src/tests/threads/mlfqs-fair.c:89:      ti->start_time = start_time;
src/tests/threads/mlfqs-fair.c:90:      ti->tick_count = 0;
src/tests/threads/mlfqs-fair.c:91:      ti->nice = nice;
src/tests/threads/mlfqs-fair.c:115:  thread_set_nice (ti->nice);
src/tests/threads/mlfqs-fair.c:116:  timer_sleep (sleep_time - timer_elapsed (ti->start_time));
src/tests/threads/mlfqs-fair.c:117:  while (timer_elapsed (ti->start_time) < spin_time) 
src/tests/threads/mlfqs-fair.c:121:        ti->tick_count++;
src/tests/threads/priority-donate-nest.c:1:/* Low-priority main thread L acquires lock A.  Medium-priority
src/tests/threads/priority-donate-nest.c:3:   High-priority thread H then blocks on acquiring lock B.  Thus,
src/tests/threads/priority-donate-nest.c:68:  lock_acquire (locks->b);
src/tests/threads/priority-donate-nest.c:69:  lock_acquire (locks->a);
src/tests/threads/priority-donate-nest.c:75:  lock_release (locks->a);
src/tests/threads/priority-donate-nest.c:78:  lock_release (locks->b);
src/tests/threads/priority-fifo.c:2:   that they consistently run in the same round-robin order.
src/tests/threads/priority-fifo.c:59:      d->id = i;
src/tests/threads/priority-fifo.c:60:      d->iterations = 0;
src/tests/threads/priority-fifo.c:61:      d->lock = &lock;
src/tests/threads/priority-fifo.c:62:      d->op = &op;
src/tests/threads/priority-fifo.c:78:        printf ("(priority-fifo) iteration:");
src/tests/threads/priority-fifo.c:79:      printf (" %d", d->id);
src/tests/threads/priority-fifo.c:82:      d->iterations++;
src/tests/threads/priority-fifo.c:94:      lock_acquire (data->lock);
src/tests/threads/priority-fifo.c:95:      *(*data->op)++ = data->id;
src/tests/threads/priority-fifo.c:96:      lock_release (data->lock);
src/tests/threads/Rubric.alarm:2:4	alarm-single
src/tests/threads/Rubric.alarm:3:4	alarm-multiple
src/tests/threads/Rubric.alarm:4:4	alarm-simultaneous
src/tests/threads/Rubric.alarm:5:4	alarm-priority
src/tests/threads/Rubric.alarm:7:1	alarm-zero
src/tests/threads/Rubric.alarm:8:1	alarm-negative
src/tests/threads/mlfqs.pm:1:# -*- perl -*-
src/tests/threads/mlfqs.pm:12:	$load_avg = (59/60) * $load_avg + (1/60) * $ready->[$i];
src/tests/threads/mlfqs.pm:15:	if (defined $recent_delta->[$i]) {
src/tests/threads/mlfqs.pm:18:	    $recent_cpu = ($recent_cpu + $recent_delta->[$i]) * $load_factor;
src/tests/threads/mlfqs.pm:42:	      foreach 0...($thread_cnt - 1);
src/tests/threads/mlfqs.pm:47:	foreach my $j (0...($thread_cnt - 1)) {
src/tests/threads/mlfqs.pm:101:	my ($actual) = $actual_ref->[$t];
src/tests/threads/mlfqs.pm:102:	my ($expected) = $expected_ref->[$t];
src/tests/threads/mlfqs.pm:104:	  if !defined ($actual) || abs ($actual - $expected) > $maxdiff + .01;
src/tests/threads/mlfqs.pm:109:    mlfqs_row ($indep_var, "actual", "<->", "expected", "explanation");
src/tests/threads/mlfqs.pm:110:    mlfqs_row ("------", "--------", "---", "--------", '-' x 40);
src/tests/threads/mlfqs.pm:112:	my ($actual) = $actual_ref->[$t];
src/tests/threads/mlfqs.pm:113:	my ($expected) = $expected_ref->[$t];
src/tests/threads/mlfqs.pm:120:	    my ($delta) = abs ($actual - $expected);
src/tests/threads/mlfqs.pm:122:		my ($excess) = $delta - $maxdiff;
src/tests/threads/mlfqs.pm:143:    printf "%6s %8s %3s %-8s %s\n", @_;
src/tests/threads/priority-donate-lower.ck:1:# -*- perl -*-
src/tests/threads/priority-donate-lower.ck:6:(priority-donate-lower) begin
src/tests/threads/priority-donate-lower.ck:7:(priority-donate-lower) Main thread should have priority 41.  Actual priority: 41.
src/tests/threads/priority-donate-lower.ck:8:(priority-donate-lower) Lowering base priority...
src/tests/threads/priority-donate-lower.ck:9:(priority-donate-lower) Main thread should have priority 41.  Actual priority: 41.
src/tests/threads/priority-donate-lower.ck:10:(priority-donate-lower) acquire: got the lock
src/tests/threads/priority-donate-lower.ck:11:(priority-donate-lower) acquire: done
src/tests/threads/priority-donate-lower.ck:12:(priority-donate-lower) acquire must already have finished.
src/tests/threads/priority-donate-lower.ck:13:(priority-donate-lower) Main thread should have priority 21.  Actual priority: 21.
src/tests/threads/priority-donate-lower.ck:14:(priority-donate-lower) end
src/tests/threads/alarm-simultaneous.ck:1:# -*- perl -*-
src/tests/threads/alarm-simultaneous.ck:6:(alarm-simultaneous) begin
src/tests/threads/alarm-simultaneous.ck:7:(alarm-simultaneous) Creating 3 threads to sleep 5 times each.
src/tests/threads/alarm-simultaneous.ck:8:(alarm-simultaneous) Each thread sleeps 10 ticks each time.
src/tests/threads/alarm-simultaneous.ck:9:(alarm-simultaneous) Within an iteration, all threads should wake up on the same tick.
src/tests/threads/alarm-simultaneous.ck:10:(alarm-simultaneous) iteration 0, thread 0: woke up after 10 ticks
src/tests/threads/alarm-simultaneous.ck:11:(alarm-simultaneous) iteration 0, thread 1: woke up 0 ticks later
src/tests/threads/alarm-simultaneous.ck:12:(alarm-simultaneous) iteration 0, thread 2: woke up 0 ticks later
src/tests/threads/alarm-simultaneous.ck:13:(alarm-simultaneous) iteration 1, thread 0: woke up 10 ticks later
src/tests/threads/alarm-simultaneous.ck:14:(alarm-simultaneous) iteration 1, thread 1: woke up 0 ticks later
src/tests/threads/alarm-simultaneous.ck:15:(alarm-simultaneous) iteration 1, thread 2: woke up 0 ticks later
src/tests/threads/alarm-simultaneous.ck:16:(alarm-simultaneous) iteration 2, thread 0: woke up 10 ticks later
src/tests/threads/alarm-simultaneous.ck:17:(alarm-simultaneous) iteration 2, thread 1: woke up 0 ticks later
src/tests/threads/alarm-simultaneous.ck:18:(alarm-simultaneous) iteration 2, thread 2: woke up 0 ticks later
src/tests/threads/alarm-simultaneous.ck:19:(alarm-simultaneous) iteration 3, thread 0: woke up 10 ticks later
src/tests/threads/alarm-simultaneous.ck:20:(alarm-simultaneous) iteration 3, thread 1: woke up 0 ticks later
src/tests/threads/alarm-simultaneous.ck:21:(alarm-simultaneous) iteration 3, thread 2: woke up 0 ticks later
src/tests/threads/alarm-simultaneous.ck:22:(alarm-simultaneous) iteration 4, thread 0: woke up 10 ticks later
src/tests/threads/alarm-simultaneous.ck:23:(alarm-simultaneous) iteration 4, thread 1: woke up 0 ticks later
src/tests/threads/alarm-simultaneous.ck:24:(alarm-simultaneous) iteration 4, thread 2: woke up 0 ticks later
src/tests/threads/alarm-simultaneous.ck:25:(alarm-simultaneous) end
src/tests/threads/priority-donate-one.c:2:   higher-priority threads that block acquiring the lock, causing
src/tests/threads/mlfqs-nice-10.ck:1:# -*- perl -*-
src/tests/threads/alarm-negative.ck:1:# -*- perl -*-
src/tests/threads/alarm-negative.ck:6:(alarm-negative) begin
src/tests/threads/alarm-negative.ck:7:(alarm-negative) PASS
src/tests/threads/alarm-negative.ck:8:(alarm-negative) end
src/tests/threads/mlfqs-load-avg.ck:1:# -*- perl -*-
src/tests/threads/mlfqs-load-avg.ck:27:    my ($ready) = $t < 60 ? $t : $t < 120 ? 120 - $t : 0;
src/tests/threads/mlfqs-nice-2.ck:1:# -*- perl -*-
src/tests/threads/alarm-negative.c:1:/* Tests timer_sleep(-100).  Only requirement is that it not crash. */
src/tests/threads/alarm-negative.c:13:  timer_sleep (-100);
src/tests/threads/Make.tests:1:# -*- makefile -*-
src/tests/threads/Make.tests:4:tests/threads_TESTS = $(addprefix tests/threads/,alarm-single		\
src/tests/threads/Make.tests:5:alarm-multiple alarm-simultaneous alarm-priority alarm-zero		\
src/tests/threads/Make.tests:6:alarm-negative priority-change priority-donate-one			\
src/tests/threads/Make.tests:7:priority-donate-multiple priority-donate-multiple2			\
src/tests/threads/Make.tests:8:priority-donate-nest priority-donate-sema priority-donate-lower		\
src/tests/threads/Make.tests:9:priority-fifo priority-preempt priority-sema priority-condvar		\
src/tests/threads/Make.tests:10:priority-donate-chain                                                   \
src/tests/threads/Make.tests:11:mlfqs-load-1 mlfqs-load-60 mlfqs-load-avg mlfqs-recent-1 mlfqs-fair-2	\
src/tests/threads/Make.tests:12:mlfqs-fair-20 mlfqs-nice-2 mlfqs-nice-10 mlfqs-block)
src/tests/threads/Make.tests:16:tests/threads_SRC += tests/threads/alarm-wait.c
src/tests/threads/Make.tests:17:tests/threads_SRC += tests/threads/alarm-simultaneous.c
src/tests/threads/Make.tests:18:tests/threads_SRC += tests/threads/alarm-priority.c
src/tests/threads/Make.tests:19:tests/threads_SRC += tests/threads/alarm-zero.c
src/tests/threads/Make.tests:20:tests/threads_SRC += tests/threads/alarm-negative.c
src/tests/threads/Make.tests:21:tests/threads_SRC += tests/threads/priority-change.c
src/tests/threads/Make.tests:22:tests/threads_SRC += tests/threads/priority-donate-one.c
src/tests/threads/Make.tests:23:tests/threads_SRC += tests/threads/priority-donate-multiple.c
src/tests/threads/Make.tests:24:tests/threads_SRC += tests/threads/priority-donate-multiple2.c
src/tests/threads/Make.tests:25:tests/threads_SRC += tests/threads/priority-donate-nest.c
src/tests/threads/Make.tests:26:tests/threads_SRC += tests/threads/priority-donate-sema.c
src/tests/threads/Make.tests:27:tests/threads_SRC += tests/threads/priority-donate-lower.c
src/tests/threads/Make.tests:28:tests/threads_SRC += tests/threads/priority-fifo.c
src/tests/threads/Make.tests:29:tests/threads_SRC += tests/threads/priority-preempt.c
src/tests/threads/Make.tests:30:tests/threads_SRC += tests/threads/priority-sema.c
src/tests/threads/Make.tests:31:tests/threads_SRC += tests/threads/priority-condvar.c
src/tests/threads/Make.tests:32:tests/threads_SRC += tests/threads/priority-donate-chain.c
src/tests/threads/Make.tests:33:tests/threads_SRC += tests/threads/mlfqs-load-1.c
src/tests/threads/Make.tests:34:tests/threads_SRC += tests/threads/mlfqs-load-60.c
src/tests/threads/Make.tests:35:tests/threads_SRC += tests/threads/mlfqs-load-avg.c
src/tests/threads/Make.tests:36:tests/threads_SRC += tests/threads/mlfqs-recent-1.c
src/tests/threads/Make.tests:37:tests/threads_SRC += tests/threads/mlfqs-fair.c
src/tests/threads/Make.tests:38:tests/threads_SRC += tests/threads/mlfqs-block.c
src/tests/threads/Make.tests:41:tests/threads/mlfqs-load-1.output		\
src/tests/threads/Make.tests:42:tests/threads/mlfqs-load-60.output		\
src/tests/threads/Make.tests:43:tests/threads/mlfqs-load-avg.output		\
src/tests/threads/Make.tests:44:tests/threads/mlfqs-recent-1.output		\
src/tests/threads/Make.tests:45:tests/threads/mlfqs-fair-2.output		\
src/tests/threads/Make.tests:46:tests/threads/mlfqs-fair-20.output		\
src/tests/threads/Make.tests:47:tests/threads/mlfqs-nice-2.output		\
src/tests/threads/Make.tests:48:tests/threads/mlfqs-nice-10.output		\
src/tests/threads/Make.tests:49:tests/threads/mlfqs-block.output
src/tests/threads/Make.tests:51:$(MLFQS_OUTPUTS): KERNELFLAGS += -mlfqs
src/tests/threads/priority-donate-sema.ck:1:# -*- perl -*-
src/tests/threads/priority-donate-sema.ck:6:(priority-donate-sema) begin
src/tests/threads/priority-donate-sema.ck:7:(priority-donate-sema) Thread L acquired lock.
src/tests/threads/priority-donate-sema.ck:8:(priority-donate-sema) Thread L downed semaphore.
src/tests/threads/priority-donate-sema.ck:9:(priority-donate-sema) Thread H acquired lock.
src/tests/threads/priority-donate-sema.ck:10:(priority-donate-sema) Thread H finished.
src/tests/threads/priority-donate-sema.ck:11:(priority-donate-sema) Thread M finished.
src/tests/threads/priority-donate-sema.ck:12:(priority-donate-sema) Thread L finished.
src/tests/threads/priority-donate-sema.ck:13:(priority-donate-sema) Main thread finished.
src/tests/threads/priority-donate-sema.ck:14:(priority-donate-sema) end
src/tests/threads/priority-change.ck:1:# -*- perl -*-
src/tests/threads/priority-change.ck:6:(priority-change) begin
src/tests/threads/priority-change.ck:7:(priority-change) Creating a high-priority thread 2.
src/tests/threads/priority-change.ck:8:(priority-change) Thread 2 now lowering priority.
src/tests/threads/priority-change.ck:9:(priority-change) Thread 2 should have just lowered its priority.
src/tests/threads/priority-change.ck:10:(priority-change) Thread 2 exiting.
src/tests/threads/priority-change.ck:11:(priority-change) Thread 2 should have just exited.
src/tests/threads/priority-change.ck:12:(priority-change) end
src/tests/threads/priority-donate-chain.c:6:   Subsequently, thread[i] attempts to acquire lock[i-1], which is held by
src/tests/threads/priority-donate-chain.c:7:   thread[i-1], except for lock[0], which is held by the main thread.
src/tests/threads/priority-donate-chain.c:8:   Because the lock is held, thread[i] donates its priority to thread[i-1],
src/tests/threads/priority-donate-chain.c:9:   which donates to thread[i-2], and so on until the main thread
src/tests/threads/priority-donate-chain.c:48:  struct lock locks[NESTING_DEPTH - 1];
src/tests/threads/priority-donate-chain.c:56:  for (i = 0; i < NESTING_DEPTH - 1; i++)
src/tests/threads/priority-donate-chain.c:69:      lock_pairs[i].first = i < NESTING_DEPTH - 1 ? locks + i: NULL;
src/tests/threads/priority-donate-chain.c:70:      lock_pairs[i].second = locks + i - 1;
src/tests/threads/priority-donate-chain.c:77:      thread_create (name, thread_priority - 1, interloper_thread_func, NULL);
src/tests/threads/priority-donate-chain.c:90:  if (locks->first)
src/tests/threads/priority-donate-chain.c:91:    lock_acquire (locks->first);
src/tests/threads/priority-donate-chain.c:93:  lock_acquire (locks->second);
src/tests/threads/priority-donate-chain.c:96:  lock_release (locks->second);
src/tests/threads/priority-donate-chain.c:98:        thread_name (), (NESTING_DEPTH - 1) * 3,
src/tests/threads/priority-donate-chain.c:101:  if (locks->first)
src/tests/threads/priority-donate-chain.c:102:    lock_release (locks->first);
src/tests/threads/priority-donate-multiple2.c:2:   higher-priority threads.  The first two of these threads block
src/tests/threads/priority-donate-multiple2.c:9:   order compared to priority-donate-multiple.c.
src/tests/threads/mlfqs-fair-2.ck:1:# -*- perl -*-
src/tests/threads/mlfqs-recent-1.ck:1:# -*- perl -*-
src/tests/threads/alarm-wait.c:2:   duration, M times.  Records the wake-up order and verifies
src/tests/threads/alarm-wait.c:87:      t->test = &test;
src/tests/threads/alarm-wait.c:88:      t->id = i;
src/tests/threads/alarm-wait.c:89:      t->duration = (i + 1) * 10;
src/tests/threads/alarm-wait.c:90:      t->iterations = 0;
src/tests/threads/alarm-wait.c:113:      new_prod = ++t->iterations * t->duration;
src/tests/threads/alarm-wait.c:116:           t->id, t->duration, t->iterations, new_prod);
src/tests/threads/alarm-wait.c:122:              t->id, product, new_prod);
src/tests/threads/alarm-wait.c:141:  struct sleep_test *test = t->test;
src/tests/threads/alarm-wait.c:144:  for (i = 1; i <= test->iterations; i++) 
src/tests/threads/alarm-wait.c:146:      int64_t sleep_until = test->start + i * t->duration;
src/tests/threads/alarm-wait.c:147:      timer_sleep (sleep_until - timer_ticks ());
src/tests/threads/alarm-wait.c:148:      lock_acquire (&test->output_lock);
src/tests/threads/alarm-wait.c:149:      *test->output_pos++ = t->id;
src/tests/threads/alarm-wait.c:150:      lock_release (&test->output_lock);
src/tests/cksum.pm:64:    for my $i (0...$n - 1) {
src/tests/cksum.pm:82:    sysread (FILE, $data, -s FILE) == -s FILE or die "$file: read: $!\n";
src/tests/filesys/seq-test.h:11:#endif /* tests/filesys/seq-test.h */
src/tests/filesys/base/sm-seq-random.c:1:/* Writes out a fairly large file sequentially, one random-sized
src/tests/filesys/base/sm-seq-random.c:6:#include "tests/filesys/base/seq-random.inc"
src/tests/filesys/base/lg-random.ck:1:# -*- perl -*-
src/tests/filesys/base/lg-random.ck:6:(lg-random) begin
src/tests/filesys/base/lg-random.ck:7:(lg-random) create "bazzle"
src/tests/filesys/base/lg-random.ck:8:(lg-random) open "bazzle"
src/tests/filesys/base/lg-random.ck:9:(lg-random) write "bazzle" in random order
src/tests/filesys/base/lg-random.ck:10:(lg-random) read "bazzle" in random order
src/tests/filesys/base/lg-random.ck:11:(lg-random) close "bazzle"
src/tests/filesys/base/lg-random.ck:12:(lg-random) end
src/tests/filesys/base/child-syn-wrt.c:1:/* Child process for syn-read test.
src/tests/filesys/base/child-syn-wrt.c:9:#include "tests/filesys/base/syn-write.h"
src/tests/filesys/base/lg-create.ck:1:# -*- perl -*-
src/tests/filesys/base/lg-create.ck:6:(lg-create) begin
src/tests/filesys/base/lg-create.ck:7:(lg-create) create "blargle"
src/tests/filesys/base/lg-create.ck:8:(lg-create) open "blargle" for verification
src/tests/filesys/base/lg-create.ck:9:(lg-create) verified contents of "blargle"
src/tests/filesys/base/lg-create.ck:10:(lg-create) close "blargle"
src/tests/filesys/base/lg-create.ck:11:(lg-create) end
src/tests/filesys/base/syn-write.h:9:#endif /* tests/filesys/base/syn-write.h */
src/tests/filesys/base/syn-write.ck:1:# -*- perl -*-
src/tests/filesys/base/syn-write.ck:6:(syn-write) begin
src/tests/filesys/base/syn-write.ck:7:(syn-write) create "stuff"
src/tests/filesys/base/syn-write.ck:8:(syn-write) exec child 1 of 10: "child-syn-wrt 0"
src/tests/filesys/base/syn-write.ck:9:(syn-write) exec child 2 of 10: "child-syn-wrt 1"
src/tests/filesys/base/syn-write.ck:10:(syn-write) exec child 3 of 10: "child-syn-wrt 2"
src/tests/filesys/base/syn-write.ck:11:(syn-write) exec child 4 of 10: "child-syn-wrt 3"
src/tests/filesys/base/syn-write.ck:12:(syn-write) exec child 5 of 10: "child-syn-wrt 4"
src/tests/filesys/base/syn-write.ck:13:(syn-write) exec child 6 of 10: "child-syn-wrt 5"
src/tests/filesys/base/syn-write.ck:14:(syn-write) exec child 7 of 10: "child-syn-wrt 6"
src/tests/filesys/base/syn-write.ck:15:(syn-write) exec child 8 of 10: "child-syn-wrt 7"
src/tests/filesys/base/syn-write.ck:16:(syn-write) exec child 9 of 10: "child-syn-wrt 8"
src/tests/filesys/base/syn-write.ck:17:(syn-write) exec child 10 of 10: "child-syn-wrt 9"
src/tests/filesys/base/syn-write.ck:18:(syn-write) wait for child 1 of 10 returned 0 (expected 0)
src/tests/filesys/base/syn-write.ck:19:(syn-write) wait for child 2 of 10 returned 1 (expected 1)
src/tests/filesys/base/syn-write.ck:20:(syn-write) wait for child 3 of 10 returned 2 (expected 2)
src/tests/filesys/base/syn-write.ck:21:(syn-write) wait for child 4 of 10 returned 3 (expected 3)
src/tests/filesys/base/syn-write.ck:22:(syn-write) wait for child 5 of 10 returned 4 (expected 4)
src/tests/filesys/base/syn-write.ck:23:(syn-write) wait for child 6 of 10 returned 5 (expected 5)
src/tests/filesys/base/syn-write.ck:24:(syn-write) wait for child 7 of 10 returned 6 (expected 6)
src/tests/filesys/base/syn-write.ck:25:(syn-write) wait for child 8 of 10 returned 7 (expected 7)
src/tests/filesys/base/syn-write.ck:26:(syn-write) wait for child 9 of 10 returned 8 (expected 8)
src/tests/filesys/base/syn-write.ck:27:(syn-write) wait for child 10 of 10 returned 9 (expected 9)
src/tests/filesys/base/syn-write.ck:28:(syn-write) open "stuff"
src/tests/filesys/base/syn-write.ck:29:(syn-write) read "stuff"
src/tests/filesys/base/syn-write.ck:30:(syn-write) end
src/tests/filesys/base/seq-block.inc:1:/* -*- c -*- */
src/tests/filesys/base/seq-block.inc:3:#include "tests/filesys/seq-test.h"
src/tests/filesys/base/seq-random.inc:1:/* -*- c -*- */
src/tests/filesys/base/seq-random.inc:4:#include "tests/filesys/seq-test.h"
src/tests/filesys/base/seq-random.inc:18:  random_init (-1);
src/tests/filesys/base/syn-remove.ck:1:# -*- perl -*-
src/tests/filesys/base/syn-remove.ck:6:(syn-remove) begin
src/tests/filesys/base/syn-remove.ck:7:(syn-remove) create "deleteme"
src/tests/filesys/base/syn-remove.ck:8:(syn-remove) open "deleteme"
src/tests/filesys/base/syn-remove.ck:9:(syn-remove) remove "deleteme"
src/tests/filesys/base/syn-remove.ck:10:(syn-remove) write "deleteme"
src/tests/filesys/base/syn-remove.ck:11:(syn-remove) seek "deleteme" to 0
src/tests/filesys/base/syn-remove.ck:12:(syn-remove) read "deleteme"
src/tests/filesys/base/syn-remove.ck:13:(syn-remove) close "deleteme"
src/tests/filesys/base/syn-remove.ck:14:(syn-remove) end
src/tests/filesys/base/full.inc:1:/* -*- c -*- */
src/tests/filesys/base/full.inc:3:#include "tests/filesys/seq-test.h"
src/tests/filesys/base/sm-seq-block.c:1:/* Writes out a fairly small file sequentially, one fixed-size
src/tests/filesys/base/sm-seq-block.c:7:#include "tests/filesys/base/seq-block.inc"
src/tests/filesys/base/sm-random.ck:1:# -*- perl -*-
src/tests/filesys/base/sm-random.ck:6:(sm-random) begin
src/tests/filesys/base/sm-random.ck:7:(sm-random) create "bazzle"
src/tests/filesys/base/sm-random.ck:8:(sm-random) open "bazzle"
src/tests/filesys/base/sm-random.ck:9:(sm-random) write "bazzle" in random order
src/tests/filesys/base/sm-random.ck:10:(sm-random) read "bazzle" in random order
src/tests/filesys/base/sm-random.ck:11:(sm-random) close "bazzle"
src/tests/filesys/base/sm-random.ck:12:(sm-random) end
src/tests/filesys/base/syn-read.c:10:#include "tests/filesys/base/syn-read.h"
src/tests/filesys/base/syn-read.c:29:  exec_children ("child-syn-read", children, CHILD_CNT);
src/tests/filesys/base/child-syn-read.c:1:/* Child process for syn-read test.
src/tests/filesys/base/child-syn-read.c:12:#include "tests/filesys/base/syn-read.h"
src/tests/filesys/base/child-syn-read.c:14:const char *test_name = "child-syn-read";
src/tests/filesys/base/lg-seq-random.ck:1:# -*- perl -*-
src/tests/filesys/base/lg-seq-random.ck:6:(lg-seq-random) begin
src/tests/filesys/base/lg-seq-random.ck:7:(lg-seq-random) create "nibble"
src/tests/filesys/base/lg-seq-random.ck:8:(lg-seq-random) open "nibble"
src/tests/filesys/base/lg-seq-random.ck:9:(lg-seq-random) writing "nibble"
src/tests/filesys/base/lg-seq-random.ck:10:(lg-seq-random) close "nibble"
src/tests/filesys/base/lg-seq-random.ck:11:(lg-seq-random) open "nibble" for verification
src/tests/filesys/base/lg-seq-random.ck:12:(lg-seq-random) verified contents of "nibble"
src/tests/filesys/base/lg-seq-random.ck:13:(lg-seq-random) close "nibble"
src/tests/filesys/base/lg-seq-random.ck:14:(lg-seq-random) end
src/tests/filesys/base/random.inc:1:/* -*- c -*- */
src/tests/filesys/base/sm-seq-block.ck:1:# -*- perl -*-
src/tests/filesys/base/sm-seq-block.ck:6:(sm-seq-block) begin
src/tests/filesys/base/sm-seq-block.ck:7:(sm-seq-block) create "noodle"
src/tests/filesys/base/sm-seq-block.ck:8:(sm-seq-block) open "noodle"
src/tests/filesys/base/sm-seq-block.ck:9:(sm-seq-block) writing "noodle"
src/tests/filesys/base/sm-seq-block.ck:10:(sm-seq-block) close "noodle"
src/tests/filesys/base/sm-seq-block.ck:11:(sm-seq-block) open "noodle" for verification
src/tests/filesys/base/sm-seq-block.ck:12:(sm-seq-block) verified contents of "noodle"
src/tests/filesys/base/sm-seq-block.ck:13:(sm-seq-block) close "noodle"
src/tests/filesys/base/sm-seq-block.ck:14:(sm-seq-block) end
src/tests/filesys/base/sm-full.ck:1:# -*- perl -*-
src/tests/filesys/base/sm-full.ck:6:(sm-full) begin
src/tests/filesys/base/sm-full.ck:7:(sm-full) create "quux"
src/tests/filesys/base/sm-full.ck:8:(sm-full) open "quux"
src/tests/filesys/base/sm-full.ck:9:(sm-full) writing "quux"
src/tests/filesys/base/sm-full.ck:10:(sm-full) close "quux"
src/tests/filesys/base/sm-full.ck:11:(sm-full) open "quux" for verification
src/tests/filesys/base/sm-full.ck:12:(sm-full) verified contents of "quux"
src/tests/filesys/base/sm-full.ck:13:(sm-full) close "quux"
src/tests/filesys/base/sm-full.ck:14:(sm-full) end
src/tests/filesys/base/sm-seq-random.ck:1:# -*- perl -*-
src/tests/filesys/base/sm-seq-random.ck:6:(sm-seq-random) begin
src/tests/filesys/base/sm-seq-random.ck:7:(sm-seq-random) create "nibble"
src/tests/filesys/base/sm-seq-random.ck:8:(sm-seq-random) open "nibble"
src/tests/filesys/base/sm-seq-random.ck:9:(sm-seq-random) writing "nibble"
src/tests/filesys/base/sm-seq-random.ck:10:(sm-seq-random) close "nibble"
src/tests/filesys/base/sm-seq-random.ck:11:(sm-seq-random) open "nibble" for verification
src/tests/filesys/base/sm-seq-random.ck:12:(sm-seq-random) verified contents of "nibble"
src/tests/filesys/base/sm-seq-random.ck:13:(sm-seq-random) close "nibble"
src/tests/filesys/base/sm-seq-random.ck:14:(sm-seq-random) end
src/tests/filesys/base/lg-full.ck:1:# -*- perl -*-
src/tests/filesys/base/lg-full.ck:6:(lg-full) begin
src/tests/filesys/base/lg-full.ck:7:(lg-full) create "quux"
src/tests/filesys/base/lg-full.ck:8:(lg-full) open "quux"
src/tests/filesys/base/lg-full.ck:9:(lg-full) writing "quux"
src/tests/filesys/base/lg-full.ck:10:(lg-full) close "quux"
src/tests/filesys/base/lg-full.ck:11:(lg-full) open "quux" for verification
src/tests/filesys/base/lg-full.ck:12:(lg-full) verified contents of "quux"
src/tests/filesys/base/lg-full.ck:13:(lg-full) close "quux"
src/tests/filesys/base/lg-full.ck:14:(lg-full) end
src/tests/filesys/base/lg-seq-random.c:1:/* Writes out a fairly large file sequentially, one random-sized
src/tests/filesys/base/lg-seq-random.c:6:#include "tests/filesys/base/seq-random.inc"
src/tests/filesys/base/lg-seq-block.c:1:/* Writes out a fairly large file sequentially, one fixed-size
src/tests/filesys/base/lg-seq-block.c:7:#include "tests/filesys/base/seq-block.inc"
src/tests/filesys/base/sm-create.ck:1:# -*- perl -*-
src/tests/filesys/base/sm-create.ck:6:(sm-create) begin
src/tests/filesys/base/sm-create.ck:7:(sm-create) create "blargle"
src/tests/filesys/base/sm-create.ck:8:(sm-create) open "blargle" for verification
src/tests/filesys/base/sm-create.ck:9:(sm-create) verified contents of "blargle"
src/tests/filesys/base/sm-create.ck:10:(sm-create) close "blargle"
src/tests/filesys/base/sm-create.ck:11:(sm-create) end
src/tests/filesys/base/syn-read.h:7:#endif /* tests/filesys/base/syn-read.h */
src/tests/filesys/base/Rubric:2:- Test basic support for small files.
src/tests/filesys/base/Rubric:3:1	sm-create
src/tests/filesys/base/Rubric:4:2	sm-full
src/tests/filesys/base/Rubric:5:2	sm-random
src/tests/filesys/base/Rubric:6:2	sm-seq-block
src/tests/filesys/base/Rubric:7:3	sm-seq-random
src/tests/filesys/base/Rubric:9:- Test basic support for large files.
src/tests/filesys/base/Rubric:10:1	lg-create
src/tests/filesys/base/Rubric:11:2	lg-full
src/tests/filesys/base/Rubric:12:2	lg-random
src/tests/filesys/base/Rubric:13:2	lg-seq-block
src/tests/filesys/base/Rubric:14:3	lg-seq-random
src/tests/filesys/base/Rubric:16:- Test synchronized multiprogram access to files.
src/tests/filesys/base/Rubric:17:4	syn-read
src/tests/filesys/base/Rubric:18:4	syn-write
src/tests/filesys/base/Rubric:19:2	syn-remove
src/tests/filesys/base/lg-seq-block.ck:1:# -*- perl -*-
src/tests/filesys/base/lg-seq-block.ck:6:(lg-seq-block) begin
src/tests/filesys/base/lg-seq-block.ck:7:(lg-seq-block) create "noodle"
src/tests/filesys/base/lg-seq-block.ck:8:(lg-seq-block) open "noodle"
src/tests/filesys/base/lg-seq-block.ck:9:(lg-seq-block) writing "noodle"
src/tests/filesys/base/lg-seq-block.ck:10:(lg-seq-block) close "noodle"
src/tests/filesys/base/lg-seq-block.ck:11:(lg-seq-block) open "noodle" for verification
src/tests/filesys/base/lg-seq-block.ck:12:(lg-seq-block) verified contents of "noodle"
src/tests/filesys/base/lg-seq-block.ck:13:(lg-seq-block) close "noodle"
src/tests/filesys/base/lg-seq-block.ck:14:(lg-seq-block) end
src/tests/filesys/base/Make.tests:1:# -*- makefile -*-
src/tests/filesys/base/Make.tests:3:tests/filesys/base_TESTS = $(addprefix tests/filesys/base/,lg-create	\
src/tests/filesys/base/Make.tests:4:lg-full lg-random lg-seq-block lg-seq-random sm-create sm-full		\
src/tests/filesys/base/Make.tests:5:sm-random sm-seq-block sm-seq-random syn-read syn-remove syn-write)
src/tests/filesys/base/Make.tests:8:tests/filesys/base/,child-syn-read child-syn-wrt)
src/tests/filesys/base/Make.tests:11:	$(eval $(prog)_SRC += $(prog).c tests/lib.c tests/filesys/seq-test.c))
src/tests/filesys/base/Make.tests:15:tests/filesys/base/syn-read_PUTFILES = tests/filesys/base/child-syn-read
src/tests/filesys/base/Make.tests:16:tests/filesys/base/syn-write_PUTFILES = tests/filesys/base/child-syn-wrt
src/tests/filesys/base/Make.tests:18:tests/filesys/base/syn-read.output: TIMEOUT = 300
src/tests/filesys/base/syn-read.ck:1:# -*- perl -*-
src/tests/filesys/base/syn-read.ck:6:(syn-read) begin
src/tests/filesys/base/syn-read.ck:7:(syn-read) create "data"
src/tests/filesys/base/syn-read.ck:8:(syn-read) open "data"
src/tests/filesys/base/syn-read.ck:9:(syn-read) write "data"
src/tests/filesys/base/syn-read.ck:10:(syn-read) close "data"
src/tests/filesys/base/syn-read.ck:11:(syn-read) exec child 1 of 10: "child-syn-read 0"
src/tests/filesys/base/syn-read.ck:12:(syn-read) exec child 2 of 10: "child-syn-read 1"
src/tests/filesys/base/syn-read.ck:13:(syn-read) exec child 3 of 10: "child-syn-read 2"
src/tests/filesys/base/syn-read.ck:14:(syn-read) exec child 4 of 10: "child-syn-read 3"
src/tests/filesys/base/syn-read.ck:15:(syn-read) exec child 5 of 10: "child-syn-read 4"
src/tests/filesys/base/syn-read.ck:16:(syn-read) exec child 6 of 10: "child-syn-read 5"
src/tests/filesys/base/syn-read.ck:17:(syn-read) exec child 7 of 10: "child-syn-read 6"
src/tests/filesys/base/syn-read.ck:18:(syn-read) exec child 8 of 10: "child-syn-read 7"
src/tests/filesys/base/syn-read.ck:19:(syn-read) exec child 9 of 10: "child-syn-read 8"
src/tests/filesys/base/syn-read.ck:20:(syn-read) exec child 10 of 10: "child-syn-read 9"
src/tests/filesys/base/syn-read.ck:21:(syn-read) wait for child 1 of 10 returned 0 (expected 0)
src/tests/filesys/base/syn-read.ck:22:(syn-read) wait for child 2 of 10 returned 1 (expected 1)
src/tests/filesys/base/syn-read.ck:23:(syn-read) wait for child 3 of 10 returned 2 (expected 2)
src/tests/filesys/base/syn-read.ck:24:(syn-read) wait for child 4 of 10 returned 3 (expected 3)
src/tests/filesys/base/syn-read.ck:25:(syn-read) wait for child 5 of 10 returned 4 (expected 4)
src/tests/filesys/base/syn-read.ck:26:(syn-read) wait for child 6 of 10 returned 5 (expected 5)
src/tests/filesys/base/syn-read.ck:27:(syn-read) wait for child 7 of 10 returned 6 (expected 6)
src/tests/filesys/base/syn-read.ck:28:(syn-read) wait for child 8 of 10 returned 7 (expected 7)
src/tests/filesys/base/syn-read.ck:29:(syn-read) wait for child 9 of 10 returned 8 (expected 8)
src/tests/filesys/base/syn-read.ck:30:(syn-read) wait for child 10 of 10 returned 9 (expected 9)
src/tests/filesys/base/syn-read.ck:31:(syn-read) end
src/tests/filesys/base/syn-write.c:9:#include "tests/filesys/base/syn-write.h"
src/tests/filesys/base/syn-write.c:24:  exec_children ("child-syn-wrt", children, CHILD_CNT);
src/tests/filesys/extended/grow-tell.ck:1:# -*- perl -*-
src/tests/filesys/extended/grow-tell.ck:7:(grow-tell) begin
src/tests/filesys/extended/grow-tell.ck:8:(grow-tell) create "foobar"
src/tests/filesys/extended/grow-tell.ck:9:(grow-tell) open "foobar"
src/tests/filesys/extended/grow-tell.ck:10:(grow-tell) writing "foobar"
src/tests/filesys/extended/grow-tell.ck:11:(grow-tell) close "foobar"
src/tests/filesys/extended/grow-tell.ck:12:(grow-tell) open "foobar" for verification
src/tests/filesys/extended/grow-tell.ck:13:(grow-tell) verified contents of "foobar"
src/tests/filesys/extended/grow-tell.ck:14:(grow-tell) close "foobar"
src/tests/filesys/extended/grow-tell.ck:15:(grow-tell) end
src/tests/filesys/extended/dir-over-file-persistence.ck:1:# -*- perl -*-
src/tests/filesys/extended/grow-root-sm.c:4:#include "tests/filesys/extended/grow-dir.inc"
src/tests/filesys/extended/grow-create-persistence.ck:1:# -*- perl -*-
src/tests/filesys/extended/grow-file-size.ck:1:# -*- perl -*-
src/tests/filesys/extended/grow-file-size.ck:7:(grow-file-size) begin
src/tests/filesys/extended/grow-file-size.ck:8:(grow-file-size) create "testfile"
src/tests/filesys/extended/grow-file-size.ck:9:(grow-file-size) open "testfile"
src/tests/filesys/extended/grow-file-size.ck:10:(grow-file-size) writing "testfile"
src/tests/filesys/extended/grow-file-size.ck:11:(grow-file-size) close "testfile"
src/tests/filesys/extended/grow-file-size.ck:12:(grow-file-size) open "testfile" for verification
src/tests/filesys/extended/grow-file-size.ck:13:(grow-file-size) verified contents of "testfile"
src/tests/filesys/extended/grow-file-size.ck:14:(grow-file-size) close "testfile"
src/tests/filesys/extended/grow-file-size.ck:15:(grow-file-size) end
src/tests/filesys/extended/grow-sparse.ck:1:# -*- perl -*-
src/tests/filesys/extended/grow-sparse.ck:6:(grow-sparse) begin
src/tests/filesys/extended/grow-sparse.ck:7:(grow-sparse) create "testfile"
src/tests/filesys/extended/grow-sparse.ck:8:(grow-sparse) open "testfile"
src/tests/filesys/extended/grow-sparse.ck:9:(grow-sparse) seek "testfile"
src/tests/filesys/extended/grow-sparse.ck:10:(grow-sparse) write "testfile"
src/tests/filesys/extended/grow-sparse.ck:11:(grow-sparse) close "testfile"
src/tests/filesys/extended/grow-sparse.ck:12:(grow-sparse) open "testfile" for verification
src/tests/filesys/extended/grow-sparse.ck:13:(grow-sparse) verified contents of "testfile"
src/tests/filesys/extended/grow-sparse.ck:14:(grow-sparse) close "testfile"
src/tests/filesys/extended/grow-sparse.ck:15:(grow-sparse) end
src/tests/filesys/extended/grow-create.ck:1:# -*- perl -*-
src/tests/filesys/extended/grow-create.ck:6:(grow-create) begin
src/tests/filesys/extended/grow-create.ck:7:(grow-create) create "blargle"
src/tests/filesys/extended/grow-create.ck:8:(grow-create) open "blargle" for verification
src/tests/filesys/extended/grow-create.ck:9:(grow-create) verified contents of "blargle"
src/tests/filesys/extended/grow-create.ck:10:(grow-create) close "blargle"
src/tests/filesys/extended/grow-create.ck:11:(grow-create) end
src/tests/filesys/extended/tar.c:19:  return (make_tar_archive (argv[1], argv + 2, argc - 2)
src/tests/filesys/extended/tar.c:148:      memset (buf + bytes_read, 0, 512 - bytes_read);
src/tests/filesys/extended/tar.c:152:      file_size -= chunk_size;
src/tests/filesys/extended/tar.c:220:  snprintf (header + 136, 12, "%011o", 1136102400); /* mtime (2006-01-01) */
src/tests/filesys/extended/syn-rw.ck:1:# -*- perl -*-
src/tests/filesys/extended/syn-rw.ck:7:(syn-rw) begin
src/tests/filesys/extended/syn-rw.ck:8:(syn-rw) create "logfile"
src/tests/filesys/extended/syn-rw.ck:9:(syn-rw) open "logfile"
src/tests/filesys/extended/syn-rw.ck:10:(syn-rw) exec child 1 of 4: "child-syn-rw 0"
src/tests/filesys/extended/syn-rw.ck:11:(syn-rw) exec child 2 of 4: "child-syn-rw 1"
src/tests/filesys/extended/syn-rw.ck:12:(syn-rw) exec child 3 of 4: "child-syn-rw 2"
src/tests/filesys/extended/syn-rw.ck:13:(syn-rw) exec child 4 of 4: "child-syn-rw 3"
src/tests/filesys/extended/syn-rw.ck:14:(syn-rw) wait for child 1 of 4 returned 0 (expected 0)
src/tests/filesys/extended/syn-rw.ck:15:(syn-rw) wait for child 2 of 4 returned 1 (expected 1)
src/tests/filesys/extended/syn-rw.ck:16:(syn-rw) wait for child 3 of 4 returned 2 (expected 2)
src/tests/filesys/extended/syn-rw.ck:17:(syn-rw) wait for child 4 of 4 returned 3 (expected 3)
src/tests/filesys/extended/syn-rw.ck:18:(syn-rw) end
src/tests/filesys/extended/dir-rm-tree.ck:1:# -*- perl -*-
src/tests/filesys/extended/dir-rm-tree.ck:6:(dir-rm-tree) begin
src/tests/filesys/extended/dir-rm-tree.ck:7:(dir-rm-tree) creating /0/0/0/0 through /3/2/2/3...
src/tests/filesys/extended/dir-rm-tree.ck:8:(dir-rm-tree) open "/0/2/0/3"
src/tests/filesys/extended/dir-rm-tree.ck:9:(dir-rm-tree) close "/0/2/0/3"
src/tests/filesys/extended/dir-rm-tree.ck:10:(dir-rm-tree) removing /0/0/0/0 through /3/2/2/3...
src/tests/filesys/extended/dir-rm-tree.ck:11:(dir-rm-tree) open "/3/0/2/0" (must return -1)
src/tests/filesys/extended/dir-rm-tree.ck:12:(dir-rm-tree) end
src/tests/filesys/extended/Rubric.functionality:2:- Test directory support.
src/tests/filesys/extended/Rubric.functionality:3:1	dir-mkdir
src/tests/filesys/extended/Rubric.functionality:4:3	dir-mk-tree
src/tests/filesys/extended/Rubric.functionality:6:1	dir-rmdir
src/tests/filesys/extended/Rubric.functionality:7:3	dir-rm-tree
src/tests/filesys/extended/Rubric.functionality:9:5	dir-vine
src/tests/filesys/extended/Rubric.functionality:11:- Test file growth.
src/tests/filesys/extended/Rubric.functionality:12:1	grow-create
src/tests/filesys/extended/Rubric.functionality:13:1	grow-seq-sm
src/tests/filesys/extended/Rubric.functionality:14:3	grow-seq-lg
src/tests/filesys/extended/Rubric.functionality:15:3	grow-sparse
src/tests/filesys/extended/Rubric.functionality:16:3	grow-two-files
src/tests/filesys/extended/Rubric.functionality:17:1	grow-tell
src/tests/filesys/extended/Rubric.functionality:18:1	grow-file-size
src/tests/filesys/extended/Rubric.functionality:20:- Test directory growth.
src/tests/filesys/extended/Rubric.functionality:21:1	grow-dir-lg
src/tests/filesys/extended/Rubric.functionality:22:1	grow-root-sm
src/tests/filesys/extended/Rubric.functionality:23:1	grow-root-lg
src/tests/filesys/extended/Rubric.functionality:25:- Test writing from multiple processes.
src/tests/filesys/extended/Rubric.functionality:26:5	syn-rw
src/tests/filesys/extended/dir-rm-root.ck:1:# -*- perl -*-
src/tests/filesys/extended/dir-rm-root.ck:6:(dir-rm-root) begin
src/tests/filesys/extended/dir-rm-root.ck:7:(dir-rm-root) remove "/" (must fail)
src/tests/filesys/extended/dir-rm-root.ck:8:(dir-rm-root) create "/a"
src/tests/filesys/extended/dir-rm-root.ck:9:(dir-rm-root) end
src/tests/filesys/extended/grow-tell.c:5:#include "tests/filesys/seq-test.h"
src/tests/filesys/extended/syn-rw-persistence.ck:1:# -*- perl -*-
src/tests/filesys/extended/syn-rw-persistence.ck:6:check_archive ({"child-syn-rw" => "tests/filesys/extended/child-syn-rw",
src/tests/filesys/extended/dir-rm-cwd-persistence.ck:1:# -*- perl -*-
src/tests/filesys/extended/dir-rm-cwd-persistence.ck:5:my ($cwd_removable) = read_text_file ("tests/filesys/extended/can-rmdir-cwd");
src/tests/filesys/extended/grow-tell-persistence.ck:1:# -*- perl -*-
src/tests/filesys/extended/dir-under-file-persistence.ck:1:# -*- perl -*-
src/tests/filesys/extended/dir-open.c:19:  CHECK (retval == -1,
src/tests/filesys/extended/dir-open.c:20:         "write \"xyzzy\" (must return -1, actually %d)", retval);
src/tests/filesys/extended/dir-empty-name.ck:1:# -*- perl -*-
src/tests/filesys/extended/dir-empty-name.ck:6:(dir-empty-name) begin
src/tests/filesys/extended/dir-empty-name.ck:7:(dir-empty-name) mkdir "" (must return false)
src/tests/filesys/extended/dir-empty-name.ck:8:(dir-empty-name) end
src/tests/filesys/extended/dir-empty-name-persistence.ck:1:# -*- perl -*-
src/tests/filesys/extended/dir-rm-parent.c:2:   fail, because that directory is non-empty. */
src/tests/filesys/extended/grow-sparse.c:20:  seek (fd, sizeof buf - 1);
src/tests/filesys/extended/grow-dir-lg.c:6:#include "tests/filesys/extended/grow-dir.inc"
src/tests/filesys/extended/dir-vine-persistence.ck:1:# -*- perl -*-
src/tests/filesys/extended/dir-vine-persistence.ck:7:# 40642 dir-vine
src/tests/filesys/extended/dir-vine-persistence.ck:33:    $dir->{"file$i"} = ["contents $i\n"];
src/tests/filesys/extended/dir-vine-persistence.ck:34:    $dir = $dir->{"dir$i"} = {};
src/tests/filesys/extended/Rubric.robustness:2:1	dir-empty-name
src/tests/filesys/extended/Rubric.robustness:3:1	dir-open
src/tests/filesys/extended/Rubric.robustness:4:1	dir-over-file
src/tests/filesys/extended/Rubric.robustness:5:1	dir-under-file
src/tests/filesys/extended/Rubric.robustness:7:3	dir-rm-cwd
src/tests/filesys/extended/Rubric.robustness:8:2	dir-rm-parent
src/tests/filesys/extended/Rubric.robustness:9:1	dir-rm-root
src/tests/filesys/extended/grow-root-lg-persistence.ck:1:# -*- perl -*-
src/tests/filesys/extended/grow-root-lg-persistence.ck:7:$fs->{"file$_"} = [random_bytes (512)] foreach 0...49;
src/tests/filesys/extended/grow-dir-lg-persistence.ck:1:# -*- perl -*-
src/tests/filesys/extended/grow-dir-lg-persistence.ck:7:$fs->{'x'}{"file$_"} = [random_bytes (512)] foreach 0...49;
src/tests/filesys/extended/grow-seq-sm.ck:1:# -*- perl -*-
src/tests/filesys/extended/grow-seq-sm.ck:7:(grow-seq-sm) begin
src/tests/filesys/extended/grow-seq-sm.ck:8:(grow-seq-sm) create "testme"
src/tests/filesys/extended/grow-seq-sm.ck:9:(grow-seq-sm) open "testme"
src/tests/filesys/extended/grow-seq-sm.ck:10:(grow-seq-sm) writing "testme"
src/tests/filesys/extended/grow-seq-sm.ck:11:(grow-seq-sm) close "testme"
src/tests/filesys/extended/grow-seq-sm.ck:12:(grow-seq-sm) open "testme" for verification
src/tests/filesys/extended/grow-seq-sm.ck:13:(grow-seq-sm) verified contents of "testme"
src/tests/filesys/extended/grow-seq-sm.ck:14:(grow-seq-sm) close "testme"
src/tests/filesys/extended/grow-seq-sm.ck:15:(grow-seq-sm) end
src/tests/filesys/extended/mk-tree.h:6:#endif /* tests/filesys/extended/mk-tree.h */
src/tests/filesys/extended/dir-rm-root-persistence.ck:1:# -*- perl -*-
src/tests/filesys/extended/syn-rw.h:9:#endif /* tests/filesys/extended/syn-rw.h */
src/tests/filesys/extended/dir-rm-parent.ck:1:# -*- perl -*-
src/tests/filesys/extended/dir-rm-parent.ck:6:(dir-rm-parent) begin
src/tests/filesys/extended/dir-rm-parent.ck:7:(dir-rm-parent) mkdir "a"
src/tests/filesys/extended/dir-rm-parent.ck:8:(dir-rm-parent) chdir "a"
src/tests/filesys/extended/dir-rm-parent.ck:9:(dir-rm-parent) mkdir "b"
src/tests/filesys/extended/dir-rm-parent.ck:10:(dir-rm-parent) chdir "b"
src/tests/filesys/extended/dir-rm-parent.ck:11:(dir-rm-parent) remove "/a" (must fail)
src/tests/filesys/extended/dir-rm-parent.ck:12:(dir-rm-parent) end
src/tests/filesys/extended/dir-mk-tree-persistence.ck:1:# -*- perl -*-
src/tests/filesys/extended/dir-mk-tree-persistence.ck:10:		$tree->{$a}{$b}{$c}{$d} = [''];
src/tests/filesys/extended/dir-open.ck:1:# -*- perl -*-
src/tests/filesys/extended/dir-open.ck:6:(dir-open) begin
src/tests/filesys/extended/dir-open.ck:7:(dir-open) mkdir "xyzzy"
src/tests/filesys/extended/dir-open.ck:8:(dir-open) open "xyzzy"
src/tests/filesys/extended/dir-open.ck:9:(dir-open) write "xyzzy"
src/tests/filesys/extended/dir-open.ck:10:(dir-open) write "xyzzy" (must return -1, actually -1)
src/tests/filesys/extended/dir-open.ck:11:(dir-open) end
src/tests/filesys/extended/dir-open.ck:12:dir-open: exit(0)
src/tests/filesys/extended/dir-open.ck:14:(dir-open) begin
src/tests/filesys/extended/dir-open.ck:15:(dir-open) mkdir "xyzzy"
src/tests/filesys/extended/dir-open.ck:16:(dir-open) open "xyzzy"
src/tests/filesys/extended/dir-open.ck:17:(dir-open) write "xyzzy"
src/tests/filesys/extended/dir-open.ck:18:dir-open: exit(-1)
src/tests/filesys/extended/grow-seq.inc:1:/* -*- c -*- */
src/tests/filesys/extended/grow-seq.inc:3:#include "tests/filesys/seq-test.h"
src/tests/filesys/extended/dir-vine.c:74:  while (i-- > 10) 
src/tests/filesys/extended/dir-open-persistence.ck:1:# -*- perl -*-
src/tests/filesys/extended/dir-mk-tree.c:4:#include "tests/filesys/extended/mk-tree.h"
src/tests/filesys/extended/grow-seq-lg.ck:1:# -*- perl -*-
src/tests/filesys/extended/grow-seq-lg.ck:7:(grow-seq-lg) begin
src/tests/filesys/extended/grow-seq-lg.ck:8:(grow-seq-lg) create "testme"
src/tests/filesys/extended/grow-seq-lg.ck:9:(grow-seq-lg) open "testme"
src/tests/filesys/extended/grow-seq-lg.ck:10:(grow-seq-lg) writing "testme"
src/tests/filesys/extended/grow-seq-lg.ck:11:(grow-seq-lg) close "testme"
src/tests/filesys/extended/grow-seq-lg.ck:12:(grow-seq-lg) open "testme" for verification
src/tests/filesys/extended/grow-seq-lg.ck:13:(grow-seq-lg) verified contents of "testme"
src/tests/filesys/extended/grow-seq-lg.ck:14:(grow-seq-lg) close "testme"
src/tests/filesys/extended/grow-seq-lg.ck:15:(grow-seq-lg) end
src/tests/filesys/extended/dir-rm-parent-persistence.ck:1:# -*- perl -*-
src/tests/filesys/extended/dir-mkdir-persistence.ck:1:# -*- perl -*-
src/tests/filesys/extended/grow-seq-lg-persistence.ck:1:# -*- perl -*-
src/tests/filesys/extended/grow-root-sm.ck:1:# -*- perl -*-
src/tests/filesys/extended/grow-root-sm.ck:7:(grow-root-sm) begin
src/tests/filesys/extended/grow-root-sm.ck:8:(grow-root-sm) creating and checking "file0"
src/tests/filesys/extended/grow-root-sm.ck:9:(grow-root-sm) creating and checking "file1"
src/tests/filesys/extended/grow-root-sm.ck:10:(grow-root-sm) creating and checking "file2"
src/tests/filesys/extended/grow-root-sm.ck:11:(grow-root-sm) creating and checking "file3"
src/tests/filesys/extended/grow-root-sm.ck:12:(grow-root-sm) creating and checking "file4"
src/tests/filesys/extended/grow-root-sm.ck:13:(grow-root-sm) creating and checking "file5"
src/tests/filesys/extended/grow-root-sm.ck:14:(grow-root-sm) creating and checking "file6"
src/tests/filesys/extended/grow-root-sm.ck:15:(grow-root-sm) creating and checking "file7"
src/tests/filesys/extended/grow-root-sm.ck:16:(grow-root-sm) creating and checking "file8"
src/tests/filesys/extended/grow-root-sm.ck:17:(grow-root-sm) creating and checking "file9"
src/tests/filesys/extended/grow-root-sm.ck:18:(grow-root-sm) creating and checking "file10"
src/tests/filesys/extended/grow-root-sm.ck:19:(grow-root-sm) creating and checking "file11"
src/tests/filesys/extended/grow-root-sm.ck:20:(grow-root-sm) creating and checking "file12"
src/tests/filesys/extended/grow-root-sm.ck:21:(grow-root-sm) creating and checking "file13"
src/tests/filesys/extended/grow-root-sm.ck:22:(grow-root-sm) creating and checking "file14"
src/tests/filesys/extended/grow-root-sm.ck:23:(grow-root-sm) creating and checking "file15"
src/tests/filesys/extended/grow-root-sm.ck:24:(grow-root-sm) creating and checking "file16"
src/tests/filesys/extended/grow-root-sm.ck:25:(grow-root-sm) creating and checking "file17"
src/tests/filesys/extended/grow-root-sm.ck:26:(grow-root-sm) creating and checking "file18"
src/tests/filesys/extended/grow-root-sm.ck:27:(grow-root-sm) creating and checking "file19"
src/tests/filesys/extended/grow-root-sm.ck:28:(grow-root-sm) end
src/tests/filesys/extended/dir-vine.ck:1:# -*- perl -*-
src/tests/filesys/extended/dir-vine.ck:6:(dir-vine) begin
src/tests/filesys/extended/dir-vine.ck:7:(dir-vine) creating many levels of files and directories...
src/tests/filesys/extended/dir-vine.ck:8:(dir-vine) removing all but top 10 levels of files and directories...
src/tests/filesys/extended/dir-vine.ck:9:(dir-vine) end
src/tests/filesys/extended/grow-two-files.ck:1:# -*- perl -*-
src/tests/filesys/extended/grow-two-files.ck:7:(grow-two-files) begin
src/tests/filesys/extended/grow-two-files.ck:8:(grow-two-files) create "a"
src/tests/filesys/extended/grow-two-files.ck:9:(grow-two-files) create "b"
src/tests/filesys/extended/grow-two-files.ck:10:(grow-two-files) open "a"
src/tests/filesys/extended/grow-two-files.ck:11:(grow-two-files) open "b"
src/tests/filesys/extended/grow-two-files.ck:12:(grow-two-files) write "a" and "b" alternately
src/tests/filesys/extended/grow-two-files.ck:13:(grow-two-files) close "a"
src/tests/filesys/extended/grow-two-files.ck:14:(grow-two-files) close "b"
src/tests/filesys/extended/grow-two-files.ck:15:(grow-two-files) open "a" for verification
src/tests/filesys/extended/grow-two-files.ck:16:(grow-two-files) verified contents of "a"
src/tests/filesys/extended/grow-two-files.ck:17:(grow-two-files) close "a"
src/tests/filesys/extended/grow-two-files.ck:18:(grow-two-files) open "b" for verification
src/tests/filesys/extended/grow-two-files.ck:19:(grow-two-files) verified contents of "b"
src/tests/filesys/extended/grow-two-files.ck:20:(grow-two-files) close "b"
src/tests/filesys/extended/grow-two-files.ck:21:(grow-two-files) end
src/tests/filesys/extended/dir-rm-cwd.c:44:      CHECK (open ("/a") == -1, "open \"/a\" (must fail)");
src/tests/filesys/extended/dir-rm-cwd.c:45:      CHECK (open (".") == -1, "open \".\" (must fail)");
src/tests/filesys/extended/dir-rm-cwd.c:46:      CHECK (open ("..") == -1, "open \"..\" (must fail)");
src/tests/filesys/extended/dir-rm-cwd.ck:1:# -*- perl -*-
src/tests/filesys/extended/dir-rm-cwd.ck:7:(dir-rm-cwd) begin
src/tests/filesys/extended/dir-rm-cwd.ck:8:(dir-rm-cwd) open "/"
src/tests/filesys/extended/dir-rm-cwd.ck:9:(dir-rm-cwd) mkdir "a"
src/tests/filesys/extended/dir-rm-cwd.ck:10:(dir-rm-cwd) open "/a"
src/tests/filesys/extended/dir-rm-cwd.ck:11:(dir-rm-cwd) verify "/a" is empty
src/tests/filesys/extended/dir-rm-cwd.ck:12:(dir-rm-cwd) "/" and "/a" must have different inumbers
src/tests/filesys/extended/dir-rm-cwd.ck:13:(dir-rm-cwd) chdir "a"
src/tests/filesys/extended/dir-rm-cwd.ck:14:(dir-rm-cwd) try to remove "/a"
src/tests/filesys/extended/dir-rm-cwd.ck:15:(dir-rm-cwd) remove failed
src/tests/filesys/extended/dir-rm-cwd.ck:16:(dir-rm-cwd) try to remove "../a" (must fail)
src/tests/filesys/extended/dir-rm-cwd.ck:17:(dir-rm-cwd) try to remove ".././a" (must fail)
src/tests/filesys/extended/dir-rm-cwd.ck:18:(dir-rm-cwd) try to remove "/./a" (must fail)
src/tests/filesys/extended/dir-rm-cwd.ck:19:(dir-rm-cwd) open "/a"
src/tests/filesys/extended/dir-rm-cwd.ck:20:(dir-rm-cwd) open "."
src/tests/filesys/extended/dir-rm-cwd.ck:21:(dir-rm-cwd) "/a" and "." must have same inumber
src/tests/filesys/extended/dir-rm-cwd.ck:22:(dir-rm-cwd) "/" and "/a" must have different inumbers
src/tests/filesys/extended/dir-rm-cwd.ck:23:(dir-rm-cwd) chdir "/a"
src/tests/filesys/extended/dir-rm-cwd.ck:24:(dir-rm-cwd) open "."
src/tests/filesys/extended/dir-rm-cwd.ck:25:(dir-rm-cwd) "." must have same inumber as before
src/tests/filesys/extended/dir-rm-cwd.ck:26:(dir-rm-cwd) chdir "/"
src/tests/filesys/extended/dir-rm-cwd.ck:27:(dir-rm-cwd) try to remove "a" (must fail: still open)
src/tests/filesys/extended/dir-rm-cwd.ck:28:(dir-rm-cwd) verify "/a" is empty
src/tests/filesys/extended/dir-rm-cwd.ck:29:(dir-rm-cwd) end
src/tests/filesys/extended/dir-rm-cwd.ck:31:(dir-rm-cwd) begin
src/tests/filesys/extended/dir-rm-cwd.ck:32:(dir-rm-cwd) open "/"
src/tests/filesys/extended/dir-rm-cwd.ck:33:(dir-rm-cwd) mkdir "a"
src/tests/filesys/extended/dir-rm-cwd.ck:34:(dir-rm-cwd) open "/a"
src/tests/filesys/extended/dir-rm-cwd.ck:35:(dir-rm-cwd) verify "/a" is empty
src/tests/filesys/extended/dir-rm-cwd.ck:36:(dir-rm-cwd) "/" and "/a" must have different inumbers
src/tests/filesys/extended/dir-rm-cwd.ck:37:(dir-rm-cwd) chdir "a"
src/tests/filesys/extended/dir-rm-cwd.ck:38:(dir-rm-cwd) try to remove "/a"
src/tests/filesys/extended/dir-rm-cwd.ck:39:(dir-rm-cwd) remove successful
src/tests/filesys/extended/dir-rm-cwd.ck:40:(dir-rm-cwd) open "/a" (must fail)
src/tests/filesys/extended/dir-rm-cwd.ck:41:(dir-rm-cwd) open "." (must fail)
src/tests/filesys/extended/dir-rm-cwd.ck:42:(dir-rm-cwd) open ".." (must fail)
src/tests/filesys/extended/dir-rm-cwd.ck:43:(dir-rm-cwd) create "x" (must fail)
src/tests/filesys/extended/dir-rm-cwd.ck:44:(dir-rm-cwd) verify "/a" is empty
src/tests/filesys/extended/dir-rm-cwd.ck:45:(dir-rm-cwd) end
src/tests/filesys/extended/dir-rm-cwd.ck:47:open (CAN_RMDIR_CWD, ">tests/filesys/extended/can-rmdir-cwd")
src/tests/filesys/extended/dir-rm-cwd.ck:48:  or die "tests/filesys/extended/can-rmdir-cwd: create: $!\n";
src/tests/filesys/extended/dir-mkdir.ck:1:# -*- perl -*-
src/tests/filesys/extended/dir-mkdir.ck:6:(dir-mkdir) begin
src/tests/filesys/extended/dir-mkdir.ck:7:(dir-mkdir) mkdir "a"
src/tests/filesys/extended/dir-mkdir.ck:8:(dir-mkdir) create "a/b"
src/tests/filesys/extended/dir-mkdir.ck:9:(dir-mkdir) chdir "a"
src/tests/filesys/extended/dir-mkdir.ck:10:(dir-mkdir) open "b"
src/tests/filesys/extended/dir-mkdir.ck:11:(dir-mkdir) end
src/tests/filesys/extended/grow-root-lg.ck:1:# -*- perl -*-
src/tests/filesys/extended/grow-root-lg.ck:7:(grow-root-lg) begin
src/tests/filesys/extended/grow-root-lg.ck:8:(grow-root-lg) creating and checking "file0"
src/tests/filesys/extended/grow-root-lg.ck:9:(grow-root-lg) creating and checking "file1"
src/tests/filesys/extended/grow-root-lg.ck:10:(grow-root-lg) creating and checking "file2"
src/tests/filesys/extended/grow-root-lg.ck:11:(grow-root-lg) creating and checking "file3"
src/tests/filesys/extended/grow-root-lg.ck:12:(grow-root-lg) creating and checking "file4"
src/tests/filesys/extended/grow-root-lg.ck:13:(grow-root-lg) creating and checking "file5"
src/tests/filesys/extended/grow-root-lg.ck:14:(grow-root-lg) creating and checking "file6"
src/tests/filesys/extended/grow-root-lg.ck:15:(grow-root-lg) creating and checking "file7"
src/tests/filesys/extended/grow-root-lg.ck:16:(grow-root-lg) creating and checking "file8"
src/tests/filesys/extended/grow-root-lg.ck:17:(grow-root-lg) creating and checking "file9"
src/tests/filesys/extended/grow-root-lg.ck:18:(grow-root-lg) creating and checking "file10"
src/tests/filesys/extended/grow-root-lg.ck:19:(grow-root-lg) creating and checking "file11"
src/tests/filesys/extended/grow-root-lg.ck:20:(grow-root-lg) creating and checking "file12"
src/tests/filesys/extended/grow-root-lg.ck:21:(grow-root-lg) creating and checking "file13"
src/tests/filesys/extended/grow-root-lg.ck:22:(grow-root-lg) creating and checking "file14"
src/tests/filesys/extended/grow-root-lg.ck:23:(grow-root-lg) creating and checking "file15"
src/tests/filesys/extended/grow-root-lg.ck:24:(grow-root-lg) creating and checking "file16"
src/tests/filesys/extended/grow-root-lg.ck:25:(grow-root-lg) creating and checking "file17"
src/tests/filesys/extended/grow-root-lg.ck:26:(grow-root-lg) creating and checking "file18"
src/tests/filesys/extended/grow-root-lg.ck:27:(grow-root-lg) creating and checking "file19"
src/tests/filesys/extended/grow-root-lg.ck:28:(grow-root-lg) creating and checking "file20"
src/tests/filesys/extended/grow-root-lg.ck:29:(grow-root-lg) creating and checking "file21"
src/tests/filesys/extended/grow-root-lg.ck:30:(grow-root-lg) creating and checking "file22"
src/tests/filesys/extended/grow-root-lg.ck:31:(grow-root-lg) creating and checking "file23"
src/tests/filesys/extended/grow-root-lg.ck:32:(grow-root-lg) creating and checking "file24"
src/tests/filesys/extended/grow-root-lg.ck:33:(grow-root-lg) creating and checking "file25"
src/tests/filesys/extended/grow-root-lg.ck:34:(grow-root-lg) creating and checking "file26"
src/tests/filesys/extended/grow-root-lg.ck:35:(grow-root-lg) creating and checking "file27"
src/tests/filesys/extended/grow-root-lg.ck:36:(grow-root-lg) creating and checking "file28"
src/tests/filesys/extended/grow-root-lg.ck:37:(grow-root-lg) creating and checking "file29"
src/tests/filesys/extended/grow-root-lg.ck:38:(grow-root-lg) creating and checking "file30"
src/tests/filesys/extended/grow-root-lg.ck:39:(grow-root-lg) creating and checking "file31"
src/tests/filesys/extended/grow-root-lg.ck:40:(grow-root-lg) creating and checking "file32"
src/tests/filesys/extended/grow-root-lg.ck:41:(grow-root-lg) creating and checking "file33"
src/tests/filesys/extended/grow-root-lg.ck:42:(grow-root-lg) creating and checking "file34"
src/tests/filesys/extended/grow-root-lg.ck:43:(grow-root-lg) creating and checking "file35"
src/tests/filesys/extended/grow-root-lg.ck:44:(grow-root-lg) creating and checking "file36"
src/tests/filesys/extended/grow-root-lg.ck:45:(grow-root-lg) creating and checking "file37"
src/tests/filesys/extended/grow-root-lg.ck:46:(grow-root-lg) creating and checking "file38"
src/tests/filesys/extended/grow-root-lg.ck:47:(grow-root-lg) creating and checking "file39"
src/tests/filesys/extended/grow-root-lg.ck:48:(grow-root-lg) creating and checking "file40"
src/tests/filesys/extended/grow-root-lg.ck:49:(grow-root-lg) creating and checking "file41"
src/tests/filesys/extended/grow-root-lg.ck:50:(grow-root-lg) creating and checking "file42"
src/tests/filesys/extended/grow-root-lg.ck:51:(grow-root-lg) creating and checking "file43"
src/tests/filesys/extended/grow-root-lg.ck:52:(grow-root-lg) creating and checking "file44"
src/tests/filesys/extended/grow-root-lg.ck:53:(grow-root-lg) creating and checking "file45"
src/tests/filesys/extended/grow-root-lg.ck:54:(grow-root-lg) creating and checking "file46"
src/tests/filesys/extended/grow-root-lg.ck:55:(grow-root-lg) creating and checking "file47"
src/tests/filesys/extended/grow-root-lg.ck:56:(grow-root-lg) creating and checking "file48"
src/tests/filesys/extended/grow-root-lg.ck:57:(grow-root-lg) creating and checking "file49"
src/tests/filesys/extended/grow-root-lg.ck:58:(grow-root-lg) end
src/tests/filesys/extended/dir-rmdir.ck:1:# -*- perl -*-
src/tests/filesys/extended/dir-rmdir.ck:6:(dir-rmdir) begin
src/tests/filesys/extended/dir-rmdir.ck:7:(dir-rmdir) mkdir "a"
src/tests/filesys/extended/dir-rmdir.ck:8:(dir-rmdir) rmdir "a"
src/tests/filesys/extended/dir-rmdir.ck:9:(dir-rmdir) chdir "a" (must return false)
src/tests/filesys/extended/dir-rmdir.ck:10:(dir-rmdir) end
src/tests/filesys/extended/dir-under-file.ck:1:# -*- perl -*-
src/tests/filesys/extended/dir-under-file.ck:6:(dir-under-file) begin
src/tests/filesys/extended/dir-under-file.ck:7:(dir-under-file) create "abc"
src/tests/filesys/extended/dir-under-file.ck:8:(dir-under-file) mkdir "abc" (must return false)
src/tests/filesys/extended/dir-under-file.ck:9:(dir-under-file) end
src/tests/filesys/extended/grow-seq-sm-persistence.ck:1:# -*- perl -*-
src/tests/filesys/extended/grow-dir.inc:1:/* -*- c -*- */
src/tests/filesys/extended/grow-dir.inc:5:#include "tests/filesys/seq-test.h"
src/tests/filesys/extended/grow-file-size.c:6:#include "tests/filesys/seq-test.h"
src/tests/filesys/extended/mk-tree.c:5:#include "tests/filesys/extended/mk-tree.h"
src/tests/filesys/extended/mk-tree.c:19:       at - 1, bt - 1, ct - 1, dt - 1);
src/tests/filesys/extended/mk-tree.c:37:  snprintf (try, sizeof try, "/%d/%d/%d/%d", 0, bt - 1, 0, dt - 1);
src/tests/filesys/extended/syn-rw.c:6:#include "tests/filesys/extended/syn-rw.h"
src/tests/filesys/extended/syn-rw.c:24:  exec_children ("child-syn-rw", children, CHILD_CNT);
src/tests/filesys/extended/Rubric.persistence:2:1	dir-empty-name-persistence
src/tests/filesys/extended/Rubric.persistence:3:1	dir-mk-tree-persistence
src/tests/filesys/extended/Rubric.persistence:4:1	dir-mkdir-persistence
src/tests/filesys/extended/Rubric.persistence:5:1	dir-open-persistence
src/tests/filesys/extended/Rubric.persistence:6:1	dir-over-file-persistence
src/tests/filesys/extended/Rubric.persistence:7:1	dir-rm-cwd-persistence
src/tests/filesys/extended/Rubric.persistence:8:1	dir-rm-parent-persistence
src/tests/filesys/extended/Rubric.persistence:9:1	dir-rm-root-persistence
src/tests/filesys/extended/Rubric.persistence:10:1	dir-rm-tree-persistence
src/tests/filesys/extended/Rubric.persistence:11:1	dir-rmdir-persistence
src/tests/filesys/extended/Rubric.persistence:12:1	dir-under-file-persistence
src/tests/filesys/extended/Rubric.persistence:13:1	dir-vine-persistence
src/tests/filesys/extended/Rubric.persistence:14:1	grow-create-persistence
src/tests/filesys/extended/Rubric.persistence:15:1	grow-dir-lg-persistence
src/tests/filesys/extended/Rubric.persistence:16:1	grow-file-size-persistence
src/tests/filesys/extended/Rubric.persistence:17:1	grow-root-lg-persistence
src/tests/filesys/extended/Rubric.persistence:18:1	grow-root-sm-persistence
src/tests/filesys/extended/Rubric.persistence:19:1	grow-seq-lg-persistence
src/tests/filesys/extended/Rubric.persistence:20:1	grow-seq-sm-persistence
src/tests/filesys/extended/Rubric.persistence:21:1	grow-sparse-persistence
src/tests/filesys/extended/Rubric.persistence:22:1	grow-tell-persistence
src/tests/filesys/extended/Rubric.persistence:23:1	grow-two-files-persistence
src/tests/filesys/extended/Rubric.persistence:24:1	syn-rw-persistence
src/tests/filesys/extended/grow-root-sm-persistence.ck:1:# -*- perl -*-
src/tests/filesys/extended/grow-root-sm-persistence.ck:7:$fs->{"file$_"} = [random_bytes (512)] foreach 0...19;
src/tests/filesys/extended/grow-sparse-persistence.ck:1:# -*- perl -*-
src/tests/filesys/extended/dir-rmdir-persistence.ck:1:# -*- perl -*-
src/tests/filesys/extended/grow-two-files.c:20:      if (block_size > FILE_SIZE - *ofs)
src/tests/filesys/extended/grow-two-files.c:21:        block_size = FILE_SIZE - *ofs;
src/tests/filesys/extended/grow-dir-lg.ck:1:# -*- perl -*-
src/tests/filesys/extended/grow-dir-lg.ck:7:(grow-dir-lg) begin
src/tests/filesys/extended/grow-dir-lg.ck:8:(grow-dir-lg) mkdir /x
src/tests/filesys/extended/grow-dir-lg.ck:9:(grow-dir-lg) creating and checking "/x/file0"
src/tests/filesys/extended/grow-dir-lg.ck:10:(grow-dir-lg) creating and checking "/x/file1"
src/tests/filesys/extended/grow-dir-lg.ck:11:(grow-dir-lg) creating and checking "/x/file2"
src/tests/filesys/extended/grow-dir-lg.ck:12:(grow-dir-lg) creating and checking "/x/file3"
src/tests/filesys/extended/grow-dir-lg.ck:13:(grow-dir-lg) creating and checking "/x/file4"
src/tests/filesys/extended/grow-dir-lg.ck:14:(grow-dir-lg) creating and checking "/x/file5"
src/tests/filesys/extended/grow-dir-lg.ck:15:(grow-dir-lg) creating and checking "/x/file6"
src/tests/filesys/extended/grow-dir-lg.ck:16:(grow-dir-lg) creating and checking "/x/file7"
src/tests/filesys/extended/grow-dir-lg.ck:17:(grow-dir-lg) creating and checking "/x/file8"
src/tests/filesys/extended/grow-dir-lg.ck:18:(grow-dir-lg) creating and checking "/x/file9"
src/tests/filesys/extended/grow-dir-lg.ck:19:(grow-dir-lg) creating and checking "/x/file10"
src/tests/filesys/extended/grow-dir-lg.ck:20:(grow-dir-lg) creating and checking "/x/file11"
src/tests/filesys/extended/grow-dir-lg.ck:21:(grow-dir-lg) creating and checking "/x/file12"
src/tests/filesys/extended/grow-dir-lg.ck:22:(grow-dir-lg) creating and checking "/x/file13"
src/tests/filesys/extended/grow-dir-lg.ck:23:(grow-dir-lg) creating and checking "/x/file14"
src/tests/filesys/extended/grow-dir-lg.ck:24:(grow-dir-lg) creating and checking "/x/file15"
src/tests/filesys/extended/grow-dir-lg.ck:25:(grow-dir-lg) creating and checking "/x/file16"
src/tests/filesys/extended/grow-dir-lg.ck:26:(grow-dir-lg) creating and checking "/x/file17"
src/tests/filesys/extended/grow-dir-lg.ck:27:(grow-dir-lg) creating and checking "/x/file18"
src/tests/filesys/extended/grow-dir-lg.ck:28:(grow-dir-lg) creating and checking "/x/file19"
src/tests/filesys/extended/grow-dir-lg.ck:29:(grow-dir-lg) creating and checking "/x/file20"
src/tests/filesys/extended/grow-dir-lg.ck:30:(grow-dir-lg) creating and checking "/x/file21"
src/tests/filesys/extended/grow-dir-lg.ck:31:(grow-dir-lg) creating and checking "/x/file22"
src/tests/filesys/extended/grow-dir-lg.ck:32:(grow-dir-lg) creating and checking "/x/file23"
src/tests/filesys/extended/grow-dir-lg.ck:33:(grow-dir-lg) creating and checking "/x/file24"
src/tests/filesys/extended/grow-dir-lg.ck:34:(grow-dir-lg) creating and checking "/x/file25"
src/tests/filesys/extended/grow-dir-lg.ck:35:(grow-dir-lg) creating and checking "/x/file26"
src/tests/filesys/extended/grow-dir-lg.ck:36:(grow-dir-lg) creating and checking "/x/file27"
src/tests/filesys/extended/grow-dir-lg.ck:37:(grow-dir-lg) creating and checking "/x/file28"
src/tests/filesys/extended/grow-dir-lg.ck:38:(grow-dir-lg) creating and checking "/x/file29"
src/tests/filesys/extended/grow-dir-lg.ck:39:(grow-dir-lg) creating and checking "/x/file30"
src/tests/filesys/extended/grow-dir-lg.ck:40:(grow-dir-lg) creating and checking "/x/file31"
src/tests/filesys/extended/grow-dir-lg.ck:41:(grow-dir-lg) creating and checking "/x/file32"
src/tests/filesys/extended/grow-dir-lg.ck:42:(grow-dir-lg) creating and checking "/x/file33"
src/tests/filesys/extended/grow-dir-lg.ck:43:(grow-dir-lg) creating and checking "/x/file34"
src/tests/filesys/extended/grow-dir-lg.ck:44:(grow-dir-lg) creating and checking "/x/file35"
src/tests/filesys/extended/grow-dir-lg.ck:45:(grow-dir-lg) creating and checking "/x/file36"
src/tests/filesys/extended/grow-dir-lg.ck:46:(grow-dir-lg) creating and checking "/x/file37"
src/tests/filesys/extended/grow-dir-lg.ck:47:(grow-dir-lg) creating and checking "/x/file38"
src/tests/filesys/extended/grow-dir-lg.ck:48:(grow-dir-lg) creating and checking "/x/file39"
src/tests/filesys/extended/grow-dir-lg.ck:49:(grow-dir-lg) creating and checking "/x/file40"
src/tests/filesys/extended/grow-dir-lg.ck:50:(grow-dir-lg) creating and checking "/x/file41"
src/tests/filesys/extended/grow-dir-lg.ck:51:(grow-dir-lg) creating and checking "/x/file42"
src/tests/filesys/extended/grow-dir-lg.ck:52:(grow-dir-lg) creating and checking "/x/file43"
src/tests/filesys/extended/grow-dir-lg.ck:53:(grow-dir-lg) creating and checking "/x/file44"
src/tests/filesys/extended/grow-dir-lg.ck:54:(grow-dir-lg) creating and checking "/x/file45"
src/tests/filesys/extended/grow-dir-lg.ck:55:(grow-dir-lg) creating and checking "/x/file46"
src/tests/filesys/extended/grow-dir-lg.ck:56:(grow-dir-lg) creating and checking "/x/file47"
src/tests/filesys/extended/grow-dir-lg.ck:57:(grow-dir-lg) creating and checking "/x/file48"
src/tests/filesys/extended/grow-dir-lg.ck:58:(grow-dir-lg) creating and checking "/x/file49"
src/tests/filesys/extended/grow-dir-lg.ck:59:(grow-dir-lg) end
src/tests/filesys/extended/dir-rm-tree-persistence.ck:1:# -*- perl -*-
src/tests/filesys/extended/dir-over-file.ck:1:# -*- perl -*-
src/tests/filesys/extended/dir-over-file.ck:6:(dir-over-file) begin
src/tests/filesys/extended/dir-over-file.ck:7:(dir-over-file) mkdir "abc"
src/tests/filesys/extended/dir-over-file.ck:8:(dir-over-file) create "abc" (must return false)
src/tests/filesys/extended/dir-over-file.ck:9:(dir-over-file) end
src/tests/filesys/extended/dir-mk-tree.ck:1:# -*- perl -*-
src/tests/filesys/extended/dir-mk-tree.ck:6:(dir-mk-tree) begin
src/tests/filesys/extended/dir-mk-tree.ck:7:(dir-mk-tree) creating /0/0/0/0 through /3/2/2/3...
src/tests/filesys/extended/dir-mk-tree.ck:8:(dir-mk-tree) open "/0/2/0/3"
src/tests/filesys/extended/dir-mk-tree.ck:9:(dir-mk-tree) close "/0/2/0/3"
src/tests/filesys/extended/dir-mk-tree.ck:10:(dir-mk-tree) end
src/tests/filesys/extended/grow-root-lg.c:4:#include "tests/filesys/extended/grow-dir.inc"
src/tests/filesys/extended/Make.tests:1:# -*- makefile -*-
src/tests/filesys/extended/Make.tests:3:raw_tests = dir-empty-name dir-mk-tree dir-mkdir dir-open		\
src/tests/filesys/extended/Make.tests:4:dir-over-file dir-rm-cwd dir-rm-parent dir-rm-root dir-rm-tree		\
src/tests/filesys/extended/Make.tests:5:dir-rmdir dir-under-file dir-vine grow-create grow-dir-lg		\
src/tests/filesys/extended/Make.tests:6:grow-file-size grow-root-lg grow-root-sm grow-seq-lg grow-seq-sm	\
src/tests/filesys/extended/Make.tests:7:grow-sparse grow-tell grow-two-files syn-rw
src/tests/filesys/extended/Make.tests:10:tests/filesys/extended_EXTRA_GRADES = $(patsubst %,tests/filesys/extended/%-persistence,$(raw_tests))
src/tests/filesys/extended/Make.tests:13:tests/filesys/extended/child-syn-rw tests/filesys/extended/tar
src/tests/filesys/extended/Make.tests:16:	$(eval $(prog)_SRC += $(prog).c tests/lib.c tests/filesys/seq-test.c))
src/tests/filesys/extended/Make.tests:25:tests/filesys/extended/dir-mk-tree_SRC += tests/filesys/extended/mk-tree.c
src/tests/filesys/extended/Make.tests:26:tests/filesys/extended/dir-rm-tree_SRC += tests/filesys/extended/mk-tree.c
src/tests/filesys/extended/Make.tests:28:tests/filesys/extended/syn-rw_PUTFILES += tests/filesys/extended/child-syn-rw
src/tests/filesys/extended/Make.tests:30:tests/filesys/extended/dir-vine.output: TIMEOUT = 150
src/tests/filesys/extended/Make.tests:34:GETCMD = pintos -v -k -T $(GETTIMEOUT)
src/tests/filesys/extended/Make.tests:37:GETCMD += --fs-disk=$(FSDISK)
src/tests/filesys/extended/Make.tests:38:GETCMD += -g fs.tar -a $(TEST).tar
src/tests/filesys/extended/Make.tests:40:GETCMD += --swap-disk=4
src/tests/filesys/extended/Make.tests:42:GETCMD += -- -q
src/tests/filesys/extended/Make.tests:46:GETCMD += 2> $(TEST)-persistence.errors $(if $(VERBOSE),|tee,>) $(TEST)-persistence.output
src/tests/filesys/extended/Make.tests:49:	rm -f tmp.dsk
src/tests/filesys/extended/Make.tests:50:	pintos-mkdisk tmp.dsk 2
src/tests/filesys/extended/Make.tests:53:	rm -f tmp.dsk
src/tests/filesys/extended/Make.tests:54:$(foreach raw_test,$(raw_tests),$(eval tests/filesys/extended/$(raw_test)-persistence.output: tests/filesys/extended/$(raw_test).output))
src/tests/filesys/extended/Make.tests:55:$(foreach raw_test,$(raw_tests),$(eval tests/filesys/extended/$(raw_test)-persistence.result: tests/filesys/extended/$(raw_test).result))
src/tests/filesys/extended/Make.tests:60:	rm -f $(TARS)
src/tests/filesys/extended/Make.tests:61:	rm -f tests/filesys/extended/can-rmdir-cwd
src/tests/filesys/extended/grow-seq-sm.c:5:#include "tests/filesys/extended/grow-seq.inc"
src/tests/filesys/extended/dir-rm-tree.c:7:#include "tests/filesys/extended/mk-tree.h"
src/tests/filesys/extended/dir-rm-tree.c:29:       at - 1, bt - 1, ct - 1, dt - 1);
src/tests/filesys/extended/dir-rm-tree.c:47:  snprintf (try, sizeof (try), "/%d/%d/%d/%d", at - 1, 0, ct - 1, 0);
src/tests/filesys/extended/dir-rm-tree.c:48:  CHECK (open (try) == -1, "open \"%s\" (must return -1)", try);
src/tests/filesys/extended/grow-two-files-persistence.ck:1:# -*- perl -*-
src/tests/filesys/extended/grow-file-size-persistence.ck:1:# -*- perl -*-
src/tests/filesys/extended/grow-seq-lg.c:5:#include "tests/filesys/extended/grow-seq.inc"
src/tests/filesys/extended/child-syn-rw.c:1:/* Child process for syn-rw.
src/tests/filesys/extended/child-syn-rw.c:8:   and calling yield whenever we receive a 0-byte read.) */
src/tests/filesys/extended/child-syn-rw.c:13:#include "tests/filesys/extended/syn-rw.h"
src/tests/filesys/extended/child-syn-rw.c:16:const char *test_name = "child-syn-rw";
src/tests/filesys/extended/child-syn-rw.c:40:      int bytes_read = read (fd, buf2 + ofs, sizeof buf2 - ofs);
src/tests/filesys/extended/child-syn-rw.c:41:      CHECK (bytes_read >= -1 && bytes_read <= (int) (sizeof buf2 - ofs),
src/tests/filesys/extended/child-syn-rw.c:42:             "%zu-byte read on \"%s\" returned invalid value of %d",
src/tests/filesys/extended/child-syn-rw.c:43:             sizeof buf2 - ofs, file_name, bytes_read);
src/tests/filesys/seq-test.c:1:#include "tests/filesys/seq-test.h"
src/tests/filesys/seq-test.c:23:      if (block_size > size - ofs)
src/tests/filesys/seq-test.c:24:        block_size = size - ofs;
src/tests/filesys/create.inc:1:/* -*- c -*- */
src/tests/Algorithm/Diff.pm:9:#          ^ ^^ ^^-- Incremented at will
src/tests/Algorithm/Diff.pm:10:#          | \+----- Incremented for non-trivial changes to features
src/tests/Algorithm/Diff.pm:11:#          \-------- Incremented for fundamental changes
src/tests/Algorithm/Diff.pm:20:# McIlroy-Hunt diff algorithm
src/tests/Algorithm/Diff.pm:22:# by Ned Konz, perl@bike-nomad.com
src/tests/Algorithm/Diff.pm:44:        my $element = $aCollection->[$index];
src/tests/Algorithm/Diff.pm:72:    if ( $high == -1 || $aValue > $array->[-1] )
src/tests/Algorithm/Diff.pm:87:        $found = $array->[$index];
src/tests/Algorithm/Diff.pm:99:            $high = $index - 1;
src/tests/Algorithm/Diff.pm:104:    $array->[$low] = $aValue;    # overwrite next larger
src/tests/Algorithm/Diff.pm:111:#   $a->[ $i ] == $b->[ $result[ $i ] ]
src/tests/Algorithm/Diff.pm:141:    # Check for bogus (non-ref) argument values
src/tests/Algorithm/Diff.pm:178:            and &$compare( $a->[$aStart], $b->[$bStart], @_ ) )
src/tests/Algorithm/Diff.pm:180:            $matchVector->[ $aStart++ ] = $bStart++;
src/tests/Algorithm/Diff.pm:187:            and &$compare( $a->[$aFinish], $b->[$bFinish], @_ ) )
src/tests/Algorithm/Diff.pm:189:            $matchVector->[ $aFinish-- ] = $bFinish--;
src/tests/Algorithm/Diff.pm:203:        $ai = &$keyGen( $a->[$i], @_ );
src/tests/Algorithm/Diff.pm:204:        if ( exists( $bMatches->{$ai} ) )
src/tests/Algorithm/Diff.pm:207:            for $j ( @{ $bMatches->{$ai} } )
src/tests/Algorithm/Diff.pm:211:                if ( $k and $thresh->[$k] > $j and $thresh->[ $k - 1 ] < $j )
src/tests/Algorithm/Diff.pm:213:                    $thresh->[$k] = $j;
src/tests/Algorithm/Diff.pm:223:                    $links->[$k] =
src/tests/Algorithm/Diff.pm:224:                      [ ( $k ? $links->[ $k - 1 ] : undef ), $i, $j ];
src/tests/Algorithm/Diff.pm:233:        for ( my $link = $links->[$#$thresh] ; $link ; $link = $link->[0] )
src/tests/Algorithm/Diff.pm:235:            $matchVector->[ $link->[1] ] = $link->[2];
src/tests/Algorithm/Diff.pm:252:    my $matchCallback     = $callbacks->{'MATCH'} || sub { };
src/tests/Algorithm/Diff.pm:253:    my $discardACallback  = $callbacks->{'DISCARD_A'} || sub { };
src/tests/Algorithm/Diff.pm:254:    my $finishedACallback = $callbacks->{'A_FINISHED'};
src/tests/Algorithm/Diff.pm:255:    my $discardBCallback  = $callbacks->{'DISCARD_B'} || sub { };
src/tests/Algorithm/Diff.pm:256:    my $finishedBCallback = $callbacks->{'B_FINISHED'};
src/tests/Algorithm/Diff.pm:267:        my $bLine = $matchVector->[$ai];
src/tests/Algorithm/Diff.pm:326:    my $matchCallback     = $callbacks->{'MATCH'} || sub { };
src/tests/Algorithm/Diff.pm:327:    my $discardACallback  = $callbacks->{'DISCARD_A'} || sub { };
src/tests/Algorithm/Diff.pm:328:    my $discardBCallback  = $callbacks->{'DISCARD_B'} || sub { };
src/tests/Algorithm/Diff.pm:329:    my $changeCallback    = $callbacks->{'CHANGE'};
src/tests/Algorithm/Diff.pm:337:    my $ma    = -1;
src/tests/Algorithm/Diff.pm:348:            &&  !defined $matchVector->[$ma]
src/tests/Algorithm/Diff.pm:352:        $mb = $matchVector->[$ma];
src/tests/Algorithm/Diff.pm:440:        if ( defined( $matchVector->[$i] ) )
src/tests/Algorithm/Diff.pm:442:            push ( @retval, $a->[$i] );
src/tests/Algorithm/Diff.pm:460:    my @am= grep defined $match->[$_], 0..$#$match;
src/tests/Algorithm/Diff.pm:474:        while(  @$am  &&  $ai == $am->[0]  &&  $bi == $bm->[0]  ) {
src/tests/Algorithm/Diff.pm:481:        $ai = $am->[0];
src/tests/Algorithm/Diff.pm:482:        $bi = $bm->[0];
src/tests/Algorithm/Diff.pm:497:        push @$hunk, [ '-', $_[0], $a->[ $_[0] ] ];
src/tests/Algorithm/Diff.pm:500:        push @$hunk, [ '+', $_[1], $b->[ $_[1] ] ];
src/tests/Algorithm/Diff.pm:518:    my $discard = sub { push ( @$retval, [ '-', $a->[ $_[0] ], "" ] ) };
src/tests/Algorithm/Diff.pm:519:    my $add = sub { push ( @$retval, [ '+', "", $b->[ $_[1] ] ] ) };
src/tests/Algorithm/Diff.pm:521:        push ( @$retval, [ 'c', $a->[ $_[0] ], $b->[ $_[1] ] ] );
src/tests/Algorithm/Diff.pm:524:        push ( @$retval, [ 'u', $a->[ $_[0] ], $b->[ $_[1] ] ] );
src/tests/Algorithm/Diff.pm:545:sub _Idx()  { 0 } # $me->[_Idx]: Ref to array of hunk indices
src/tests/Algorithm/Diff.pm:546:            # 1   # $me->[1]: Ref to first sequence
src/tests/Algorithm/Diff.pm:547:            # 2   # $me->[2]: Ref to second sequence
src/tests/Algorithm/Diff.pm:548:sub _End()  { 3 } # $me->[_End]: Diff between forward and reverse pos
src/tests/Algorithm/Diff.pm:549:sub _Same() { 4 } # $me->[_Same]: 1 if pos 1 contains unchanged items
src/tests/Algorithm/Diff.pm:550:sub _Base() { 5 } # $me->[_Base]: Added to range's min and max
src/tests/Algorithm/Diff.pm:551:sub _Pos()  { 6 } # $me->[_Pos]: Which hunk is currently selected
src/tests/Algorithm/Diff.pm:552:sub _Off()  { 7 } # $me->[_Off]: Offset into _Idx for current position
src/tests/Algorithm/Diff.pm:553:sub _Min() { -2 } # Added to _Off to get min instead of max+1
src/tests/Algorithm/Diff.pm:564:    return   if  $me->[_Pos];
src/tests/Algorithm/Diff.pm:572:    return $seq + $me->[_Off]
src/tests/Algorithm/Diff.pm:589:    for( $opts->{keyGen} ) {
src/tests/Algorithm/Diff.pm:592:    for( $opts->{keyGenArgs} ) {
src/tests/Algorithm/Diff.pm:597:    if(  0 == $cdif->[2]  &&  0 == $cdif->[3]  ) {
src/tests/Algorithm/Diff.pm:605:    my $me = bless \@obj, $us->getObjPkg();
src/tests/Algorithm/Diff.pm:606:    $me->Reset( 0 );
src/tests/Algorithm/Diff.pm:614:    $pos += $me->[_End]
src/tests/Algorithm/Diff.pm:617:        if  $pos < 0  ||  $me->[_End] <= $pos;
src/tests/Algorithm/Diff.pm:618:    $me->[_Pos]= $pos || !1;
src/tests/Algorithm/Diff.pm:619:    $me->[_Off]= 2*$pos - 1;
src/tests/Algorithm/Diff.pm:626:    my $oldBase= $me->[_Base];
src/tests/Algorithm/Diff.pm:627:    $me->[_Base]= 0+$base   if  defined $base;
src/tests/Algorithm/Diff.pm:636:    $you->Reset( $pos )   if  defined $pos;
src/tests/Algorithm/Diff.pm:637:    $you->Base( $base );
src/tests/Algorithm/Diff.pm:645:        my $pos= $me->[_Pos];
src/tests/Algorithm/Diff.pm:648:        $me->Reset( $new )
src/tests/Algorithm/Diff.pm:650:    return $me->[_Pos];
src/tests/Algorithm/Diff.pm:656:    my $pos= $me->Next(-$steps);
src/tests/Algorithm/Diff.pm:657:    $pos -= $me->[_End]   if  $pos;
src/tests/Algorithm/Diff.pm:663:    $me->_ChkPos();
src/tests/Algorithm/Diff.pm:664:    return 0   if  $me->[_Same] == ( 1 & $me->[_Pos] );
src/tests/Algorithm/Diff.pm:666:    my $off= $me->[_Off];
src/tests/Algorithm/Diff.pm:669:            if  $me->[_Idx][ $off + $seq + _Min ]
src/tests/Algorithm/Diff.pm:670:            <   $me->[_Idx][ $off + $seq ];
src/tests/Algorithm/Diff.pm:677:    $me->_ChkPos();
src/tests/Algorithm/Diff.pm:678:    my $off= $me->_ChkSeq($seq);
src/tests/Algorithm/Diff.pm:679:    $base= $me->[_Base] if !defined $base;
src/tests/Algorithm/Diff.pm:680:    return $base + $me->[_Idx][ $off + _Min ];
src/tests/Algorithm/Diff.pm:685:    $me->_ChkPos();
src/tests/Algorithm/Diff.pm:686:    my $off= $me->_ChkSeq($seq);
src/tests/Algorithm/Diff.pm:687:    $base= $me->[_Base] if !defined $base;
src/tests/Algorithm/Diff.pm:688:    return $base + $me->[_Idx][ $off ] -1;
src/tests/Algorithm/Diff.pm:693:    $me->_ChkPos();
src/tests/Algorithm/Diff.pm:694:    my $off = $me->_ChkSeq($seq);
src/tests/Algorithm/Diff.pm:696:        return  $me->[_Idx][ $off ]
src/tests/Algorithm/Diff.pm:697:            -   $me->[_Idx][ $off + _Min ];
src/tests/Algorithm/Diff.pm:699:    $base= $me->[_Base] if !defined $base;
src/tests/Algorithm/Diff.pm:700:    return  ( $base + $me->[_Idx][ $off + _Min ] )
src/tests/Algorithm/Diff.pm:701:        ..  ( $base + $me->[_Idx][ $off ] - 1 );
src/tests/Algorithm/Diff.pm:706:    $me->_ChkPos();
src/tests/Algorithm/Diff.pm:707:    my $off = $me->_ChkSeq($seq);
src/tests/Algorithm/Diff.pm:709:        return  $me->[_Idx][ $off ]
src/tests/Algorithm/Diff.pm:710:            -   $me->[_Idx][ $off + _Min ];
src/tests/Algorithm/Diff.pm:713:        @{$me->[$seq]}[
src/tests/Algorithm/Diff.pm:714:                $me->[_Idx][ $off + _Min ]
src/tests/Algorithm/Diff.pm:715:            ..  ( $me->[_Idx][ $off ] - 1 )
src/tests/Algorithm/Diff.pm:721:    $me->_ChkPos();
src/tests/Algorithm/Diff.pm:723:        if  $me->[_Same] != ( 1 & $me->[_Pos] );
src/tests/Algorithm/Diff.pm:724:    return $me->Items(1);
src/tests/Algorithm/Diff.pm:743:    $me->_ChkPos();
src/tests/Algorithm/Diff.pm:748:            if(     $word !~ /^(-?\d+)?([a-zA-Z]+)([12])?$/
src/tests/Algorithm/Diff.pm:756:                    ? $meth->( $me )
src/tests/Algorithm/Diff.pm:757:                    : $meth->( $me, $seq, $base )
src/tests/Algorithm/Diff.pm:791:Algorithm::Diff - Compute `intelligent' differences between two files / lists
src/tests/Algorithm/Diff.pm:799:    my $diff = Algorithm::Diff->new( \@seq1, \@seq2 );
src/tests/Algorithm/Diff.pm:801:    $diff->Base( 1 );   # Return line numbers, not indices
src/tests/Algorithm/Diff.pm:802:    while(  $diff->Next()  ) {
src/tests/Algorithm/Diff.pm:803:        next   if  $diff->Same();
src/tests/Algorithm/Diff.pm:805:        if(  ! $diff->Items(2)  ) {
src/tests/Algorithm/Diff.pm:807:                $diff->Get(qw( Min1 Max1 Max2 ));
src/tests/Algorithm/Diff.pm:808:        } elsif(  ! $diff->Items(1)  ) {
src/tests/Algorithm/Diff.pm:810:                $diff->Get(qw( Max1 Min2 Max2 ));
src/tests/Algorithm/Diff.pm:812:            $sep = "---\n";
src/tests/Algorithm/Diff.pm:814:                $diff->Get(qw( Min1 Max1 Min2 Max2 ));
src/tests/Algorithm/Diff.pm:816:        print "< $_"   for  $diff->Items(1);
src/tests/Algorithm/Diff.pm:818:        print "> $_"   for  $diff->Items(2);
src/tests/Algorithm/Diff.pm:870:(by Mark-Jason Dominus)
src/tests/Algorithm/Diff.pm:894:From there it's only a small step to get diff-like output:
src/tests/Algorithm/Diff.pm:897:    +   - +   +   - + + +
src/tests/Algorithm/Diff.pm:900:to generate C<diff>-like output.
src/tests/Algorithm/Diff.pm:931:This module now provides an object-oriented interface that uses less
src/tests/Algorithm/Diff.pm:978:    $diff = Algorithm::Diffs->new( \@seq1, \@seq2 );
src/tests/Algorithm/Diff.pm:979:    $diff = Algorithm::Diffs->new( \@seq1, \@seq2, \%opts );
src/tests/Algorithm/Diff.pm:1000:    $obj        = Algorithm::Diff->new( \@seq1, \@seq2, [ \%opts ] );
src/tests/Algorithm/Diff.pm:1001:    $pos        = $obj->Next(  [ $count : 1 ] );
src/tests/Algorithm/Diff.pm:1002:    $revPos     = $obj->Prev(  [ $count : 1 ] );
src/tests/Algorithm/Diff.pm:1003:    $obj        = $obj->Reset( [ $pos : 0 ] );
src/tests/Algorithm/Diff.pm:1004:    $copy       = $obj->Copy(  [ $pos, [ $newBase ] ] );
src/tests/Algorithm/Diff.pm:1005:    $oldBase    = $obj->Base(  [ $newBase ] );
src/tests/Algorithm/Diff.pm:1010:    $bits       = $obj->Diff(  );
src/tests/Algorithm/Diff.pm:1011:    @items|$cnt = $obj->Same(  );
src/tests/Algorithm/Diff.pm:1012:    @items|$cnt = $obj->Items( $seqNum );
src/tests/Algorithm/Diff.pm:1013:    @idxs |$cnt = $obj->Range( $seqNum, [ $base ] );
src/tests/Algorithm/Diff.pm:1014:    $minIdx     = $obj->Min(   $seqNum, [ $base ] );
src/tests/Algorithm/Diff.pm:1015:    $maxIdx     = $obj->Max(   $seqNum, [ $base ] );
src/tests/Algorithm/Diff.pm:1016:    @values     = $obj->Get(   @names );
src/tests/Algorithm/Diff.pm:1023:    $pos = $diff->Next();    # Move forward 1 hunk
src/tests/Algorithm/Diff.pm:1024:    $pos = $diff->Next( 2 ); # Move forward 2 hunks
src/tests/Algorithm/Diff.pm:1025:    $pos = $diff->Next(-5);  # Move backward 5 hunks
src/tests/Algorithm/Diff.pm:1039:C<Prev($N)> is almost identical to C<Next(-$N)>; it moves to the $Nth
src/tests/Algorithm/Diff.pm:1040:previous hunk.  On a 'reset' object, C<Prev()> [and C<Next(-1)>] move
src/tests/Algorithm/Diff.pm:1044:hunks; -1 for the last hunk, -2 for the second-to-last, etc.
src/tests/Algorithm/Diff.pm:1048:    $diff->Reset();     # Reset the object's position
src/tests/Algorithm/Diff.pm:1049:    $diff->Reset($pos); # Move to the specified hunk
src/tests/Algorithm/Diff.pm:1050:    $diff->Reset(1);    # Move to the first hunk
src/tests/Algorithm/Diff.pm:1051:    $diff->Reset(-1);   # Move to the last hunk
src/tests/Algorithm/Diff.pm:1054:C<< $diff->Reset()->Next(-1) >> to get the number of hunks.
src/tests/Algorithm/Diff.pm:1058:    $copy = $diff->Copy( $newPos, $newBase );
src/tests/Algorithm/Diff.pm:1069:    $copy = $diff->Copy($pos);
src/tests/Algorithm/Diff.pm:1071:    $copy = $diff->Copy();
src/tests/Algorithm/Diff.pm:1072:    $copy->Reset($pos);
src/tests/Algorithm/Diff.pm:1074:    $copy = $diff->Copy()->Reset($pos);
src/tests/Algorithm/Diff.pm:1081:    $copy = $diff->Copy();
src/tests/Algorithm/Diff.pm:1082:    $copy->Base( 0 );
src/tests/Algorithm/Diff.pm:1084:    $copy = $diff->Copy(undef,0);
src/tests/Algorithm/Diff.pm:1088:    $copy = $diff->Copy(0);
src/tests/Algorithm/Diff.pm:1090:    $copy = $diff->Copy()->Reset();
src/tests/Algorithm/Diff.pm:1094:    $bits = $obj->Diff();
src/tests/Algorithm/Diff.pm:1137:    $count = $diff->Items(2);
src/tests/Algorithm/Diff.pm:1138:    @items = $diff->Items($seqNum);
src/tests/Algorithm/Diff.pm:1144:C<< $diff->Items(1) >> will return an empty list (0 in a scalar conext).
src/tests/Algorithm/Diff.pm:1145:If the current hunk contains only deletions, then C<< $diff->Items(2) >>
src/tests/Algorithm/Diff.pm:1148:If the hunk contains replacements, then both C<< $diff->Items(1) >> and
src/tests/Algorithm/Diff.pm:1149:C<< $diff->Items(2) >> will return different, non-empty lists.
src/tests/Algorithm/Diff.pm:1154:    @items = $diff->Items(1);
src/tests/Algorithm/Diff.pm:1155:    @items = $diff->Items(2);
src/tests/Algorithm/Diff.pm:1156:    @items = $diff->Same();
src/tests/Algorithm/Diff.pm:1160:    $count = $diff->Range( $seqNum );
src/tests/Algorithm/Diff.pm:1161:    @indices = $diff->Range( $seqNum );
src/tests/Algorithm/Diff.pm:1162:    @indices = $diff->Range( $seqNum, $base );
src/tests/Algorithm/Diff.pm:1170:    @list = $diff->Items(2);
src/tests/Algorithm/Diff.pm:1171:    @list = @seq2[ $diff->Range(2) ];
src/tests/Algorithm/Diff.pm:1176:    @list = $diff->Items(1);
src/tests/Algorithm/Diff.pm:1177:    @list = @seq1[ $diff->Range(1,0) ];
src/tests/Algorithm/Diff.pm:1181:    $curBase = $diff->Base();
src/tests/Algorithm/Diff.pm:1182:    $oldBase = $diff->Base($newBase);
src/tests/Algorithm/Diff.pm:1191:    $min1 = $diff->Min(1);
src/tests/Algorithm/Diff.pm:1192:    $min = $diff->Min( $seqNum, $base );
src/tests/Algorithm/Diff.pm:1204:    ( $n, $x, $r ) = $diff->Get(qw( min1 max1 range1 ));
src/tests/Algorithm/Diff.pm:1205:    @values = $diff->Get(qw( 0min2 1max2 range2 same base ));
src/tests/Algorithm/Diff.pm:1211:    /^(-?\d+)?(min|max)[12]$/i
src/tests/Algorithm/Diff.pm:1218:    $diff->Get('min1') == $diff->Min(1)
src/tests/Algorithm/Diff.pm:1219:    $diff->Get('0min2') == $diff->Min(2,0)
src/tests/Algorithm/Diff.pm:1277:      [ [ '-', 0, 'a' ] ],
src/tests/Algorithm/Diff.pm:1281:      [ [ '-', 4, 'h' ],
src/tests/Algorithm/Diff.pm:1286:      [ [ '-',  8, 'n' ],
src/tests/Algorithm/Diff.pm:1287:        [ '-',  9, 'p' ],
src/tests/Algorithm/Diff.pm:1294:position 0 of the first sequence should be deleted (C<->).  The second
src/tests/Algorithm/Diff.pm:1314:Unix-utility I<sdiff> does:
src/tests/Algorithm/Diff.pm:1318:    old        <     -
src/tests/Algorithm/Diff.pm:1319:    -          >     new
src/tests/Algorithm/Diff.pm:1327:(C<+>: Element added, C<->: Element removed, C<u>: Element unmodified,
src/tests/Algorithm/Diff.pm:1329:be displayed side-by-side.
src/tests/Algorithm/Diff.pm:1338:    ( [ '-', 'a', ''  ],
src/tests/Algorithm/Diff.pm:1399:contains items C<$diff[0]> through C<$diff[2] - 1> of the first sequence
src/tests/Algorithm/Diff.pm:1400:and contains items C<$diff[1]> through C<$diff[3] - 1> of the second
src/tests/Algorithm/Diff.pm:1407:    @list1 = @a[ $cdiff[0] .. $cdiff[2]-1 ];
src/tests/Algorithm/Diff.pm:1408:    @list2 = @b[ $cdiff[1] .. $cdiff[3]-1 ];
src/tests/Algorithm/Diff.pm:1418:So the 1st, 3rd, 5th, etc. hunks (all odd-numbered hunks if you start
src/tests/Algorithm/Diff.pm:1420:etc. hunks (all even-numbered hunks if you start counting from 1) all
src/tests/Algorithm/Diff.pm:1428:    @hunk1a = @a[ 0 .. 0-1 ];
src/tests/Algorithm/Diff.pm:1429:    @hunk1b = @b[ 0 .. 0-1 ];
src/tests/Algorithm/Diff.pm:1431:And C<0..-1> returns the empty list.
src/tests/Algorithm/Diff.pm:1439:        @hunk2a = @a[ $cdiff[2] .. $cdiff[4]-1 ];
src/tests/Algorithm/Diff.pm:1440:        @hunk2b = @b[ $cdiff[3] .. $cdiff[5]-1 ];
src/tests/Algorithm/Diff.pm:1442:        @hunk2a = @a[ 0 .. 1-1 ];
src/tests/Algorithm/Diff.pm:1443:        @hunk2b = @b[ 0 .. 0-1 ];
src/tests/Algorithm/Diff.pm:1446:        @hunk2b = @b[ 0 .. -1 ];
src/tests/Algorithm/Diff.pm:1456:        @hunk3a = @a[ $cdiff[4] .. $cdiff[6]-1 ];
src/tests/Algorithm/Diff.pm:1457:        @hunk3a = @b[ $cdiff[5] .. $cdiff[7]-1 ];
src/tests/Algorithm/Diff.pm:1459:        @hunk3a = @a[ 1 .. 3-1 ];
src/tests/Algorithm/Diff.pm:1460:        @hunk3a = @b[ 0 .. 2-1 ];
src/tests/Algorithm/Diff.pm:1485:sequences one element at a time, calling an appropriate user-specified
src/tests/Algorithm/Diff.pm:1545:        undef,     # default key-gen
src/tests/Algorithm/Diff.pm:1627:        return shift()->{'ssn'};
src/tests/Algorithm/Diff.pm:1630:    my $person1 = Person->new( name => 'Joe', ssn => '123-45-6789' );
src/tests/Algorithm/Diff.pm:1631:    my $person2 = Person->new( name => 'Mary', ssn => '123-47-0000' );
src/tests/Algorithm/Diff.pm:1632:    my $person3 = Person->new( name => 'Pete', ssn => '999-45-2222' );
src/tests/Algorithm/Diff.pm:1633:    my $person4 = Person->new( name => 'Peggy', ssn => '123-45-9999' );
src/tests/Algorithm/Diff.pm:1634:    my $person5 = Person->new( name => 'Frank', ssn => '000-45-9999' );
src/tests/Algorithm/Diff.pm:1648:    my $array2 = [ $person1, $person3, $person4->clone(), $person5 ];
src/tests/Algorithm/Diff.pm:1651:$person4 and $person4->clone() (which have the same name and SSN)
src/tests/Algorithm/Diff.pm:1656:    my $array2 = [ $person1, $person3, $person4->clone(), $person5 ];
src/tests/Algorithm/Diff.pm:1660:so would consider $person4 and $person4->clone() as equal.
src/tests/Algorithm/Diff.pm:1667:If you pass these routines a non-reference and they expect a reference,
src/tests/Algorithm/Diff.pm:1676:Parts Copyright (c) 2000-2004 Ned Konz.  All rights reserved.
src/tests/Algorithm/Diff.pm:1684:Mark-Jason still maintains a mailing list.  To join a low-volume mailing
src/tests/Algorithm/Diff.pm:1686:empty mail message to mjd-perl-diff-request@plover.com.
src/tests/Algorithm/Diff.pm:1692:Mark-Jason Dominus, mjd-perl-diff@plover.com
src/tests/Algorithm/Diff.pm:1695:Mark-Jason's, but Diff.pm's code was completely replaced.
src/tests/Algorithm/Diff.pm:1706:CACM, vol.20, no.5, pp.350-353, May 1977, with a few
src/tests/Algorithm/Diff.pm:1709:Much work was done by Ned Konz (perl@bike-nomad.com).
src/tests/internal/list.c:65:          ASSERT (size ? list_entry (e, struct value, elem)->value == 0
src/tests/internal/list.c:68:          ASSERT (size ? list_entry (e, struct value, elem)->value == size - 1
src/tests/internal/list.c:95:              while (copies-- > 0) 
src/tests/internal/list.c:97:                  values[ofs].value = v->value;
src/tests/internal/list.c:119:      size_t j = i + random_ulong () % (cnt - i);
src/tests/internal/list.c:135:  return a->value < b->value;
src/tests/internal/list.c:151:      ASSERT (i == v->value);
src/tests/internal/list.c:170:      ASSERT (i == v->value);
src/tests/internal/stdio.c:28:  printf ("\"%s\" -> \"%s\": ", format, expect);
src/tests/internal/stdio.c:73:  checkf ("-1", "%'d", -1);
src/tests/internal/stdio.c:74:  checkf ("-12", "%'d", -12);
src/tests/internal/stdio.c:75:  checkf ("-123", "%'d", -123);
src/tests/internal/stdio.c:76:  checkf ("-1,234", "%'d", -1234);
src/tests/internal/stdio.c:77:  checkf ("-12,345", "%'d", -12345);
src/tests/internal/stdio.c:78:  checkf ("-123,456", "%'ld", -123456L);
src/tests/internal/stdio.c:79:  checkf ("-1,234,567", "%'ld", -1234567L);
src/tests/internal/stdio.c:80:  checkf ("-12,345,678", "%'ld", -12345678L);
src/tests/internal/stdio.c:81:  checkf ("-123,456,789", "%'ld", -123456789L);
src/tests/internal/stdio.c:82:  checkf ("-1,234,567,890", "%'ld", -1234567890L);
src/tests/internal/stdio.c:83:  checkf ("-12,345,678,901", "%'lld", -12345678901LL);
src/tests/internal/stdio.c:84:  checkf ("-123,456,789,012", "%'lld", -123456789012LL);
src/tests/internal/stdio.c:85:  checkf ("-1,234,567,890,123", "%'lld", -1234567890123LL);
src/tests/internal/stdio.c:86:  checkf ("-12,345,678,901,234", "%'lld", -12345678901234LL);
src/tests/internal/stdio.c:87:  checkf ("-123,456,789,012,345", "%'lld", -123456789012345LL);
src/tests/internal/stdio.c:88:  checkf ("-1,234,567,890,123,456", "%'lld", -1234567890123456LL);
src/tests/internal/stdio.c:89:  checkf ("-12,345,678,901,234,567", "%'lld", -12345678901234567LL);
src/tests/internal/stdio.c:90:  checkf ("-123,456,789,012,345,678", "%'lld", -123456789012345678LL);
src/tests/internal/stdio.c:91:  checkf ("-1,234,567,890,123,456,789", "%'lld", -1234567890123456789LL);
src/tests/internal/stdio.c:95:  checkf ("0    ", "%-5d", 0);
src/tests/internal/stdio.c:97:  checkf ("+0   ", "%+-5d", 0);
src/tests/internal/stdio.c:105:  checkf ("1    ", "%-5d", 1);
src/tests/internal/stdio.c:107:  checkf ("+1   ", "%+-5d", 1);
src/tests/internal/stdio.c:114:  checkf ("   -1", "%5d", -1);
src/tests/internal/stdio.c:115:  checkf ("-1   ", "%-5d", -1);
src/tests/internal/stdio.c:116:  checkf ("   -1", "%+5d", -1);
src/tests/internal/stdio.c:117:  checkf ("-1   ", "%+-5d", -1);
src/tests/internal/stdio.c:118:  checkf ("   -1", "% 5d", -1);
src/tests/internal/stdio.c:119:  checkf ("-0001", "%05d", -1);
src/tests/internal/stdio.c:120:  checkf ("   -1", "%5.0d", -1);
src/tests/internal/stdio.c:121:  checkf ("  -01", "%5.2d", -1);
src/tests/internal/stdio.c:122:  checkf ("-1", "%d", -1);
src/tests/internal/stdio.c:125:  checkf ("12345", "%-5d", 12345);
src/tests/internal/stdio.c:127:  checkf ("+12345", "%+-5d", 12345);
src/tests/internal/stdio.c:135:  checkf ("123456", "%-5d", 123456);
src/tests/internal/stdio.c:137:  checkf ("+123456", "%+-5d", 123456);
src/tests/internal/stdio.c:174:  checkf ("  left-right  ", "%6s%s%-7s", "left", "-", "right");
src/tests/internal/stdio.c:180:  checkf ("36657730000", "%- o", (unsigned) 036657730000);
src/tests/internal/stdio.c:181:  checkf ("4139757568", "%- u", (unsigned) 4139757568UL);
src/tests/internal/stdio.c:182:  checkf ("f6bfb000", "%- x", (unsigned) 0xf6bfb000);
src/tests/internal/stdio.c:183:  checkf ("36657730000", "%-to", (ptrdiff_t) 036657730000);
src/tests/internal/stdio.c:184:  checkf ("4139757568", "%-tu", (ptrdiff_t) 4139757568UL);
src/tests/internal/stdio.c:185:  checkf ("-155209728", "%-zi", (size_t) -155209728);
src/tests/internal/stdio.c:186:  checkf ("-155209728", "%-zd", (size_t) -155209728);
src/tests/internal/stdio.c:189:  checkf ("-155209728", "% zi", (size_t) -155209728);
src/tests/internal/stdio.c:190:  checkf ("-155209728", "% zd", (size_t) -155209728);
src/tests/internal/stdio.c:195:  checkf ("-155209728", "%#zd", (size_t) -155209728);
src/tests/internal/stdio.c:196:  checkf ("-155209728", "%0zi", (size_t) -155209728);
src/tests/internal/stdio.c:198:  checkf ("-155,209,728", "%-'d", -155209728);
src/tests/internal/stdio.c:199:  checkf ("-155209728", "%.zi", (size_t) -155209728);
src/tests/internal/stdio.c:200:  checkf ("-155209728", "%zi", (size_t) -155209728);
src/tests/internal/stdio.c:201:  checkf ("-155209728", "%zd", (size_t) -155209728);
src/tests/internal/stdio.c:202:  checkf ("-155209728", "%+zi", (size_t) -155209728);
src/tests/internal/stdlib.c:67:      size_t j = i + random_ulong () % (cnt - i);
src/tests/internal/stdlib.c:76:   -1 if *A is less than *B. */
src/tests/internal/stdlib.c:83:  return *a < *b ? -1 : *a > *b;
src/tests/internal/stdlib.c:86:/* Verifies that ARRAY contains the CNT ints 0...CNT-1. */
src/tests/internal/stdlib.c:97:   contain the values 0...CNT-1. */
src/tests/internal/stdlib.c:101:  int not_in_array[] = {0, -1, INT_MAX, MAX_CNT, MAX_CNT + 1, MAX_CNT * 2};
src/tests/lib.c:22:  vsnprintf (buf + strlen (buf), sizeof buf - strlen (buf), format, args);
src/tests/lib.c:23:  strlcpy (buf + strlen (buf), suffix, sizeof buf - strlen (buf));
src/tests/lib.c:74:      size_t j = i + random_ulong () % (cnt - i);
src/tests/lib.c:123:  /* Read the file block-by-block, comparing data as we go. */
src/tests/lib.c:129:      block_size = size - ofs;
src/tests/lib.c:183:       "from expected.", j - i, ofs + i, file_name);
src/tests/lib.c:184:  show_cnt = j - i;
src/tests/lib.c:185:  if (j - i > 64) 
src/tests/lib.c:195:        "from expected", j - i, ofs + i, file_name);
src/tests/vm/page-merge-seq.c:58:      CHECK ((child = exec ("child-sort buffer")) != -1,
src/tests/vm/page-merge-seq.c:59:             "exec \"child-sort buffer\"");
src/tests/vm/page-merge-seq.c:60:      CHECK (wait (child) == 123, "wait for child-sort");
src/tests/vm/page-merge-seq.c:102:      if ((++mp[min] - buf1) % CHUNK_SIZE == 0)
src/tests/vm/page-merge-seq.c:103:        mp[min] = mp[--mp_left]; 
src/tests/vm/page-merge-seq.c:119:      while (histogram[hist_idx]-- > 0) 
src/tests/vm/mmap-shuffle.ck:1:# -*- perl -*-
src/tests/vm/mmap-shuffle.ck:17:    for my $i (0...128 * 1024 - 1) {
src/tests/vm/mmap-shuffle.ck:30:(mmap-shuffle) begin
src/tests/vm/mmap-shuffle.ck:31:(mmap-shuffle) create "buffer"
src/tests/vm/mmap-shuffle.ck:32:(mmap-shuffle) open "buffer"
src/tests/vm/mmap-shuffle.ck:33:(mmap-shuffle) mmap "buffer"
src/tests/vm/mmap-shuffle.ck:34:(mmap-shuffle) init: cksum=$init
src/tests/vm/mmap-shuffle.ck:35:(mmap-shuffle) shuffle 0: cksum=$shuffle[0]
src/tests/vm/mmap-shuffle.ck:36:(mmap-shuffle) shuffle 1: cksum=$shuffle[1]
src/tests/vm/mmap-shuffle.ck:37:(mmap-shuffle) shuffle 2: cksum=$shuffle[2]
src/tests/vm/mmap-shuffle.ck:38:(mmap-shuffle) shuffle 3: cksum=$shuffle[3]
src/tests/vm/mmap-shuffle.ck:39:(mmap-shuffle) shuffle 4: cksum=$shuffle[4]
src/tests/vm/mmap-shuffle.ck:40:(mmap-shuffle) shuffle 5: cksum=$shuffle[5]
src/tests/vm/mmap-shuffle.ck:41:(mmap-shuffle) shuffle 6: cksum=$shuffle[6]
src/tests/vm/mmap-shuffle.ck:42:(mmap-shuffle) shuffle 7: cksum=$shuffle[7]
src/tests/vm/mmap-shuffle.ck:43:(mmap-shuffle) shuffle 8: cksum=$shuffle[8]
src/tests/vm/mmap-shuffle.ck:44:(mmap-shuffle) shuffle 9: cksum=$shuffle[9]
src/tests/vm/mmap-shuffle.ck:45:(mmap-shuffle) end
src/tests/vm/page-merge-stk.ck:1:# -*- perl -*-
src/tests/vm/page-merge-stk.ck:6:(page-merge-stk) begin
src/tests/vm/page-merge-stk.ck:7:(page-merge-stk) init
src/tests/vm/page-merge-stk.ck:8:(page-merge-stk) sort chunk 0
src/tests/vm/page-merge-stk.ck:9:(page-merge-stk) sort chunk 1
src/tests/vm/page-merge-stk.ck:10:(page-merge-stk) sort chunk 2
src/tests/vm/page-merge-stk.ck:11:(page-merge-stk) sort chunk 3
src/tests/vm/page-merge-stk.ck:12:(page-merge-stk) sort chunk 4
src/tests/vm/page-merge-stk.ck:13:(page-merge-stk) sort chunk 5
src/tests/vm/page-merge-stk.ck:14:(page-merge-stk) sort chunk 6
src/tests/vm/page-merge-stk.ck:15:(page-merge-stk) sort chunk 7
src/tests/vm/page-merge-stk.ck:16:(page-merge-stk) wait for child 0
src/tests/vm/page-merge-stk.ck:17:(page-merge-stk) wait for child 1
src/tests/vm/page-merge-stk.ck:18:(page-merge-stk) wait for child 2
src/tests/vm/page-merge-stk.ck:19:(page-merge-stk) wait for child 3
src/tests/vm/page-merge-stk.ck:20:(page-merge-stk) wait for child 4
src/tests/vm/page-merge-stk.ck:21:(page-merge-stk) wait for child 5
src/tests/vm/page-merge-stk.ck:22:(page-merge-stk) wait for child 6
src/tests/vm/page-merge-stk.ck:23:(page-merge-stk) wait for child 7
src/tests/vm/page-merge-stk.ck:24:(page-merge-stk) merge
src/tests/vm/page-merge-stk.ck:25:(page-merge-stk) verify
src/tests/vm/page-merge-stk.ck:26:(page-merge-stk) success, buf_idx=1,048,576
src/tests/vm/page-merge-stk.ck:27:(page-merge-stk) end
src/tests/vm/pt-bad-read.ck:1:# -*- perl -*-
src/tests/vm/pt-bad-read.ck:6:(pt-bad-read) begin
src/tests/vm/pt-bad-read.ck:7:(pt-bad-read) open "sample.txt"
src/tests/vm/pt-bad-read.ck:8:pt-bad-read: exit(-1)
src/tests/vm/pt-grow-bad.c:2:   The process must be terminated with -1 exit code. */
src/tests/vm/pt-grow-bad.c:13:  asm volatile ("movl -4096(%esp), %eax");
src/tests/vm/mmap-zero.c:1:/* Tries to map a zero-length file, which may or may not work but
src/tests/vm/mmap-zero.c:4:   and the process must be terminated with -1 exit code. */
src/tests/vm/mmap-bad-fd.ck:1:# -*- perl -*-
src/tests/vm/mmap-bad-fd.ck:6:(mmap-bad-fd) begin
src/tests/vm/mmap-bad-fd.ck:7:(mmap-bad-fd) try to mmap invalid fd
src/tests/vm/mmap-bad-fd.ck:8:(mmap-bad-fd) end
src/tests/vm/mmap-bad-fd.ck:9:mmap-bad-fd: exit(0)
src/tests/vm/mmap-bad-fd.ck:11:(mmap-bad-fd) begin
src/tests/vm/mmap-bad-fd.ck:12:(mmap-bad-fd) try to mmap invalid fd
src/tests/vm/mmap-bad-fd.ck:13:mmap-bad-fd: exit(-1)
src/tests/vm/page-merge-mm.c:2:#include "tests/vm/parallel-merge.h"
src/tests/vm/page-merge-mm.c:7:  parallel_merge ("child-qsort-mm", 80);
src/tests/vm/Rubric.functionality:2:- Test stack growth.
src/tests/vm/Rubric.functionality:3:3	pt-grow-stack
src/tests/vm/Rubric.functionality:4:3	pt-grow-stk-sc
src/tests/vm/Rubric.functionality:5:3	pt-big-stk-obj
src/tests/vm/Rubric.functionality:6:3	pt-grow-pusha
src/tests/vm/Rubric.functionality:8:- Test paging behavior.
src/tests/vm/Rubric.functionality:9:3	page-linear
src/tests/vm/Rubric.functionality:10:3	page-parallel
src/tests/vm/Rubric.functionality:11:3	page-shuffle
src/tests/vm/Rubric.functionality:12:4	page-merge-seq
src/tests/vm/Rubric.functionality:13:4	page-merge-par
src/tests/vm/Rubric.functionality:14:4	page-merge-mm
src/tests/vm/Rubric.functionality:15:4	page-merge-stk
src/tests/vm/Rubric.functionality:17:- Test "mmap" system call.
src/tests/vm/Rubric.functionality:18:2	mmap-read
src/tests/vm/Rubric.functionality:19:2	mmap-write
src/tests/vm/Rubric.functionality:20:2	mmap-shuffle
src/tests/vm/Rubric.functionality:22:2	mmap-twice
src/tests/vm/Rubric.functionality:24:2	mmap-unmap
src/tests/vm/Rubric.functionality:25:1	mmap-exit
src/tests/vm/Rubric.functionality:27:3	mmap-clean
src/tests/vm/Rubric.functionality:29:2	mmap-close
src/tests/vm/Rubric.functionality:30:2	mmap-remove
src/tests/vm/mmap-remove.ck:1:# -*- perl -*-
src/tests/vm/mmap-remove.ck:6:(mmap-remove) begin
src/tests/vm/mmap-remove.ck:7:(mmap-remove) open "sample.txt"
src/tests/vm/mmap-remove.ck:8:(mmap-remove) mmap "sample.txt"
src/tests/vm/mmap-remove.ck:9:(mmap-remove) remove "sample.txt"
src/tests/vm/mmap-remove.ck:10:(mmap-remove) try to open "sample.txt"
src/tests/vm/mmap-remove.ck:11:(mmap-remove) create "another"
src/tests/vm/mmap-remove.ck:12:(mmap-remove) end
src/tests/vm/mmap-inherit.c:1:/* Maps a file into memory and runs child-inherit to verify that
src/tests/vm/mmap-inherit.c:24:  CHECK ((child = exec ("child-inherit")) != -1, "exec \"child-inherit\"");
src/tests/vm/mmap-inherit.c:26:  CHECK (wait (child) == -1, "wait for child (should return -1)");
src/tests/vm/pt-grow-pusha.ck:1:# -*- perl -*-
src/tests/vm/pt-grow-pusha.ck:6:(pt-grow-pusha) begin
src/tests/vm/pt-grow-pusha.ck:7:(pt-grow-pusha) end
src/tests/vm/mmap-exit.c:1:/* Executes child-mm-wrt and verifies that the writes that should
src/tests/vm/mmap-exit.c:16:  CHECK ((child = exec ("child-mm-wrt")) != -1, "exec \"child-mm-wrt\"");
src/tests/vm/mmap-close.ck:1:# -*- perl -*-
src/tests/vm/mmap-close.ck:6:(mmap-close) begin
src/tests/vm/mmap-close.ck:7:(mmap-close) open "sample.txt"
src/tests/vm/mmap-close.ck:8:(mmap-close) mmap "sample.txt"
src/tests/vm/mmap-close.ck:9:(mmap-close) end
src/tests/vm/page-parallel.c:1:/* Runs 4 child-linear processes at once. */
src/tests/vm/page-parallel.c:16:    CHECK ((children[i] = exec ("child-linear")) != -1,
src/tests/vm/page-parallel.c:17:           "exec \"child-linear\"");
src/tests/vm/pt-bad-addr.ck:1:# -*- perl -*-
src/tests/vm/pt-bad-addr.ck:7:check_process_death ('pt-bad-addr');
src/tests/vm/mmap-over-data.ck:1:# -*- perl -*-
src/tests/vm/mmap-over-data.ck:6:(mmap-over-data) begin
src/tests/vm/mmap-over-data.ck:7:(mmap-over-data) open "sample.txt"
src/tests/vm/mmap-over-data.ck:8:(mmap-over-data) try to mmap over data segment
src/tests/vm/mmap-over-data.ck:9:(mmap-over-data) end
src/tests/vm/mmap-over-stk.ck:1:# -*- perl -*-
src/tests/vm/mmap-over-stk.ck:6:(mmap-over-stk) begin
src/tests/vm/mmap-over-stk.ck:7:(mmap-over-stk) open "sample.txt"
src/tests/vm/mmap-over-stk.ck:8:(mmap-over-stk) try to mmap over stack segment
src/tests/vm/mmap-over-stk.ck:9:(mmap-over-stk) end
src/tests/vm/process_death.pm:1:# -*- perl -*-
src/tests/vm/process_death.pm:15:    fail "Output missing '$proc_name: exit(-1)' message.\n"
src/tests/vm/process_death.pm:16:      if !grep ("$proc_name: exit(-1)" eq $_, @output);
src/tests/vm/page-shuffle.ck:1:# -*- perl -*-
src/tests/vm/page-shuffle.ck:17:    for my $i (0...128 * 1024 - 1) {
src/tests/vm/page-shuffle.ck:30:(page-shuffle) begin
src/tests/vm/page-shuffle.ck:31:(page-shuffle) init: cksum=$init
src/tests/vm/page-shuffle.ck:32:(page-shuffle) shuffle 0: cksum=$shuffle[0]
src/tests/vm/page-shuffle.ck:33:(page-shuffle) shuffle 1: cksum=$shuffle[1]
src/tests/vm/page-shuffle.ck:34:(page-shuffle) shuffle 2: cksum=$shuffle[2]
src/tests/vm/page-shuffle.ck:35:(page-shuffle) shuffle 3: cksum=$shuffle[3]
src/tests/vm/page-shuffle.ck:36:(page-shuffle) shuffle 4: cksum=$shuffle[4]
src/tests/vm/page-shuffle.ck:37:(page-shuffle) shuffle 5: cksum=$shuffle[5]
src/tests/vm/page-shuffle.ck:38:(page-shuffle) shuffle 6: cksum=$shuffle[6]
src/tests/vm/page-shuffle.ck:39:(page-shuffle) shuffle 7: cksum=$shuffle[7]
src/tests/vm/page-shuffle.ck:40:(page-shuffle) shuffle 8: cksum=$shuffle[8]
src/tests/vm/page-shuffle.ck:41:(page-shuffle) shuffle 9: cksum=$shuffle[9]
src/tests/vm/page-shuffle.ck:42:(page-shuffle) end
src/tests/vm/sample.inc:7:  "trouble to figure out if the object is carcdr-able anyway, we figured\n"
src/tests/vm/sample.inc:9:  "code shows how to destructure a cons (SOME-CONS) into its two slots\n"
src/tests/vm/sample.inc:10:  "(THE-CAR and THE-CDR):\n"
src/tests/vm/sample.inc:12:  "        (MULTIPLE-VALUE-BIND (THE-CAR THE-CDR) (CAR SOME-CONS) ...)\n"
src/tests/vm/sample.inc:15:  "the object.  In a related change, the functions MAKE-ARRAY and CONS\n"
src/tests/vm/child-qsort-mm.c:2:   a multi-pass divide and conquer algorithm.  */
src/tests/vm/child-qsort-mm.c:10:const char *test_name = "child-qsort-mm";
src/tests/vm/Rubric.robustness:2:- Test robustness of page table support.
src/tests/vm/Rubric.robustness:3:2	pt-bad-addr
src/tests/vm/Rubric.robustness:4:3	pt-bad-read
src/tests/vm/Rubric.robustness:5:2	pt-write-code
src/tests/vm/Rubric.robustness:6:3	pt-write-code2
src/tests/vm/Rubric.robustness:7:4	pt-grow-bad
src/tests/vm/Rubric.robustness:9:- Test robustness of "mmap" system call.
src/tests/vm/Rubric.robustness:10:1	mmap-bad-fd
src/tests/vm/Rubric.robustness:11:1	mmap-inherit
src/tests/vm/Rubric.robustness:12:1	mmap-null
src/tests/vm/Rubric.robustness:13:1	mmap-zero
src/tests/vm/Rubric.robustness:15:2	mmap-misalign
src/tests/vm/Rubric.robustness:17:2	mmap-over-code
src/tests/vm/Rubric.robustness:18:2	mmap-over-data
src/tests/vm/Rubric.robustness:19:2	mmap-over-stk
src/tests/vm/Rubric.robustness:20:2	mmap-overlap
src/tests/vm/mmap-overlap.ck:1:# -*- perl -*-
src/tests/vm/mmap-overlap.ck:6:(mmap-overlap) begin
src/tests/vm/mmap-overlap.ck:7:(mmap-overlap) open "zeros" once
src/tests/vm/mmap-overlap.ck:8:(mmap-overlap) mmap "zeros"
src/tests/vm/mmap-overlap.ck:9:(mmap-overlap) open "zeros" again
src/tests/vm/mmap-overlap.ck:10:(mmap-overlap) try to mmap "zeros" again
src/tests/vm/mmap-overlap.ck:11:(mmap-overlap) end
src/tests/vm/mmap-twice.ck:1:# -*- perl -*-
src/tests/vm/mmap-twice.ck:6:(mmap-twice) begin
src/tests/vm/mmap-twice.ck:7:(mmap-twice) open "sample.txt" #0
src/tests/vm/mmap-twice.ck:8:(mmap-twice) mmap "sample.txt" #0 at 0x10000000
src/tests/vm/mmap-twice.ck:9:(mmap-twice) open "sample.txt" #1
src/tests/vm/mmap-twice.ck:10:(mmap-twice) mmap "sample.txt" #1 at 0x20000000
src/tests/vm/mmap-twice.ck:11:(mmap-twice) compare mmap'd file 0 against data
src/tests/vm/mmap-twice.ck:12:(mmap-twice) compare mmap'd file 1 against data
src/tests/vm/mmap-twice.ck:13:(mmap-twice) end
src/tests/vm/page-merge-seq.ck:1:# -*- perl -*-
src/tests/vm/page-merge-seq.ck:6:(page-merge-seq) begin
src/tests/vm/page-merge-seq.ck:7:(page-merge-seq) init
src/tests/vm/page-merge-seq.ck:8:(page-merge-seq) sort chunk 0
src/tests/vm/page-merge-seq.ck:9:(page-merge-seq) sort chunk 1
src/tests/vm/page-merge-seq.ck:10:(page-merge-seq) sort chunk 2
src/tests/vm/page-merge-seq.ck:11:(page-merge-seq) sort chunk 3
src/tests/vm/page-merge-seq.ck:12:(page-merge-seq) sort chunk 4
src/tests/vm/page-merge-seq.ck:13:(page-merge-seq) sort chunk 5
src/tests/vm/page-merge-seq.ck:14:(page-merge-seq) sort chunk 6
src/tests/vm/page-merge-seq.ck:15:(page-merge-seq) sort chunk 7
src/tests/vm/page-merge-seq.ck:16:(page-merge-seq) sort chunk 8
src/tests/vm/page-merge-seq.ck:17:(page-merge-seq) sort chunk 9
src/tests/vm/page-merge-seq.ck:18:(page-merge-seq) sort chunk 10
src/tests/vm/page-merge-seq.ck:19:(page-merge-seq) sort chunk 11
src/tests/vm/page-merge-seq.ck:20:(page-merge-seq) sort chunk 12
src/tests/vm/page-merge-seq.ck:21:(page-merge-seq) sort chunk 13
src/tests/vm/page-merge-seq.ck:22:(page-merge-seq) sort chunk 14
src/tests/vm/page-merge-seq.ck:23:(page-merge-seq) sort chunk 15
src/tests/vm/page-merge-seq.ck:24:(page-merge-seq) merge
src/tests/vm/page-merge-seq.ck:25:(page-merge-seq) verify
src/tests/vm/page-merge-seq.ck:26:(page-merge-seq) success, buf_idx=1,032,192
src/tests/vm/page-merge-seq.ck:27:(page-merge-seq) end
src/tests/vm/pt-bad-read.c:2:   The process must be terminated with -1 exit code. */
src/tests/vm/pt-bad-read.c:14:  read (handle, (char *) &handle - 4096, 1);
src/tests/vm/child-qsort.c:2:   it, using quick sort, a multi-pass divide and conquer
src/tests/vm/child-qsort.c:4:   in-place. */
src/tests/vm/child-qsort.c:12:const char *test_name = "child-qsort";
src/tests/vm/mmap-bad-fd.c:3:   exit code -1. */
src/tests/vm/mmap-clean.ck:1:# -*- perl -*-
src/tests/vm/mmap-clean.ck:6:(mmap-clean) begin
src/tests/vm/mmap-clean.ck:7:(mmap-clean) open "sample.txt"
src/tests/vm/mmap-clean.ck:8:(mmap-clean) mmap "sample.txt"
src/tests/vm/mmap-clean.ck:9:(mmap-clean) write "sample.txt"
src/tests/vm/mmap-clean.ck:10:(mmap-clean) munmap "sample.txt"
src/tests/vm/mmap-clean.ck:11:(mmap-clean) seek "sample.txt"
src/tests/vm/mmap-clean.ck:12:(mmap-clean) read "sample.txt"
src/tests/vm/mmap-clean.ck:13:(mmap-clean) file change was retained after munmap
src/tests/vm/mmap-clean.ck:14:(mmap-clean) end
src/tests/vm/child-inherit.c:1:/* Child process for mmap-inherit test.
src/tests/vm/child-inherit.c:3:   The process must be terminated with -1 exit code. */
src/tests/vm/mmap-read.ck:1:# -*- perl -*-
src/tests/vm/mmap-read.ck:6:(mmap-read) begin
src/tests/vm/mmap-read.ck:7:(mmap-read) open "sample.txt"
src/tests/vm/mmap-read.ck:8:(mmap-read) mmap "sample.txt"
src/tests/vm/mmap-read.ck:9:(mmap-read) end
src/tests/vm/qsort.c:16:   SIZE - LEFT_SIZE elements all greater than or equal to
src/tests/vm/qsort.c:44:/* Partitions ARRAY in-place in an initial run of bytes all less
src/tests/vm/qsort.c:70:      left_size--;
src/tests/vm/qsort.c:76:          last--;
src/tests/vm/qsort.c:86:            left_size--;
src/tests/vm/qsort.c:105:    if (buf[i - 1] > buf[i])
src/tests/vm/qsort.c:112:   the quick-sort algorithm. */
src/tests/vm/qsort.c:123:      size_t right_size = size - left_size;
src/tests/vm/page-merge-par.c:2:#include "tests/vm/parallel-merge.h"
src/tests/vm/page-merge-par.c:7:  parallel_merge ("child-sort", 123);
src/tests/vm/mmap-zero.ck:1:# -*- perl -*-
src/tests/vm/mmap-zero.ck:6:(mmap-zero) begin
src/tests/vm/mmap-zero.ck:7:(mmap-zero) create empty file "empty"
src/tests/vm/mmap-zero.ck:8:(mmap-zero) open "empty"
src/tests/vm/mmap-zero.ck:9:(mmap-zero) mmap "empty"
src/tests/vm/mmap-zero.ck:10:mmap-zero: exit(-1)
src/tests/vm/page-merge-stk.c:2:#include "tests/vm/parallel-merge.h"
src/tests/vm/page-merge-stk.c:7:  parallel_merge ("child-qsort", 72);
src/tests/vm/page-merge-mm.ck:1:# -*- perl -*-
src/tests/vm/page-merge-mm.ck:6:(page-merge-mm) begin
src/tests/vm/page-merge-mm.ck:7:(page-merge-mm) init
src/tests/vm/page-merge-mm.ck:8:(page-merge-mm) sort chunk 0
src/tests/vm/page-merge-mm.ck:9:(page-merge-mm) sort chunk 1
src/tests/vm/page-merge-mm.ck:10:(page-merge-mm) sort chunk 2
src/tests/vm/page-merge-mm.ck:11:(page-merge-mm) sort chunk 3
src/tests/vm/page-merge-mm.ck:12:(page-merge-mm) sort chunk 4
src/tests/vm/page-merge-mm.ck:13:(page-merge-mm) sort chunk 5
src/tests/vm/page-merge-mm.ck:14:(page-merge-mm) sort chunk 6
src/tests/vm/page-merge-mm.ck:15:(page-merge-mm) sort chunk 7
src/tests/vm/page-merge-mm.ck:16:(page-merge-mm) wait for child 0
src/tests/vm/page-merge-mm.ck:17:(page-merge-mm) wait for child 1
src/tests/vm/page-merge-mm.ck:18:(page-merge-mm) wait for child 2
src/tests/vm/page-merge-mm.ck:19:(page-merge-mm) wait for child 3
src/tests/vm/page-merge-mm.ck:20:(page-merge-mm) wait for child 4
src/tests/vm/page-merge-mm.ck:21:(page-merge-mm) wait for child 5
src/tests/vm/page-merge-mm.ck:22:(page-merge-mm) wait for child 6
src/tests/vm/page-merge-mm.ck:23:(page-merge-mm) wait for child 7
src/tests/vm/page-merge-mm.ck:24:(page-merge-mm) merge
src/tests/vm/page-merge-mm.ck:25:(page-merge-mm) verify
src/tests/vm/page-merge-mm.ck:26:(page-merge-mm) success, buf_idx=1,048,576
src/tests/vm/page-merge-mm.ck:27:(page-merge-mm) end
src/tests/vm/pt-big-stk-obj.ck:1:# -*- perl -*-
src/tests/vm/pt-big-stk-obj.ck:6:(pt-big-stk-obj) begin
src/tests/vm/pt-big-stk-obj.ck:7:(pt-big-stk-obj) cksum: 3256410166
src/tests/vm/pt-big-stk-obj.ck:8:(pt-big-stk-obj) end
src/tests/vm/pt-grow-bad.ck:1:# -*- perl -*-
src/tests/vm/pt-grow-bad.ck:6:(pt-grow-bad) begin
src/tests/vm/pt-grow-bad.ck:7:pt-grow-bad: exit(-1)
src/tests/vm/parallel-merge.h:6:#endif /* tests/vm/parallel-merge.h */
src/tests/vm/page-merge-par.ck:1:# -*- perl -*-
src/tests/vm/page-merge-par.ck:6:(page-merge-par) begin
src/tests/vm/page-merge-par.ck:7:(page-merge-par) init
src/tests/vm/page-merge-par.ck:8:(page-merge-par) sort chunk 0
src/tests/vm/page-merge-par.ck:9:(page-merge-par) sort chunk 1
src/tests/vm/page-merge-par.ck:10:(page-merge-par) sort chunk 2
src/tests/vm/page-merge-par.ck:11:(page-merge-par) sort chunk 3
src/tests/vm/page-merge-par.ck:12:(page-merge-par) sort chunk 4
src/tests/vm/page-merge-par.ck:13:(page-merge-par) sort chunk 5
src/tests/vm/page-merge-par.ck:14:(page-merge-par) sort chunk 6
src/tests/vm/page-merge-par.ck:15:(page-merge-par) sort chunk 7
src/tests/vm/page-merge-par.ck:16:(page-merge-par) wait for child 0
src/tests/vm/page-merge-par.ck:17:(page-merge-par) wait for child 1
src/tests/vm/page-merge-par.ck:18:(page-merge-par) wait for child 2
src/tests/vm/page-merge-par.ck:19:(page-merge-par) wait for child 3
src/tests/vm/page-merge-par.ck:20:(page-merge-par) wait for child 4
src/tests/vm/page-merge-par.ck:21:(page-merge-par) wait for child 5
src/tests/vm/page-merge-par.ck:22:(page-merge-par) wait for child 6
src/tests/vm/page-merge-par.ck:23:(page-merge-par) wait for child 7
src/tests/vm/page-merge-par.ck:24:(page-merge-par) merge
src/tests/vm/page-merge-par.ck:25:(page-merge-par) verify
src/tests/vm/page-merge-par.ck:26:(page-merge-par) success, buf_idx=1,048,576
src/tests/vm/page-merge-par.ck:27:(page-merge-par) end
src/tests/vm/pt-bad-addr.c:2:   The process must be terminated with -1 exit code. */
src/tests/vm/mmap-remove.c:25:  CHECK (open ("sample.txt") == -1, "try to open \"sample.txt\"");
src/tests/vm/child-linear.c:1:/* Child process of page-parallel.
src/tests/vm/child-linear.c:10:const char *test_name = "child-linear";
src/tests/vm/child-linear.c:18:  const char *key = argv[argc - 1];
src/tests/vm/pt-write-code.c:2:   The process must be terminated with -1 exit code. */
src/tests/vm/mmap-write.ck:1:# -*- perl -*-
src/tests/vm/mmap-write.ck:6:(mmap-write) begin
src/tests/vm/mmap-write.ck:7:(mmap-write) create "sample.txt"
src/tests/vm/mmap-write.ck:8:(mmap-write) open "sample.txt"
src/tests/vm/mmap-write.ck:9:(mmap-write) mmap "sample.txt"
src/tests/vm/mmap-write.ck:10:(mmap-write) compare read data against written data
src/tests/vm/mmap-write.ck:11:(mmap-write) end
src/tests/vm/parallel-merge.c:6:#include "tests/vm/parallel-merge.h"
src/tests/vm/parallel-merge.c:62:      CHECK ((children[i] = exec (cmd)) != -1, "exec \"%s\"", cmd);
src/tests/vm/parallel-merge.c:114:      if ((++mp[min] - buf1) % CHUNK_SIZE == 0) 
src/tests/vm/parallel-merge.c:115:        mp[min] = mp[--mp_left];
src/tests/vm/parallel-merge.c:131:      while (histogram[hist_idx]-- > 0) 
src/tests/vm/child-sort.c:2:   it, using counting sort, a single-pass algorithm.  The sorted
src/tests/vm/child-sort.c:3:   data is written back to the same file in-place. */
src/tests/vm/child-sort.c:10:const char *test_name = "child-sort";
src/tests/vm/child-sort.c:34:      while (j-- > 0)
src/tests/vm/mmap-over-code.ck:1:# -*- perl -*-
src/tests/vm/mmap-over-code.ck:6:(mmap-over-code) begin
src/tests/vm/mmap-over-code.ck:7:(mmap-over-code) open "sample.txt"
src/tests/vm/mmap-over-code.ck:8:(mmap-over-code) try to mmap over code segment
src/tests/vm/mmap-over-code.ck:9:(mmap-over-code) end
src/tests/vm/mmap-inherit.ck:1:# -*- perl -*-
src/tests/vm/mmap-inherit.ck:6:(mmap-inherit) begin
src/tests/vm/mmap-inherit.ck:7:(mmap-inherit) open "sample.txt"
src/tests/vm/mmap-inherit.ck:8:(mmap-inherit) mmap "sample.txt"
src/tests/vm/mmap-inherit.ck:9:(mmap-inherit) exec "child-inherit"
src/tests/vm/mmap-inherit.ck:10:(child-inherit) begin
src/tests/vm/mmap-inherit.ck:11:child-inherit: exit(-1)
src/tests/vm/mmap-inherit.ck:12:(mmap-inherit) checking that mmap'd file still has same data
src/tests/vm/mmap-inherit.ck:13:(mmap-inherit) end
src/tests/vm/mmap-inherit.ck:14:mmap-inherit: exit(0)
src/tests/vm/mmap-misalign.ck:1:# -*- perl -*-
src/tests/vm/mmap-misalign.ck:6:(mmap-misalign) begin
src/tests/vm/mmap-misalign.ck:7:(mmap-misalign) open "sample.txt"
src/tests/vm/mmap-misalign.ck:8:(mmap-misalign) try to mmap at misaligned address
src/tests/vm/mmap-misalign.ck:9:(mmap-misalign) end
src/tests/vm/sample.txt:6:trouble to figure out if the object is carcdr-able anyway, we figured
src/tests/vm/sample.txt:8:code shows how to destructure a cons (SOME-CONS) into its two slots
src/tests/vm/sample.txt:9:(THE-CAR and THE-CDR):
src/tests/vm/sample.txt:11:        (MULTIPLE-VALUE-BIND (THE-CAR THE-CDR) (CAR SOME-CONS) ...)
src/tests/vm/sample.txt:14:the object.  In a related change, the functions MAKE-ARRAY and CONS
src/tests/vm/mmap-exit.ck:1:# -*- perl -*-
src/tests/vm/mmap-exit.ck:6:(mmap-exit) begin
src/tests/vm/mmap-exit.ck:7:(child-mm-wrt) begin
src/tests/vm/mmap-exit.ck:8:(child-mm-wrt) create "sample.txt"
src/tests/vm/mmap-exit.ck:9:(child-mm-wrt) open "sample.txt"
src/tests/vm/mmap-exit.ck:10:(child-mm-wrt) mmap "sample.txt"
src/tests/vm/mmap-exit.ck:11:(child-mm-wrt) end
src/tests/vm/mmap-exit.ck:12:(mmap-exit) open "sample.txt" for verification
src/tests/vm/mmap-exit.ck:13:(mmap-exit) verified contents of "sample.txt"
src/tests/vm/mmap-exit.ck:14:(mmap-exit) close "sample.txt"
src/tests/vm/mmap-exit.ck:15:(mmap-exit) end
src/tests/vm/page-linear.ck:1:# -*- perl -*-
src/tests/vm/page-linear.ck:6:(page-linear) begin
src/tests/vm/page-linear.ck:7:(page-linear) initialize
src/tests/vm/page-linear.ck:8:(page-linear) read pass
src/tests/vm/page-linear.ck:9:(page-linear) read/modify/write pass one
src/tests/vm/page-linear.ck:10:(page-linear) read/modify/write pass two
src/tests/vm/page-linear.ck:11:(page-linear) read pass
src/tests/vm/page-linear.ck:12:(page-linear) end
src/tests/vm/child-mm-wrt.c:1:/* Child process of mmap-exit.
src/tests/vm/page-parallel.ck:1:# -*- perl -*-
src/tests/vm/page-parallel.ck:6:(page-parallel) begin
src/tests/vm/page-parallel.ck:7:(page-parallel) exec "child-linear"
src/tests/vm/page-parallel.ck:8:(page-parallel) exec "child-linear"
src/tests/vm/page-parallel.ck:9:(page-parallel) exec "child-linear"
src/tests/vm/page-parallel.ck:10:(page-parallel) exec "child-linear"
src/tests/vm/page-parallel.ck:11:(page-parallel) wait for child 0
src/tests/vm/page-parallel.ck:12:(page-parallel) wait for child 1
src/tests/vm/page-parallel.ck:13:(page-parallel) wait for child 2
src/tests/vm/page-parallel.ck:14:(page-parallel) wait for child 3
src/tests/vm/page-parallel.ck:15:(page-parallel) end
src/tests/vm/pt-write-code-2.c:2:   The process must be terminated with -1 exit code. */
src/tests/vm/Make.tests:1:# -*- makefile -*-
src/tests/vm/Make.tests:3:tests/vm_TESTS = $(addprefix tests/vm/,pt-grow-stack pt-grow-pusha	\
src/tests/vm/Make.tests:4:pt-grow-bad pt-big-stk-obj pt-bad-addr pt-bad-read pt-write-code	\
src/tests/vm/Make.tests:5:pt-write-code2 pt-grow-stk-sc page-linear page-parallel page-merge-seq	\
src/tests/vm/Make.tests:6:page-merge-par page-merge-stk page-merge-mm page-shuffle mmap-read	\
src/tests/vm/Make.tests:7:mmap-close mmap-unmap mmap-overlap mmap-twice mmap-write mmap-exit	\
src/tests/vm/Make.tests:8:mmap-shuffle mmap-bad-fd mmap-clean mmap-inherit mmap-misalign		\
src/tests/vm/Make.tests:9:mmap-null mmap-over-code mmap-over-data mmap-over-stk mmap-remove	\
src/tests/vm/Make.tests:10:mmap-zero)
src/tests/vm/Make.tests:12:tests/vm_PROGS = $(tests/vm_TESTS) $(addprefix tests/vm/,child-linear	\
src/tests/vm/Make.tests:13:child-sort child-qsort child-qsort-mm child-mm-wrt child-inherit)
src/tests/vm/Make.tests:15:tests/vm/pt-grow-stack_SRC = tests/vm/pt-grow-stack.c tests/arc4.c	\
src/tests/vm/Make.tests:17:tests/vm/pt-grow-pusha_SRC = tests/vm/pt-grow-pusha.c tests/lib.c	\
src/tests/vm/Make.tests:19:tests/vm/pt-grow-bad_SRC = tests/vm/pt-grow-bad.c tests/lib.c tests/main.c
src/tests/vm/Make.tests:20:tests/vm/pt-big-stk-obj_SRC = tests/vm/pt-big-stk-obj.c tests/arc4.c	\
src/tests/vm/Make.tests:22:tests/vm/pt-bad-addr_SRC = tests/vm/pt-bad-addr.c tests/lib.c tests/main.c
src/tests/vm/Make.tests:23:tests/vm/pt-bad-read_SRC = tests/vm/pt-bad-read.c tests/lib.c tests/main.c
src/tests/vm/Make.tests:24:tests/vm/pt-write-code_SRC = tests/vm/pt-write-code.c tests/lib.c tests/main.c
src/tests/vm/Make.tests:25:tests/vm/pt-write-code2_SRC = tests/vm/pt-write-code-2.c tests/lib.c tests/main.c
src/tests/vm/Make.tests:26:tests/vm/pt-grow-stk-sc_SRC = tests/vm/pt-grow-stk-sc.c tests/lib.c tests/main.c
src/tests/vm/Make.tests:27:tests/vm/page-linear_SRC = tests/vm/page-linear.c tests/arc4.c	\
src/tests/vm/Make.tests:29:tests/vm/page-parallel_SRC = tests/vm/page-parallel.c tests/lib.c tests/main.c
src/tests/vm/Make.tests:30:tests/vm/page-merge-seq_SRC = tests/vm/page-merge-seq.c tests/arc4.c	\
src/tests/vm/Make.tests:32:tests/vm/page-merge-par_SRC = tests/vm/page-merge-par.c \
src/tests/vm/Make.tests:33:tests/vm/parallel-merge.c tests/arc4.c tests/lib.c tests/main.c
src/tests/vm/Make.tests:34:tests/vm/page-merge-stk_SRC = tests/vm/page-merge-stk.c \
src/tests/vm/Make.tests:35:tests/vm/parallel-merge.c tests/arc4.c tests/lib.c tests/main.c
src/tests/vm/Make.tests:36:tests/vm/page-merge-mm_SRC = tests/vm/page-merge-mm.c \
src/tests/vm/Make.tests:37:tests/vm/parallel-merge.c tests/arc4.c tests/lib.c tests/main.c
src/tests/vm/Make.tests:38:tests/vm/page-shuffle_SRC = tests/vm/page-shuffle.c tests/arc4.c	\
src/tests/vm/Make.tests:40:tests/vm/mmap-read_SRC = tests/vm/mmap-read.c tests/lib.c tests/main.c
src/tests/vm/Make.tests:41:tests/vm/mmap-close_SRC = tests/vm/mmap-close.c tests/lib.c tests/main.c
src/tests/vm/Make.tests:42:tests/vm/mmap-unmap_SRC = tests/vm/mmap-unmap.c tests/lib.c tests/main.c
src/tests/vm/Make.tests:43:tests/vm/mmap-overlap_SRC = tests/vm/mmap-overlap.c tests/lib.c tests/main.c
src/tests/vm/Make.tests:44:tests/vm/mmap-twice_SRC = tests/vm/mmap-twice.c tests/lib.c tests/main.c
src/tests/vm/Make.tests:45:tests/vm/mmap-write_SRC = tests/vm/mmap-write.c tests/lib.c tests/main.c
src/tests/vm/Make.tests:46:tests/vm/mmap-exit_SRC = tests/vm/mmap-exit.c tests/lib.c tests/main.c
src/tests/vm/Make.tests:47:tests/vm/mmap-shuffle_SRC = tests/vm/mmap-shuffle.c tests/arc4.c	\
src/tests/vm/Make.tests:49:tests/vm/mmap-bad-fd_SRC = tests/vm/mmap-bad-fd.c tests/lib.c tests/main.c
src/tests/vm/Make.tests:50:tests/vm/mmap-clean_SRC = tests/vm/mmap-clean.c tests/lib.c tests/main.c
src/tests/vm/Make.tests:51:tests/vm/mmap-inherit_SRC = tests/vm/mmap-inherit.c tests/lib.c tests/main.c
src/tests/vm/Make.tests:52:tests/vm/mmap-misalign_SRC = tests/vm/mmap-misalign.c tests/lib.c	\
src/tests/vm/Make.tests:54:tests/vm/mmap-null_SRC = tests/vm/mmap-null.c tests/lib.c tests/main.c
src/tests/vm/Make.tests:55:tests/vm/mmap-over-code_SRC = tests/vm/mmap-over-code.c tests/lib.c	\
src/tests/vm/Make.tests:57:tests/vm/mmap-over-data_SRC = tests/vm/mmap-over-data.c tests/lib.c	\
src/tests/vm/Make.tests:59:tests/vm/mmap-over-stk_SRC = tests/vm/mmap-over-stk.c tests/lib.c tests/main.c
src/tests/vm/Make.tests:60:tests/vm/mmap-remove_SRC = tests/vm/mmap-remove.c tests/lib.c tests/main.c
src/tests/vm/Make.tests:61:tests/vm/mmap-zero_SRC = tests/vm/mmap-zero.c tests/lib.c tests/main.c
src/tests/vm/Make.tests:63:tests/vm/child-linear_SRC = tests/vm/child-linear.c tests/arc4.c tests/lib.c
src/tests/vm/Make.tests:64:tests/vm/child-qsort_SRC = tests/vm/child-qsort.c tests/vm/qsort.c tests/lib.c
src/tests/vm/Make.tests:65:tests/vm/child-qsort-mm_SRC = tests/vm/child-qsort-mm.c tests/vm/qsort.c \
src/tests/vm/Make.tests:67:tests/vm/child-sort_SRC = tests/vm/child-sort.c tests/lib.c
src/tests/vm/Make.tests:68:tests/vm/child-mm-wrt_SRC = tests/vm/child-mm-wrt.c tests/lib.c tests/main.c
src/tests/vm/Make.tests:69:tests/vm/child-inherit_SRC = tests/vm/child-inherit.c tests/lib.c tests/main.c
src/tests/vm/Make.tests:71:tests/vm/pt-bad-read_PUTFILES = tests/vm/sample.txt
src/tests/vm/Make.tests:72:tests/vm/pt-write-code2_PUTFILES = tests/vm/sample.txt
src/tests/vm/Make.tests:73:tests/vm/mmap-close_PUTFILES = tests/vm/sample.txt
src/tests/vm/Make.tests:74:tests/vm/mmap-read_PUTFILES = tests/vm/sample.txt
src/tests/vm/Make.tests:75:tests/vm/mmap-unmap_PUTFILES = tests/vm/sample.txt
src/tests/vm/Make.tests:76:tests/vm/mmap-twice_PUTFILES = tests/vm/sample.txt
src/tests/vm/Make.tests:77:tests/vm/mmap-overlap_PUTFILES = tests/vm/zeros
src/tests/vm/Make.tests:78:tests/vm/mmap-exit_PUTFILES = tests/vm/child-mm-wrt
src/tests/vm/Make.tests:79:tests/vm/page-parallel_PUTFILES = tests/vm/child-linear
src/tests/vm/Make.tests:80:tests/vm/page-merge-seq_PUTFILES = tests/vm/child-sort
src/tests/vm/Make.tests:81:tests/vm/page-merge-par_PUTFILES = tests/vm/child-sort
src/tests/vm/Make.tests:82:tests/vm/page-merge-stk_PUTFILES = tests/vm/child-qsort
src/tests/vm/Make.tests:83:tests/vm/page-merge-mm_PUTFILES = tests/vm/child-qsort-mm
src/tests/vm/Make.tests:84:tests/vm/mmap-clean_PUTFILES = tests/vm/sample.txt
src/tests/vm/Make.tests:85:tests/vm/mmap-inherit_PUTFILES = tests/vm/sample.txt tests/vm/child-inherit
src/tests/vm/Make.tests:86:tests/vm/mmap-misalign_PUTFILES = tests/vm/sample.txt
src/tests/vm/Make.tests:87:tests/vm/mmap-null_PUTFILES = tests/vm/sample.txt
src/tests/vm/Make.tests:88:tests/vm/mmap-over-code_PUTFILES = tests/vm/sample.txt
src/tests/vm/Make.tests:89:tests/vm/mmap-over-data_PUTFILES = tests/vm/sample.txt
src/tests/vm/Make.tests:90:tests/vm/mmap-over-stk_PUTFILES = tests/vm/sample.txt
src/tests/vm/Make.tests:91:tests/vm/mmap-remove_PUTFILES = tests/vm/sample.txt
src/tests/vm/Make.tests:93:tests/vm/page-linear.output: TIMEOUT = 300
src/tests/vm/Make.tests:94:tests/vm/page-shuffle.output: TIMEOUT = 600
src/tests/vm/Make.tests:95:tests/vm/mmap-shuffle.output: TIMEOUT = 600
src/tests/vm/Make.tests:96:tests/vm/page-merge-seq.output: TIMEOUT = 600
src/tests/vm/Make.tests:97:tests/vm/page-merge-par.output: TIMEOUT = 600
src/tests/vm/Make.tests:103:	rm -f tests/vm/zeros
src/tests/vm/mmap-unmap.ck:1:# -*- perl -*-
src/tests/vm/mmap-unmap.ck:7:check_process_death ('mmap-unmap');
src/tests/vm/mmap-null.ck:1:# -*- perl -*-
src/tests/vm/mmap-null.ck:6:(mmap-null) begin
src/tests/vm/mmap-null.ck:7:(mmap-null) open "sample.txt"
src/tests/vm/mmap-null.ck:8:(mmap-null) try to mmap at address 0
src/tests/vm/mmap-null.ck:9:(mmap-null) end
src/tests/vm/pt-grow-stk-sc.ck:1:# -*- perl -*-
src/tests/vm/pt-grow-stk-sc.ck:6:(pt-grow-stk-sc) begin
src/tests/vm/pt-grow-stk-sc.ck:7:(pt-grow-stk-sc) create "sample.txt"
src/tests/vm/pt-grow-stk-sc.ck:8:(pt-grow-stk-sc) open "sample.txt"
src/tests/vm/pt-grow-stk-sc.ck:9:(pt-grow-stk-sc) write "sample.txt"
src/tests/vm/pt-grow-stk-sc.ck:10:(pt-grow-stk-sc) 2nd open "sample.txt"
src/tests/vm/pt-grow-stk-sc.ck:11:(pt-grow-stk-sc) read "sample.txt"
src/tests/vm/pt-grow-stk-sc.ck:12:(pt-grow-stk-sc) compare written data against read data
src/tests/vm/pt-grow-stk-sc.ck:13:(pt-grow-stk-sc) end
src/tests/vm/mmap-clean.c:14:  static char buffer[sizeof sample - 1];
src/tests/vm/mmap-clean.c:44:                 strlen (sample) - strlen (overwrite))) 
src/tests/vm/pt-write-code.ck:1:# -*- perl -*-
src/tests/vm/pt-write-code.ck:7:check_process_death ('pt-write-code');
src/tests/vm/pt-write-code2.ck:1:# -*- perl -*-
src/tests/vm/pt-write-code2.ck:6:(pt-write-code2) begin
src/tests/vm/pt-write-code2.ck:7:(pt-write-code2) open "sample.txt"
src/tests/vm/pt-write-code2.ck:8:pt-write-code2: exit(-1)
src/tests/vm/pt-grow-stack.ck:1:# -*- perl -*-
src/tests/vm/pt-grow-stack.ck:6:(pt-grow-stack) begin
src/tests/vm/pt-grow-stack.ck:7:(pt-grow-stack) cksum: 3424492700
src/tests/vm/pt-grow-stack.ck:8:(pt-grow-stack) end
src/tests/make-grade:45:	push (@rubrics, "\t$_"), next if /^-/;
src/tests/make-grade:67:    push (@rubrics, "\t- Section summary.");
src/tests/make-grade:75:    push (@summary, sprintf ("%-45s %3d/%3d %5.1f%%/%5.1f%%",
src/tests/make-grade:85:  = "--------------------------------------------- --- --- ------ ------";
src/tests/make-grade:89:	 sprintf ("%-45s %3s %3s %6s %6s",
src/tests/make-grade:94:      sprintf ("%-45s %3s %3s %5.1f%%/%5.1f%%",
src/tests/make-grade:114:    push (@overall, "ALL TESTED PASSED -- PERFECT SCORE");
src/tests/make-grade:117:my (@divider) = ('', '- ' x 38, '');
src/tests/lib.h:16:   may include printf-style arguments.  Logs the message, then
src/tests/lib.h:22:     - SUCCESS must not have side effects that affect the
src/tests/lib.h:26:     - The message must not have side effects of its own, because
src/tests/tests.pm:17:if ($test =~ /^(.*)-persistence$/) {
src/tests/tests.pm:67:	my ($addrs) = $stack_line[0] =~ /Call stack:((?: 0x[0-9a-f]+)+)/;
src/tests/tests.pm:72:	  if grep (hex ($_) < 0xc0000000, split (' ', $addrs)) > 0 && -e $test;
src/tests/tests.pm:90:    if ($panic =~ /sec_no \< d-\>capacity/) {
src/tests/tests.pm:108:    # Most output lines are prefixed by (test-name).  Eliminate this
src/tests/tests.pm:119:    my ($reboots) = grep (/Pintos booting/, @output) - 1;
src/tests/tests.pm:146:	$end = $i - 1, last if $output[$i] =~ /^Execution of '.*' complete.$/;
src/tests/tests.pm:167:	@output = grep (!/^[a-zA-Z0-9-_]+: exit\(\-?\d+\)$/, @output);
src/tests/tests.pm:190:	my (@expected) = split ("\n", $expected->{$key});
src/tests/tests.pm:207:	my ($d) = Algorithm::Diff->new (\@expected, \@output);
src/tests/tests.pm:208:	while ($d->Next ()) {
src/tests/tests.pm:209:	    my ($ef, $el, $af, $al) = $d->Get (qw (min1 max1 min2 max2));
src/tests/tests.pm:210:	    if ($d->Same ()) {
src/tests/tests.pm:211:		push (@diff, map ("  $_\n", $d->Items (1)));
src/tests/tests.pm:213:		push (@diff, map ("- $_\n", $d->Items (1))) if $d->Items (1);
src/tests/tests.pm:214:		push (@diff, map ("+ $_\n", $d->Items (2))) if $d->Items (2);
src/tests/tests.pm:218:	$msg .= "Differences in `diff -u' format:\n";
src/tests/tests.pm:237:#	- $FILE: Name of a host file containing the expected contents.
src/tests/tests.pm:239:#	- [$FILE, $OFFSET, $LENGTH]: An excerpt of host file $FILE
src/tests/tests.pm:242:#	- [$CONTENTS]: The literal expected file contents, as a string.
src/tests/tests.pm:244:#       - {SUBDIR}: A subdirectory, in the same form described here,
src/tests/tests.pm:253:    @output = grep (!/^[a-zA-Z0-9-_]+: exit\(\d+\)$/, @output);
src/tests/tests.pm:258:    $test_base_name =~ s%-persistence$%%;
src/tests/tests.pm:259:    $expected_hier->{$test_base_name} = $prereq_tests[0];
src/tests/tests.pm:260:    $expected_hier->{'tar'} = 'tests/filesys/extended/tar';
src/tests/tests.pm:331:	$length = length ($value->[0]);
src/tests/tests.pm:333:	syswrite ($file, $value->[0]) == $length
src/tests/tests.pm:337:	$length = $value->[2];
src/tests/tests.pm:338:	open ($file, '<', $value->[0]) or die "$value->[0]: open: $!\n";
src/tests/tests.pm:339:	die "$value->[0]: file is smaller than expected\n"
src/tests/tests.pm:340:	  if -s $file < $value->[1] + $length;
src/tests/tests.pm:341:	sysseek ($file, $value->[1], SEEK_SET);
src/tests/tests.pm:393:	$a_size -= $a_len;
src/tests/tests.pm:394:	$b_size -= $b_len;
src/tests/tests.pm:416:	$end = $start + $size if $end - $start > $size;
src/tests/tests.pm:417:	my ($n) = $end - $start;
src/tests/tests.pm:423:	for my $i ($start...$end - 1) {
src/tests/tests.pm:424:	    printf "%02x", ord (substr ($data, $i - $start, 1));
src/tests/tests.pm:425:	    print $i == $per_line / 2 - 1 ? '-' : ' ';
src/tests/tests.pm:427:	print "   " x ($per_line - $end);
src/tests/tests.pm:432:	print "|", " " x $start, $esc_data, " " x ($per_line - $end), "|";
src/tests/tests.pm:453:	    print +file_size ($fs{$name}), "-byte file";
src/tests/tests.pm:473:	$fs{$name} = [$value, 0, -s _];
src/tests/tests.pm:495:    return @$value > 1 ? $value->[2] : length ($value->[0]);
src/tests/tests.pm:521:# Reads the ustar-format tar file in $ARCHIVE
src/tests/Make.tests:1:# -*- makefile -*-
src/tests/Make.tests:20:	rm -f $(OUTPUTS) $(ERRORS) $(RESULTS) 
src/tests/Make.tests:23:	$(SRCDIR)/tests/make-grade $(SRCDIR) $< $(GRADING_FILE) | tee $@
src/tests/Make.tests:27:	@COUNT="`egrep '^(pass|FAIL) ' $< | wc -l | sed 's/[ 	]//g;'`"; \
src/tests/Make.tests:28:	FAILURES="`egrep '^FAIL ' $< | wc -l | sed 's/[ 	]//g;'`"; \
src/tests/Make.tests:38:		if echo PASS | cmp -s $$d.result -; then	\
src/tests/Make.tests:54:TESTCMD = pintos -v -k -T $(TIMEOUT)
src/tests/Make.tests:58:TESTCMD += --fs-disk=$(FSDISK)
src/tests/Make.tests:59:TESTCMD += $(foreach file,$(PUTFILES),-p $(file) -a $(notdir $(file)))
src/tests/Make.tests:62:TESTCMD += --swap-disk=4
src/tests/Make.tests:64:TESTCMD += -- -q 
src/tests/Make.tests:67:TESTCMD += -f
src/tests/Make.tests:76:	perl -I$(SRCDIR) $< $* $@
src/tests/arc4.c:21:  s = arc4->s;
src/tests/arc4.c:22:  arc4->i = arc4->j = 0;
src/tests/arc4.c:41:  s = arc4->s;
src/tests/arc4.c:42:  i = arc4->i;
src/tests/arc4.c:43:  j = arc4->j;
src/tests/arc4.c:44:  while (size-- > 0)
src/tests/arc4.c:51:  arc4->i = i;
src/tests/arc4.c:52:  arc4->j = j;
src/examples/.cvsignore:6:hex-dump
src/examples/hex-dump.c:1:/* hex-dump.c
src/examples/shell.c:18:      printf ("--");
src/examples/shell.c:50:   null-terminated and will not end in a new-line character. */
src/examples/shell.c:71:        case ('U' - 'A') + 1:       /* Ctrl+U. */
src/examples/shell.c:78:          if (pos < line + size - 1) 
src/examples/shell.c:99:      (*pos)--;
src/examples/insult.c:23:  { "lame", "dried", "up", "par-broiled", "bloated", "half-baked", "spiteful",
src/examples/insult.c:26:"useless", "obnoxious", "low-budget", "assinine", "neurotic", "subhuman", "crochety",
src/examples/insult.c:27:"indescribable", "contemptible", "unspeakable", "sick", "lazy", "good-for-nothing",
src/examples/insult.c:28:"slutty", "mentally-deficient", "creepy", "sloppy", "dismal", "pompous", "pathetic",
src/examples/insult.c:41:"fly-covered", "moth-eaten", "decaying", "decomposed", "freeze-dried", "defective",
src/examples/insult.c:111:  { "a", "thousand", "three", "million", "ninty-nine", "nine-hundred,",
src/examples/insult.c:112:"ninty-nine", "forty-two", "a", "gazillion", "sixty-eight", "times", "thirty-three"
src/examples/insult.c:123:"titans", "a", "particularly", "vicious", "she-bear", "in", "the", "midst", "of", "her",
src/examples/insult.c:124:"menstrual", "cycle", "a", "pissed-off", "Jabberwock"
src/examples/insult.c:143:"4", "monkeys", "22", "wiener-dogs", "22", "rats", "22", "wolverines", "4", ",", "22",
src/examples/insult.c:144:"pit-fiends"
src/examples/insult.c:149:  { "frothing", "manic", "crazed", "plague-ridden", "disease-carrying",
src/examples/insult.c:150:"biting", "rabid", "blood-thirsty", "ravaging", "slavering"
src/examples/insult.c:170:"porto-pottie"
src/examples/insult.c:263:          "  -h:               this help message\n"
src/examples/insult.c:264:          "  -s <integer>:     set the random seed (default 4951)\n"
src/examples/insult.c:265:          "  -n <integer>:     choose number of insults (default 4)\n"
src/examples/insult.c:266:          "  -f <file>:        redirect output to <file>\n");
src/examples/insult.c:286:      if (strcmp (argv[1], "-h") == 0)
src/examples/insult.c:288:      else if (strcmp (argv[i], "-s") == 0)
src/examples/insult.c:291:	    usage (-1, "Can't have more than one seed");
src/examples/insult.c:293:	    usage (-1, "Missing value for -s");
src/examples/insult.c:296:      else if (strcmp (argv[i], "-n") == 0)
src/examples/insult.c:299:	    usage (-1, "Can't have more than one sentence option");
src/examples/insult.c:301:	    usage (-1, "Missing value for -n");
src/examples/insult.c:304:	    usage (-1, "Must have at least one sentence");
src/examples/insult.c:306:      else if (strcmp (argv[i], "-f") == 0)
src/examples/insult.c:309:	    usage (-1, "Can't have more than one output file");
src/examples/insult.c:311:	    usage (-1, "Missing value for -f");
src/examples/insult.c:326:        usage (-1, "Unrecognized flag");
src/examples/Makefile:6:PROGS = cat cmp cp echo halt hex-dump ls mcat mcp mkdir pwd rm shell \
src/examples/Makefile:15:hex-dump_SRC = hex-dump.c
src/examples/recursor.c:25:                "recursor %s %d %s", argv[1], atoi (argv[2]) - 1, argv[3]);
src/examples/pwd.c:46:   bytes of the DST_SIZE-byte buffer that starts at DST.
src/examples/pwd.c:59:      memcpy ((dst + dst_size) - *dst_len, prefix, prefix_len);
src/examples/pwd.c:66:/* Stores the current working directory, as a null-terminated
src/examples/pwd.c:96:      if ((namep - name) > MAX_LEVEL * 3)
src/examples/pwd.c:130:      if (!prepend (namep - 1, cwd, &cwd_len, cwd_size))
src/examples/pwd.c:141:         and null-terminate it. */
src/examples/pwd.c:142:      memmove (cwd, (cwd + cwd_size) - cwd_len, cwd_len);
src/examples/matmult.c:18: ------     --------
src/examples/matmult.c:56:  exit (C[DIM - 1][DIM - 1]);
src/examples/lineup.c:3:   Converts a file to uppercase in-place.
src/examples/lineup.c:38:      seek (handle, tell (handle) - n);
src/examples/bubsort.c:24:    array[i] = SORT_SIZE - i - 1;
src/examples/bubsort.c:27:  for (i = 0; i < SORT_SIZE - 1; i++)
src/examples/bubsort.c:28:    for (j = 0; j < SORT_SIZE - 1 - i; j++)
src/examples/ls.c:7:   By default, only the name of each file is printed.  If "-l" is
src/examples/ls.c:19:  if (dir_fd == -1) 
src/examples/ls.c:46:              if (entry_fd != -1)
src/examples/ls.c:51:                    printf ("%d-byte file", filesize (entry_fd));
src/examples/ls.c:73:  if (argc > 1 && !strcmp (argv[1], "-l")) 
src/examples/ls.c:77:      argc--;
src/devices/kbd.c:71:    {0x02, "1234567890-="},
src/devices/kbd.c:139:              c -= 0x40; 
src/devices/kbd.c:182:      for (key = shift_keys; key->scancode != 0; key++) 
src/devices/kbd.c:183:        if (key->scancode == code)
src/devices/kbd.c:185:            *key->state_var = !release;
src/devices/kbd.c:198:  for (; k->first_scancode != 0; k++)
src/devices/kbd.c:199:    if (scancode >= k->first_scancode
src/devices/kbd.c:200:        && scancode < k->first_scancode + strlen (k->chars)) 
src/devices/kbd.c:202:        *c = k->chars[scancode - k->first_scancode];
src/devices/intq.c:13:  lock_init (&q->lock);
src/devices/intq.c:14:  q->not_full = q->not_empty = NULL;
src/devices/intq.c:15:  q->head = q->tail = 0;
src/devices/intq.c:23:  return q->head == q->tail;
src/devices/intq.c:31:  return next (q->head) == q->tail;
src/devices/intq.c:47:      lock_acquire (&q->lock);
src/devices/intq.c:48:      wait (q, &q->not_empty);
src/devices/intq.c:49:      lock_release (&q->lock);
src/devices/intq.c:52:  byte = q->buf[q->tail];
src/devices/intq.c:53:  q->tail = next (q->tail);
src/devices/intq.c:54:  signal (q, &q->not_full);
src/devices/intq.c:69:      lock_acquire (&q->lock);
src/devices/intq.c:70:      wait (q, &q->not_full);
src/devices/intq.c:71:      lock_release (&q->lock);
src/devices/intq.c:74:  q->buf[q->head] = byte;
src/devices/intq.c:75:  q->head = next (q->head);
src/devices/intq.c:76:  signal (q, &q->not_empty);
src/devices/intq.c:93:  ASSERT ((waiter == &q->not_empty && intq_empty (q))
src/devices/intq.c:94:          || (waiter == &q->not_full && intq_full (q)));
src/devices/intq.c:108:  ASSERT ((waiter == &q->not_empty && !intq_empty (q))
src/devices/intq.c:109:          || (waiter == &q->not_full && !intq_full (q)));
src/devices/disk.c:12:   controller.  It attempts to comply to [ATA-3]. */
src/devices/disk.c:15:#define reg_data(CHANNEL) ((CHANNEL)->reg_base + 0)     /* Data. */
src/devices/disk.c:16:#define reg_error(CHANNEL) ((CHANNEL)->reg_base + 1)    /* Error. */
src/devices/disk.c:17:#define reg_nsect(CHANNEL) ((CHANNEL)->reg_base + 2)    /* Sector Count. */
src/devices/disk.c:18:#define reg_lbal(CHANNEL) ((CHANNEL)->reg_base + 3)     /* LBA 0:7. */
src/devices/disk.c:19:#define reg_lbam(CHANNEL) ((CHANNEL)->reg_base + 4)     /* LBA 15:8. */
src/devices/disk.c:20:#define reg_lbah(CHANNEL) ((CHANNEL)->reg_base + 5)     /* LBA 23:16. */
src/devices/disk.c:21:#define reg_device(CHANNEL) ((CHANNEL)->reg_base + 6)   /* Device/LBA 27:24. */
src/devices/disk.c:22:#define reg_status(CHANNEL) ((CHANNEL)->reg_base + 7)   /* Status (r/o). */
src/devices/disk.c:26:   (If we supported non-legacy ATA controllers this would not be
src/devices/disk.c:28:#define reg_ctl(CHANNEL) ((CHANNEL)->reg_base + 0x206)  /* Control (w/o). */
src/devices/disk.c:113:      snprintf (c->name, sizeof c->name, "hd%zu", chan_no);
src/devices/disk.c:117:          c->reg_base = 0x1f0;
src/devices/disk.c:118:          c->irq = 14 + 0x20;
src/devices/disk.c:121:          c->reg_base = 0x170;
src/devices/disk.c:122:          c->irq = 15 + 0x20;
src/devices/disk.c:127:      lock_init (&c->lock);
src/devices/disk.c:128:      c->expecting_interrupt = false;
src/devices/disk.c:129:      sema_init (&c->completion_wait, 0);
src/devices/disk.c:134:          struct disk *d = &c->devices[dev_no];
src/devices/disk.c:135:          snprintf (d->name, sizeof d->name, "%s:%d", c->name, dev_no);
src/devices/disk.c:136:          d->channel = c;
src/devices/disk.c:137:          d->dev_no = dev_no;
src/devices/disk.c:139:          d->is_ata = false;
src/devices/disk.c:140:          d->capacity = 0;
src/devices/disk.c:142:          d->read_cnt = d->write_cnt = 0;
src/devices/disk.c:146:      intr_register_ext (c->irq, interrupt_handler, c->name);
src/devices/disk.c:152:      if (check_device_type (&c->devices[0]))
src/devices/disk.c:153:        check_device_type (&c->devices[1]);
src/devices/disk.c:157:        if (c->devices[dev_no].is_ata)
src/devices/disk.c:158:          identify_ata_device (&c->devices[dev_no]);
src/devices/disk.c:175:          if (d != NULL && d->is_ata) 
src/devices/disk.c:177:                    d->name, d->read_cnt, d->write_cnt);
src/devices/disk.c:182:/* Returns the disk numbered DEV_NO--either 0 or 1 for master or
src/devices/disk.c:183:   slave, respectively--within the channel numbered CHAN_NO.
src/devices/disk.c:186:        0:0 - boot loader, command line args, and operating system kernel
src/devices/disk.c:187:        0:1 - file system
src/devices/disk.c:188:        1:0 - scratch
src/devices/disk.c:189:        1:1 - swap
src/devices/disk.c:199:      if (d->is_ata)
src/devices/disk.c:205:/* Returns the size of disk D, measured in DISK_SECTOR_SIZE-byte
src/devices/disk.c:212:  return d->capacity;
src/devices/disk.c:218:   per-disk locking is unneeded. */
src/devices/disk.c:227:  c = d->channel;
src/devices/disk.c:228:  lock_acquire (&c->lock);
src/devices/disk.c:231:  sema_down (&c->completion_wait);
src/devices/disk.c:233:    PANIC ("%s: disk read failed, sector=%"PRDSNu, d->name, sec_no);
src/devices/disk.c:235:  d->read_cnt++;
src/devices/disk.c:236:  lock_release (&c->lock);
src/devices/disk.c:243:   per-disk locking is unneeded. */
src/devices/disk.c:252:  c = d->channel;
src/devices/disk.c:253:  lock_acquire (&c->lock);
src/devices/disk.c:257:    PANIC ("%s: disk write failed, sector=%"PRDSNu, d->name, sec_no);
src/devices/disk.c:259:  sema_down (&c->completion_wait);
src/devices/disk.c:260:  d->write_cnt++;
src/devices/disk.c:261:  lock_release (&c->lock);
src/devices/disk.c:280:      struct disk *d = &c->devices[dev_no];
src/devices/disk.c:310:      select_device (&c->devices[0]);
src/devices/disk.c:311:      wait_while_busy (&c->devices[0]); 
src/devices/disk.c:319:      select_device (&c->devices[1]);
src/devices/disk.c:326:      wait_while_busy (&c->devices[1]);
src/devices/disk.c:338:  struct channel *c = d->channel;
src/devices/disk.c:348:  if ((error != 1 && (error != 0x81 || d->dev_no == 1))
src/devices/disk.c:352:      d->is_ata = false;
src/devices/disk.c:357:      d->is_ata = (lbam == 0 && lbah == 0) || (lbam == 0x3c && lbah == 0xc3);
src/devices/disk.c:368:  struct channel *c = d->channel;
src/devices/disk.c:371:  ASSERT (d->is_ata);
src/devices/disk.c:378:  sema_down (&c->completion_wait);
src/devices/disk.c:381:      d->is_ata = false;
src/devices/disk.c:387:  d->capacity = id[60] | ((uint32_t) id[61] << 16);
src/devices/disk.c:390:  printf ("%s: detected %'"PRDSNu" sector (", d->name, d->capacity);
src/devices/disk.c:391:  if (d->capacity > 1024 / DISK_SECTOR_SIZE * 1024 * 1024)
src/devices/disk.c:393:            d->capacity / (1024 / DISK_SECTOR_SIZE * 1024 * 1024));
src/devices/disk.c:394:  else if (d->capacity > 1024 / DISK_SECTOR_SIZE * 1024)
src/devices/disk.c:395:    printf ("%"PRDSNu" MB", d->capacity / (1024 / DISK_SECTOR_SIZE * 1024));
src/devices/disk.c:396:  else if (d->capacity > 1024 / DISK_SECTOR_SIZE)
src/devices/disk.c:397:    printf ("%"PRDSNu" kB", d->capacity / (1024 / DISK_SECTOR_SIZE));
src/devices/disk.c:399:    printf ("%"PRDSNu" byte", d->capacity * DISK_SECTOR_SIZE);
src/devices/disk.c:415:  /* Find the last non-white, non-null character. */
src/devices/disk.c:416:  for (; size > 0; size--)
src/devices/disk.c:418:      int c = string[(size - 1) ^ 1];
src/devices/disk.c:434:  struct channel *c = d->channel;
src/devices/disk.c:436:  ASSERT (sec_no < d->capacity);
src/devices/disk.c:445:        DEV_MBS | DEV_LBA | (d->dev_no == 1 ? DEV_DEV : 0) | (sec_no >> 24));
src/devices/disk.c:457:  c->expecting_interrupt = true;
src/devices/disk.c:477:/* Low-level ATA primitives. */
src/devices/disk.c:491:      if ((inb (reg_status (d->channel)) & (STA_BSY | STA_DRQ)) == 0)
src/devices/disk.c:496:  printf ("%s: idle timeout\n", d->name);
src/devices/disk.c:506:  struct channel *c = d->channel;
src/devices/disk.c:512:        printf ("%s: busy, waiting...", d->name);
src/devices/disk.c:530:  struct channel *c = d->channel;
src/devices/disk.c:532:  if (d->dev_no == 1)
src/devices/disk.c:556:    if (f->vec_no == c->irq)
src/devices/disk.c:558:        if (c->expecting_interrupt) 
src/devices/disk.c:561:            sema_up (&c->completion_wait);      /* Wake up waiter. */
src/devices/disk.c:564:          printf ("%s: unexpected interrupt\n", c->name);
src/devices/vga.c:71:        cx--;
src/devices/vga.c:134:      cy = ROW_CNT - 1;
src/devices/vga.c:135:      memmove (&fb[0], &fb[1], sizeof fb[0] * (ROW_CNT - 1));
src/devices/vga.c:136:      clear_row (ROW_CNT - 1);
src/devices/vga.c:144:  /* See [FREEVGA] under "Manipulating the Text-mode Cursor". */
src/devices/vga.c:154:  /* See [FREEVGA] under "Manipulating the Text-mode Cursor". */
src/devices/timer.c:58:  /* Approximate loops_per_tick as the largest power-of-two
src/devices/timer.c:92:  return timer_ticks () - then;
src/devices/timer.c:174:  while (loops-- > 0)
src/devices/timer.c:185:     ---------------------- = NUM * TIMER_FREQ / DENOM ticks. 
src/devices/timer.c:200:      /* Otherwise, use a busy-wait loop for more accurate
src/devices/timer.c:201:         sub-tick timing.  We scale the numerator and denominator
src/devices/intq.h:28:    struct thread *not_full;    /* Thread waiting for not-full condition. */
src/devices/intq.h:29:    struct thread *not_empty;   /* Thread waiting for not-empty condition. */
src/devices/serial.c:21:#define RBR_REG (IO_BASE + 0)   /* Receiver Buffer Reg. (read-only). */
src/devices/serial.c:22:#define THR_REG (IO_BASE + 0)   /* Transmitter Holding Reg. (write-only). */
src/devices/serial.c:29:/* DLAB-insensitive registers. */
src/devices/serial.c:30:#define IIR_REG (IO_BASE + 2)   /* Interrupt Identification Reg. (read-only) */
src/devices/serial.c:31:#define FCR_REG (IO_BASE + 2)   /* FIFO Control Reg. (write-only). */
src/devices/serial.c:34:#define LSR_REG (IO_BASE + 5)   /* Line Status Register (read-only). */
src/devices/serial.c:63:   Polling mode busy-waits for the serial port to become free
src/devices/serial.c:72:  set_serial (115200);                  /* 115.2 kbps, N-8-1. */
src/devices/serial.c:78:/* Initializes the serial port device for queued interrupt-driven
src/devices/serial.c:79:   I/O.  With interrupt-driven I/O we don't waste CPU time
src/devices/serial.c:105:      /* If we're not set up for interrupt-driven I/O yet,
src/lib/ctype.h:25:static inline int tolower (int c) { return isupper (c) ? c - 'A' + 'a' : c; }
src/lib/ctype.h:26:static inline int toupper (int c) { return islower (c) ? c - 'a' + 'A' : c; }
src/lib/limits.h:7:#define SCHAR_MIN (-SCHAR_MAX - 1)
src/lib/limits.h:19:#define SHRT_MIN (-SHRT_MAX - 1)
src/lib/limits.h:23:#define INT_MIN (-INT_MAX - 1)
src/lib/limits.h:27:#define LONG_MIN (-LONG_MAX - 1)
src/lib/limits.h:31:#define LLONG_MIN (-LLONG_MAX - 1)
src/lib/debug.h:13:   function name, plus a user-specific message. */
src/lib/stdarg.h:4:/* GCC has <stdarg.h> functionality as built-ins,
src/lib/string.c:15:  while (size-- > 0)
src/lib/string.c:34:      while (size-- > 0)
src/lib/string.c:41:      while (size-- > 0)
src/lib/string.c:42:        *--dst = *--src;
src/lib/string.c:61:  for (; size-- > 0; a++, b++)
src/lib/string.c:63:      return *a > *b ? +1 : -1;
src/lib/string.c:87:  return *a < *b ? -1 : *a > *b;
src/lib/string.c:101:  for (; size-- > 0; block++)
src/lib/string.c:193:      for (i = 0; i <= haystack_len - needle_len; i++)
src/lib/string.c:263:  /* Skip any non-DELIMITERS up to the end of the string. */
src/lib/string.c:285:  while (size-- > 0)
src/lib/string.c:301:  return p - string;
src/lib/string.c:316:/* Copies string SRC to DST.  If SRC is longer than SIZE - 1
src/lib/string.c:317:   characters, only SIZE - 1 characters are copied.  A null
src/lib/string.c:336:      size_t dst_len = size - 1;
src/lib/string.c:346:   limited to SIZE - 1 characters.  A null terminator is always
src/lib/string.c:367:      size_t copy_cnt = size - dst_len - 1;
src/lib/arithmetic.c:3:/* On x86, division of one 64-bit integer by another cannot be
src/lib/arithmetic.c:5:   implements 64-bit division and remainder operations through
src/lib/arithmetic.c:10:   Some x86-64 machines, however, have a compiler and utilities
src/lib/arithmetic.c:11:   that can generate 32-bit x86 code without having any of the
src/lib/arithmetic.c:14:   64-bit division routines, which are the only routines from
src/lib/arithmetic.c:18:   Pintos is completely self-contained, then that makes it that
src/lib/arithmetic.c:21:/* Uses x86 DIVL instruction to divide 64-bit N by 32-bit D to
src/lib/arithmetic.c:22:   yield a 32-bit quotient.  Returns the quotient.
src/lib/arithmetic.c:75:/* Divides unsigned 64-bit N by unsigned 64-bit D and returns the
src/lib/arithmetic.c:87:             [n/d] = [n/d] - T + T
src/lib/arithmetic.c:88:                   = [n/d - T] + T                         by (1) below
src/lib/arithmetic.c:89:                   = [(b*n1 + n0)/d - T] + T               by definition of n
src/lib/arithmetic.c:90:                   = [(b*n1 + n0)/d - dT/d] + T
src/lib/arithmetic.c:91:                   = [(b(n1 - d[n1/d]) + n0)/d] + T
src/lib/arithmetic.c:99:         respective maximum values of d - 1 and b - 1:
src/lib/arithmetic.c:100:                 [(b(d - 1) + (b - 1))/d] < b
src/lib/arithmetic.c:101:             <=> [(bd - 1)/d] < b
src/lib/arithmetic.c:102:             <=> [b - 1/d] < b
src/lib/arithmetic.c:123:          uint64_t q = divl (n >> 1, (d << s) >> 32) >> (31 - s);
src/lib/arithmetic.c:124:          return n - (q - 1) * d < d ? q - 1 : q; 
src/lib/arithmetic.c:129:/* Divides unsigned 64-bit N by unsigned 64-bit D and returns the
src/lib/arithmetic.c:134:  return n - d * udiv64 (n, d);
src/lib/arithmetic.c:137:/* Divides signed 64-bit N by signed 64-bit D and returns the
src/lib/arithmetic.c:142:  uint64_t n_abs = n >= 0 ? (uint64_t) n : -(uint64_t) n;
src/lib/arithmetic.c:143:  uint64_t d_abs = d >= 0 ? (uint64_t) d : -(uint64_t) d;
src/lib/arithmetic.c:145:  return (n < 0) == (d < 0) ? (int64_t) q_abs : -(int64_t) q_abs;
src/lib/arithmetic.c:148:/* Divides signed 64-bit N by signed 64-bit D and returns the
src/lib/arithmetic.c:153:  return n - d * sdiv64 (n, d);
src/lib/arithmetic.c:163:/* Signed 64-bit division. */
src/lib/arithmetic.c:170:/* Signed 64-bit remainder. */
src/lib/arithmetic.c:177:/* Unsigned 64-bit division. */
src/lib/arithmetic.c:184:/* Unsigned 64-bit remainder. */
src/lib/user/console.c:4:#include <syscall-nr.h>
src/lib/user/console.c:28:/* Writes string S to the console, followed by a new-line
src/lib/user/console.c:81:  *aux->p++ = c;
src/lib/user/console.c:82:  if (aux->p >= aux->buf + sizeof aux->buf)
src/lib/user/console.c:84:  aux->char_cnt++;
src/lib/user/console.c:91:  if (aux->p > aux->buf)
src/lib/user/console.c:92:    write (aux->handle, aux->buf, aux->p - aux->buf);
src/lib/user/console.c:93:  aux->p = aux->buf;
src/lib/user/syscall.h:9:#define PID_ERROR ((pid_t) -1)
src/lib/user/syscall.h:13:#define MAP_FAILED ((mapid_t) -1)
src/lib/user/user.lds:1:OUTPUT_FORMAT("elf32-i386")
src/lib/user/user.lds:7:  /* Read-only sections, merged into text segment: */
src/lib/user/user.lds:15:  . = ALIGN (0x1000) - ((0x1000 - .) & (0x1000 - 1)); 
src/lib/user/user.lds:55:  /DISCARD/ : { *(.note.GNU-stack) }
src/lib/user/syscall.c:2:#include "../syscall-nr.h"
src/lib/user/debug.c:8:   number, and function name, plus a user-specific message. */
src/lib/syscall-nr.h:34:#endif /* lib/syscall-nr.h */
src/lib/stdio.c:20:   BUF_SIZE - 1 characters to BUFFER, followed by a null
src/lib/stdio.c:21:   terminator.  BUFFER will always be null-terminated unless
src/lib/stdio.c:32:  aux.max_length = buf_size > 0 ? buf_size - 1 : 0;
src/lib/stdio.c:50:  if (aux->length++ < aux->max_length)
src/lib/stdio.c:51:    *aux->p++ = ch;
src/lib/stdio.c:56:   BUF_SIZE - 1 characters to BUFFER, followed by a null
src/lib/stdio.c:57:   terminator.  BUFFER will always be null-terminated unless
src/lib/stdio.c:99:        MINUS = 1 << 0,         /* '-' */
src/lib/stdio.c:112:       -1 indicates no precision was specified. */
src/lib/stdio.c:164:      /* Literally copy non-conversions to output. */
src/lib/stdio.c:217:                  value = value - SIZE_MAX - 1;
src/lib/stdio.c:223:            format_integer (value < 0 ? -value : value,
src/lib/stdio.c:285:            /* Treat character as single-character string. */
src/lib/stdio.c:299:               Note: if c.precision == -1 then strnlen() will get
src/lib/stdio.c:323:          /* We don't support floating-point arithmetic,
src/lib/stdio.c:344:  c->flags = 0;
src/lib/stdio.c:349:        case '-':
src/lib/stdio.c:350:          c->flags |= MINUS;
src/lib/stdio.c:353:          c->flags |= PLUS;
src/lib/stdio.c:356:          c->flags |= SPACE;
src/lib/stdio.c:359:          c->flags |= POUND;
src/lib/stdio.c:362:          c->flags |= ZERO;
src/lib/stdio.c:365:          c->flags |= GROUP;
src/lib/stdio.c:368:          format--;
src/lib/stdio.c:373:  if (c->flags & MINUS)
src/lib/stdio.c:374:    c->flags &= ~ZERO;
src/lib/stdio.c:375:  if (c->flags & PLUS)
src/lib/stdio.c:376:    c->flags &= ~SPACE;
src/lib/stdio.c:379:  c->width = 0;
src/lib/stdio.c:383:      c->width = va_arg (*args, int);
src/lib/stdio.c:388:        c->width = c->width * 10 + *format - '0';
src/lib/stdio.c:390:  if (c->width < 0) 
src/lib/stdio.c:392:      c->width = -c->width;
src/lib/stdio.c:393:      c->flags |= MINUS;
src/lib/stdio.c:397:  c->precision = -1;
src/lib/stdio.c:404:          c->precision = va_arg (*args, int);
src/lib/stdio.c:408:          c->precision = 0;
src/lib/stdio.c:410:            c->precision = c->precision * 10 + *format - '0';
src/lib/stdio.c:412:      if (c->precision < 0) 
src/lib/stdio.c:413:        c->precision = -1;
src/lib/stdio.c:415:  if (c->precision >= 0)
src/lib/stdio.c:416:    c->flags &= ~ZERO;
src/lib/stdio.c:419:  c->type = INT;
src/lib/stdio.c:426:          c->type = CHAR;
src/lib/stdio.c:429:        c->type = SHORT;
src/lib/stdio.c:433:      c->type = INTMAX;
src/lib/stdio.c:440:          c->type = LONGLONG;
src/lib/stdio.c:443:        c->type = LONG;
src/lib/stdio.c:447:      c->type = PTRDIFFT;
src/lib/stdio.c:451:      c->type = SIZET;
src/lib/stdio.c:455:      format--;
src/lib/stdio.c:488:      if (c->flags & PLUS)
src/lib/stdio.c:489:        sign = negative ? '-' : '+';
src/lib/stdio.c:490:      else if (c->flags & SPACE)
src/lib/stdio.c:491:        sign = negative ? '-' : ' ';
src/lib/stdio.c:493:        sign = '-';
src/lib/stdio.c:499:  x = (c->flags & POUND) && value ? b->x : 0;
src/lib/stdio.c:508:      if ((c->flags & GROUP) && digit_cnt > 0 && digit_cnt % b->group == 0)
src/lib/stdio.c:510:      *cp++ = b->digits[value % b->base];
src/lib/stdio.c:511:      value /= b->base;
src/lib/stdio.c:520:  precision = c->precision < 0 ? 1 : c->precision;
src/lib/stdio.c:521:  while (cp - buf < precision && cp < buf + sizeof buf - 1)
src/lib/stdio.c:523:  if ((c->flags & POUND) && b->base == 8 && (cp == buf || cp[-1] != '0'))
src/lib/stdio.c:527:  pad_cnt = c->width - (cp - buf) - (x ? 2 : 0) - (sign != 0);
src/lib/stdio.c:532:  if ((c->flags & (MINUS | ZERO)) == 0)
src/lib/stdio.c:541:  if (c->flags & ZERO)
src/lib/stdio.c:544:    output (*--cp, aux);
src/lib/stdio.c:545:  if (c->flags & MINUS)
src/lib/stdio.c:553:  while (cnt-- > 0)
src/lib/stdio.c:566:  if (c->width > length && (c->flags & MINUS) == 0)
src/lib/stdio.c:567:    output_dup (' ', c->width - length, output, aux);
src/lib/stdio.c:570:  if (c->width > length && (c->flags & MINUS) != 0)
src/lib/stdio.c:571:    output_dup (' ', c->width - length, output, aux);
src/lib/stdio.c:606:      if (end - start > size)
src/lib/stdio.c:608:      n = end - start;
src/lib/stdio.c:616:                buf[i - start], i == per_line / 2 - 1? '-' : ' ');
src/lib/stdio.c:626:                    isprint (buf[i - start]) ? buf[i - start] : '.');
src/lib/stdio.c:635:      size -= n;
src/lib/round.h:6:#define ROUND_UP(X, STEP) (((X) + (STEP) - 1) / (STEP) * (STEP))
src/lib/round.h:10:#define DIV_ROUND_UP(X, STEP) (((X) + (STEP) - 1) / (STEP))
src/lib/stdint.h:6:#define INT8_MIN (-INT8_MAX - 1)
src/lib/stdint.h:10:#define INT16_MIN (-INT16_MAX - 1)
src/lib/stdint.h:14:#define INT32_MIN (-INT32_MAX - 1)
src/lib/stdint.h:18:#define INT64_MIN (-INT64_MAX - 1)
src/lib/stddef.h:5:#define offsetof(TYPE, MEMBER) ((size_t) &((TYPE *) 0)->MEMBER)
src/lib/kernel/console.c:40:   printf()             - palloc() tries to grab the lock again
src/lib/kernel/console.c:42:   schedule_tail()      - another thread dying as we switch threads
src/lib/kernel/console.c:45:   intr_handler()       - timer interrupt
src/lib/kernel/console.c:50:   sys_write()          - one process writing to the console
src/lib/kernel/console.c:106:        console_lock_depth--;
src/lib/kernel/console.c:137:/* Writes string S to the console, followed by a new-line
src/lib/kernel/console.c:156:  while (n-- > 0)
src/lib/kernel/list.c:12:                      +------+     +------+
src/lib/kernel/list.c:13:                  <---| head |<--->| tail |--->
src/lib/kernel/list.c:14:                      +------+     +------+
src/lib/kernel/list.c:18:        +------+     +-------+     +-------+     +------+
src/lib/kernel/list.c:19:    <---| head |<--->|   1   |<--->|   2   |<--->| tail |<--->
src/lib/kernel/list.c:20:        +------+     +-------+     +-------+     +------+
src/lib/kernel/list.c:41:  return elem != NULL && elem->prev == NULL && elem->next != NULL;
src/lib/kernel/list.c:49:  return elem != NULL && elem->prev != NULL && elem->next != NULL;
src/lib/kernel/list.c:56:  return elem != NULL && elem->prev != NULL && elem->next == NULL;
src/lib/kernel/list.c:64:  list->head.prev = NULL;
src/lib/kernel/list.c:65:  list->head.next = &list->tail;
src/lib/kernel/list.c:66:  list->tail.prev = &list->head;
src/lib/kernel/list.c:67:  list->tail.next = NULL;
src/lib/kernel/list.c:75:  return list->head.next;
src/lib/kernel/list.c:85:  return elem->next;
src/lib/kernel/list.c:97:  return &list->tail;
src/lib/kernel/list.c:106:  return list->tail.prev;
src/lib/kernel/list.c:116:  return elem->prev;
src/lib/kernel/list.c:136:  return &list->head;
src/lib/kernel/list.c:154:  return &list->head;
src/lib/kernel/list.c:162:  return &list->tail;
src/lib/kernel/list.c:174:  elem->prev = before->prev;
src/lib/kernel/list.c:175:  elem->next = before;
src/lib/kernel/list.c:176:  before->prev->next = elem;
src/lib/kernel/list.c:177:  before->prev = elem;
src/lib/kernel/list.c:196:  first->prev->next = last->next;
src/lib/kernel/list.c:197:  last->next->prev = first->prev;
src/lib/kernel/list.c:200:  first->prev = before->prev;
src/lib/kernel/list.c:201:  last->next = before;
src/lib/kernel/list.c:202:  before->prev->next = first;
src/lib/kernel/list.c:203:  before->prev = last;
src/lib/kernel/list.c:260:  elem->prev->next = elem->next;
src/lib/kernel/list.c:261:  elem->next->prev = elem->prev;
src/lib/kernel/list.c:262:  return elem->next;
src/lib/kernel/list.c:291:  return list->head.next;
src/lib/kernel/list.c:300:  return list->tail.prev;
src/lib/kernel/list.c:340:      for (e = list_begin (list); e != list_end (list); e = e->prev)
src/lib/kernel/list.c:341:        swap (&e->prev, &e->next);
src/lib/kernel/list.c:342:      swap (&list->head.next, &list->tail.prev);
src/lib/kernel/list.c:343:      swap (&list->head.next->prev, &list->tail.prev->next);
src/lib/kernel/list.c:364:   A through B (exclusive) must form a non-empty range. */
src/lib/kernel/list.c:471:   given auxiliary data AUX.  If DUPLICATES is non-null, then the
src/lib/kernel/hash.c:28:  h->elem_cnt = 0;
src/lib/kernel/hash.c:29:  h->bucket_cnt = 4;
src/lib/kernel/hash.c:30:  h->buckets = malloc (sizeof *h->buckets * h->bucket_cnt);
src/lib/kernel/hash.c:31:  h->hash = hash;
src/lib/kernel/hash.c:32:  h->less = less;
src/lib/kernel/hash.c:33:  h->aux = aux;
src/lib/kernel/hash.c:35:  if (h->buckets != NULL) 
src/lib/kernel/hash.c:46:   If DESTRUCTOR is non-null, then it is called for each element
src/lib/kernel/hash.c:58:  for (i = 0; i < h->bucket_cnt; i++) 
src/lib/kernel/hash.c:60:      struct list *bucket = &h->buckets[i];
src/lib/kernel/hash.c:67:            destructor (hash_elem, h->aux);
src/lib/kernel/hash.c:73:  h->elem_cnt = 0;
src/lib/kernel/hash.c:78:   If DESTRUCTOR is non-null, then it is first called for each
src/lib/kernel/hash.c:91:  free (h->buckets);
src/lib/kernel/hash.c:169:  for (i = 0; i < h->bucket_cnt; i++) 
src/lib/kernel/hash.c:171:      struct list *bucket = &h->buckets[i];
src/lib/kernel/hash.c:177:          action (list_elem_to_hash_elem (elem), h->aux);
src/lib/kernel/hash.c:205:  i->hash = h;
src/lib/kernel/hash.c:206:  i->bucket = i->hash->buckets;
src/lib/kernel/hash.c:207:  i->elem = list_elem_to_hash_elem (list_head (i->bucket));
src/lib/kernel/hash.c:223:  i->elem = list_elem_to_hash_elem (list_next (&i->elem->list_elem));
src/lib/kernel/hash.c:224:  while (i->elem == list_elem_to_hash_elem (list_end (i->bucket)))
src/lib/kernel/hash.c:226:      if (++i->bucket >= i->hash->buckets + i->hash->bucket_cnt)
src/lib/kernel/hash.c:228:          i->elem = NULL;
src/lib/kernel/hash.c:231:      i->elem = list_elem_to_hash_elem (list_begin (i->bucket));
src/lib/kernel/hash.c:234:  return i->elem;
src/lib/kernel/hash.c:243:  return i->elem;
src/lib/kernel/hash.c:250:  return h->elem_cnt;
src/lib/kernel/hash.c:257:  return h->elem_cnt == 0;
src/lib/kernel/hash.c:260:/* Fowler-Noll-Vo hash constants, for 32-bit word sizes. */
src/lib/kernel/hash.c:268:  /* Fowler-Noll-Vo 32-bit hash, for bytes. */
src/lib/kernel/hash.c:275:  while (size-- > 0)
src/lib/kernel/hash.c:308:  size_t bucket_idx = h->hash (e, h->aux) & (h->bucket_cnt - 1);
src/lib/kernel/hash.c:309:  return &h->buckets[bucket_idx];
src/lib/kernel/hash.c:322:      if (!h->less (hi, e, h->aux) && !h->less (e, hi, h->aux))
src/lib/kernel/hash.c:328:/* Returns X with its lowest-order bit set to 1 turned off. */
src/lib/kernel/hash.c:332:  return x & (x - 1);
src/lib/kernel/hash.c:348:   ideal.  This function can fail because of an out-of-memory
src/lib/kernel/hash.c:361:  old_buckets = h->buckets;
src/lib/kernel/hash.c:362:  old_bucket_cnt = h->bucket_cnt;
src/lib/kernel/hash.c:368:  new_bucket_cnt = h->elem_cnt / BEST_ELEMS_PER_BUCKET;
src/lib/kernel/hash.c:391:  h->buckets = new_buckets;
src/lib/kernel/hash.c:392:  h->bucket_cnt = new_bucket_cnt;
src/lib/kernel/hash.c:419:  h->elem_cnt++;
src/lib/kernel/hash.c:420:  list_push_front (bucket, &e->list_elem);
src/lib/kernel/hash.c:427:  h->elem_cnt--;
src/lib/kernel/hash.c:428:  list_remove (&e->list_elem);
src/lib/kernel/hash.h:40:        ((STRUCT *) ((uint8_t *) &(HASH_ELEM)->list_elem        \
src/lib/kernel/hash.h:41:                     - offsetof (STRUCT, MEMBER.list_elem)))
src/lib/kernel/bitmap.c:68:  int last_bits = b->bit_cnt % ELEM_BITS;
src/lib/kernel/bitmap.c:69:  return last_bits ? ((elem_type) 1 << last_bits) - 1 : (elem_type) -1;
src/lib/kernel/bitmap.c:84:      b->bit_cnt = bit_cnt;
src/lib/kernel/bitmap.c:85:      b->bits = malloc (byte_cnt (bit_cnt));
src/lib/kernel/bitmap.c:86:      if (b->bits != NULL || bit_cnt == 0)
src/lib/kernel/bitmap.c:106:  b->bit_cnt = bit_cnt;
src/lib/kernel/bitmap.c:107:  b->bits = (elem_type *) (b + 1);
src/lib/kernel/bitmap.c:128:      free (b->bits);
src/lib/kernel/bitmap.c:139:  return b->bit_cnt;
src/lib/kernel/bitmap.c:149:  ASSERT (idx < b->bit_cnt);
src/lib/kernel/bitmap.c:163:  /* This is equivalent to `b->bits[idx] |= mask' except that it
src/lib/kernel/bitmap.c:165:     the description of the OR instruction in [IA32-v2b]. */
src/lib/kernel/bitmap.c:166:  asm ("orl %1, %0" : "=m" (b->bits[idx]) : "r" (mask) : "cc");
src/lib/kernel/bitmap.c:176:  /* This is equivalent to `b->bits[idx] &= ~mask' except that it
src/lib/kernel/bitmap.c:178:     the description of the AND instruction in [IA32-v2a]. */
src/lib/kernel/bitmap.c:179:  asm ("andl %1, %0" : "=m" (b->bits[idx]) : "r" (~mask) : "cc");
src/lib/kernel/bitmap.c:191:  /* This is equivalent to `b->bits[idx] ^= mask' except that it
src/lib/kernel/bitmap.c:193:     the description of the XOR instruction in [IA32-v2b]. */
src/lib/kernel/bitmap.c:194:  asm ("xorl %1, %0" : "=m" (b->bits[idx]) : "r" (mask) : "cc");
src/lib/kernel/bitmap.c:202:  ASSERT (idx < b->bit_cnt);
src/lib/kernel/bitmap.c:203:  return (b->bits[elem_idx (idx)] & bit_mask (idx)) != 0;
src/lib/kernel/bitmap.c:224:  ASSERT (start <= b->bit_cnt);
src/lib/kernel/bitmap.c:225:  ASSERT (start + cnt <= b->bit_cnt);
src/lib/kernel/bitmap.c:239:  ASSERT (start <= b->bit_cnt);
src/lib/kernel/bitmap.c:240:  ASSERT (start + cnt <= b->bit_cnt);
src/lib/kernel/bitmap.c:257:  ASSERT (start <= b->bit_cnt);
src/lib/kernel/bitmap.c:258:  ASSERT (start + cnt <= b->bit_cnt);
src/lib/kernel/bitmap.c:300:  ASSERT (start <= b->bit_cnt);
src/lib/kernel/bitmap.c:302:  if (cnt <= b->bit_cnt) 
src/lib/kernel/bitmap.c:304:      size_t last = b->bit_cnt - cnt;
src/lib/kernel/bitmap.c:336:  return byte_cnt (b->bit_cnt);
src/lib/kernel/bitmap.c:345:  if (b->bit_cnt > 0) 
src/lib/kernel/bitmap.c:347:      off_t size = byte_cnt (b->bit_cnt);
src/lib/kernel/bitmap.c:348:      success = file_read_at (file, b->bits, size, 0) == size;
src/lib/kernel/bitmap.c:349:      b->bits[elem_cnt (b->bit_cnt) - 1] &= last_mask (b);
src/lib/kernel/bitmap.c:359:  off_t size = byte_cnt (b->bit_cnt);
src/lib/kernel/bitmap.c:360:  return file_write_at (file, b->bits, size, 0) == size;
src/lib/kernel/bitmap.c:370:  hex_dump (0, b->bits, byte_cnt (b->bit_cnt), false);
src/lib/kernel/list.h:56:     - "front": The first element in a list.  Undefined in an
src/lib/kernel/list.h:59:     - "back": The last element in a list.  Undefined in an empty
src/lib/kernel/list.h:62:     - "tail": The element figuratively just after the last
src/lib/kernel/list.h:67:     - "beginning": In a non-empty list, the front.  In an empty
src/lib/kernel/list.h:71:     - "head": The element figuratively just before the first
src/lib/kernel/list.h:76:     - "reverse beginning": In a non-empty list, the back.  In an
src/lib/kernel/list.h:80:     - "interior element": An element that is not the head or
src/lib/kernel/list.h:109:        ((STRUCT *) ((uint8_t *) &(LIST_ELEM)->next     \
src/lib/kernel/list.h:110:                     - offsetof (STRUCT, MEMBER.next)))
src/lib/kernel/debug.c:13:   function name, plus a user-specific message. */
src/lib/stdlib.c:25:  else if (*s == '-')
src/lib/stdlib.c:36:    value = value * 10 - (*s - '0');
src/lib/stdlib.c:38:    value = -value;
src/lib/stdlib.c:53:   and B, respectively, it must return a strcmp()-type result,
src/lib/stdlib.c:64:/* Swaps elements with 1-based indexes A_IDX and B_IDX in ARRAY
src/lib/stdlib.c:69:  unsigned char *a = array + (a_idx - 1) * size;
src/lib/stdlib.c:70:  unsigned char *b = array + (b_idx - 1) * size;
src/lib/stdlib.c:81:/* Compares elements with 1-based indexes A_IDX and B_IDX in
src/lib/stdlib.c:84:   strcmp()-type result. */
src/lib/stdlib.c:90:  return compare (array + (a_idx - 1) * size, array + (b_idx - 1) * size, aux);
src/lib/stdlib.c:93:/* "Float down" the element with 1-based index I in ARRAY of CNT
src/lib/stdlib.c:128:   respectively, it must return a strcmp()-type result, i.e. less
src/lib/stdlib.c:143:  for (i = cnt / 2; i > 0; i--)
src/lib/stdlib.c:147:  for (i = cnt; i > 1; i--) 
src/lib/stdlib.c:150:      heapify (array, 1, i - 1, size, compare, aux); 
src/lib/stdlib.c:163:   strcmp()-type result, i.e. less than zero if A < B, zero if A
src/lib/stdlib.c:181:   respectively, it must return a strcmp()-type result, i.e. less
src/lib/stdlib.c:194:      size_t range = (last - first) / size;
src/lib/random.c:6:/* RC4-based pseudo-random number generator (PRNG).
src/lib/random.c:10:   and its output is plenty random for non-cryptographic
src/lib/random.c:61:  for (buf = buf_; size-- > 0; buf++)
src/lib/random.c:74:/* Returns a pseudo-random unsigned long.
src/threads/init.c:45:/* -f: Format the file system? */
src/threads/init.c:49:/* -q: Power off after kernel tasks complete? */
src/threads/init.c:140:  memset (&_start_bss, 0, &_end_bss - &_start_bss);
src/threads/init.c:183:     new page tables immediately.  See [IA32-v2a] "MOV--Move
src/threads/init.c:184:     to/from Control Registers" and [IA32-v3a] 3.7.5 "Base Address
src/threads/init.c:190:   an argv-like array. */
src/threads/init.c:208:      p += strnlen (p, end - p) + 1;
src/threads/init.c:225:   and returns the first non-option argument. */
src/threads/init.c:229:  for (; *argv != NULL && **argv == '-'; argv++)
src/threads/init.c:235:      if (!strcmp (name, "-h"))
src/threads/init.c:237:      else if (!strcmp (name, "-q"))
src/threads/init.c:240:      else if (!strcmp (name, "-f"))
src/threads/init.c:243:      else if (!strcmp (name, "-rs"))
src/threads/init.c:245:      else if (!strcmp (name, "-mlfqs"))
src/threads/init.c:248:      else if (!strcmp (name, "-ul"))
src/threads/init.c:252:        PANIC ("unknown option `%s' (use -h for help)", name);
src/threads/init.c:307:        if (a->name == NULL)
src/threads/init.c:308:          PANIC ("unknown action `%s' (use -h for help)", *argv);
src/threads/init.c:309:        else if (!strcmp (*argv, a->name))
src/threads/init.c:313:      for (i = 1; i < a->argc; i++)
src/threads/init.c:315:          PANIC ("action `%s' requires %d argument(s)", *argv, a->argc - 1);
src/threads/init.c:318:      a->function (argv);
src/threads/init.c:319:      argv += a->argc;
src/threads/init.c:342:          "Use these actions indirectly via `pintos' -g and -p options:\n"
src/threads/init.c:347:          "  -h                 Print this help message and power off.\n"
src/threads/init.c:348:          "  -q                 Power off VM after actions or on panic.\n"
src/threads/init.c:349:          "  -f                 Format file system disk during startup.\n"
src/threads/init.c:350:          "  -rs=SEED           Set random number seed to SEED.\n"
src/threads/init.c:351:          "  -mlfqs             Use multi-level feedback queue scheduler.\n"
src/threads/init.c:353:          "  -ul=COUNT          Limit user memory to COUNT pages.\n"
src/threads/vaddr.h:15:#define BITMASK(SHIFT, CNT) (((1ul << (CNT)) - 1) << (SHIFT))
src/threads/vaddr.h:35:  return (void *) (((uintptr_t) va + PGSIZE - 1) & ~PGMASK);
src/threads/vaddr.h:43:/* Base address of the 1:1 physical-to-virtual mapping.  Physical
src/threads/vaddr.h:86:  return (uintptr_t) vaddr - (uintptr_t) PHYS_BASE;
src/threads/switch.S:22:	# [SysV-ABI-386] pages 3-11 and 3-12 for details.
src/threads/thread.h:20:#define TID_ERROR ((tid_t) -1)          /* Error value for tid_t. */
src/threads/thread.h:35:        4 kB +---------------------------------+
src/threads/thread.h:49:             +---------------------------------+
src/threads/thread.h:55:        0 kB +---------------------------------+
src/threads/thread.h:68:         structures or arrays as non-static local variables.  Use
src/threads/thread.h:105:/* If false (default), use round-robin scheduler.
src/threads/thread.h:106:   If true, use multi-level feedback queue scheduler.
src/threads/thread.h:107:   Controlled by kernel command-line option "-o mlfqs". */
src/threads/interrupt.h:22:    /* Pushed by intr_entry in intr-stubs.S.
src/threads/interrupt.h:37:    /* Pushed by intrNN_stub in intr-stubs.S. */
src/threads/interrupt.h:45:    /* Pushed by intrNN_stub in intr-stubs.S.
src/threads/interrupt.c:7:#include "threads/intr-stubs.h"
src/threads/interrupt.c:17:   the CPU.  See [IA32-v3a] sections 5.10 "Interrupt Descriptor
src/threads/interrupt.c:19:   Exception- or Interrupt-Handler Procedure". */
src/threads/interrupt.c:31:   pre-empted.  Handlers for external interrupts also may not
src/threads/interrupt.c:57:     value off the stack into `flags'.  See [IA32-v2b] "PUSHF"
src/threads/interrupt.c:58:     and "POP" and [IA32-v3a] 5.8.1 "Masking Maskable Hardware
src/threads/interrupt.c:82:     See [IA32-v2b] "STI" and [IA32-v3a] 5.8.1 "Masking Maskable
src/threads/interrupt.c:96:     See [IA32-v2b] "CLI" and [IA32-v3a] 5.8.1 "Masking Maskable
src/threads/interrupt.c:118:     See [IA32-v2a] "LIDT" and [IA32-v3a] 5.10 "Interrupt
src/threads/interrupt.c:120:  idtr_operand = make_idtr_operand (sizeof idt - 1, idt);
src/threads/interrupt.c:140:  intr_names[14] = "#PF Page-Fault Exception";
src/threads/interrupt.c:141:  intr_names[16] = "#MF x87 FPU Floating-Point Error";
src/threads/interrupt.c:143:  intr_names[18] = "#MC Machine-Check Exception";
src/threads/interrupt.c:144:  intr_names[19] = "#XF SIMD Floating-Point Exception";
src/threads/interrupt.c:181:   the DPL or lower-numbered ring.  In practice, DPL==3 allows
src/threads/interrupt.c:185:   [IA32-v3a] sections 4.5 "Privilege Levels" and 4.8.1.1
src/threads/interrupt.c:240:  outb (0x21, 0x20); /* ICW2: line IR0...7 -> irq 0x20...0x27. */
src/threads/interrupt.c:242:  outb (0x21, 0x01); /* ICW4: 8086 mode, normal EOI, non-buffered. */
src/threads/interrupt.c:246:  outb (0xa1, 0x28); /* ICW2: line IR0...7 -> irq 0x28...0x2f. */
src/threads/interrupt.c:248:  outb (0xa1, 0x01); /* ICW4: 8086 mode, normal EOI, non-buffered. */
src/threads/interrupt.c:255:/* Sends an end-of-interrupt signal to the PIC for the given IRQ.
src/threads/interrupt.c:275:   or lower-numbered ring.  In practice, DPL==3 allows user mode
src/threads/interrupt.c:278:   DPL==0 to be invoked.  See [IA32-v3a] sections 4.5 "Privilege
src/threads/interrupt.c:285:   [IA32-v3a] section 5.12.1.2 "Flag Usage By Exception- or
src/threads/interrupt.c:286:   Interrupt-Handler Procedure" for discussion. */
src/threads/interrupt.c:336:   intr-stubs.S.  FRAME describes the interrupt and the
src/threads/interrupt.c:348:  external = frame->vec_no >= 0x20 && frame->vec_no < 0x30;
src/threads/interrupt.c:359:  handler = intr_handlers[frame->vec_no];
src/threads/interrupt.c:362:  else if (frame->vec_no == 0x27 || frame->vec_no == 0x2f)
src/threads/interrupt.c:383:      pic_end_of_interrupt (frame->vec_no); 
src/threads/interrupt.c:398:     See [IA32-v2a] "MOV--Move to/from Control Registers" and
src/threads/interrupt.c:399:     [IA32-v3a] 5.14 "Interrupt 14--Page Fault Exception
src/threads/interrupt.c:404:          f->vec_no, intr_names[f->vec_no], f->eip);
src/threads/interrupt.c:405:  printf (" cr2=%08"PRIx32" error=%08"PRIx32"\n", cr2, f->error_code);
src/threads/interrupt.c:407:          f->eax, f->ebx, f->ecx, f->edx);
src/threads/interrupt.c:409:          f->esi, f->edi, (uint32_t) f->esp, f->ebp);
src/threads/interrupt.c:411:          f->cs, f->ds, f->es, f->ss);
src/threads/bochsrc.txt:1:romimage: file=$BXSHARE/BIOS-bochs-latest, address=0xf0000
src/threads/bochsrc.txt:2:vgaromimage: file=$BXSHARE/VGABIOS-lgpl-latest
src/threads/bochsrc.txt:9:ata0-master: type=disk, path=/tmp/JtHvZ22sK0.dsk, mode=flat, cylinders=1, heads=16, spt=63, translation=none
src/threads/palloc.c:15:/* Page allocator.  Hands out memory in page-size (or
src/threads/palloc.c:16:   page-multiple) chunks.  See malloc.h for an allocator that
src/threads/palloc.c:58:  size_t free_pages = (free_end - free_start) / PGSIZE;
src/threads/palloc.c:63:  kernel_pages = free_pages - user_pages;
src/threads/palloc.c:87:  lock_acquire (&pool->lock);
src/threads/palloc.c:88:  page_idx = bitmap_scan_and_flip (pool->used_map, 0, page_cnt, false);
src/threads/palloc.c:89:  lock_release (&pool->lock);
src/threads/palloc.c:92:    pages = pool->base + PGSIZE * page_idx;
src/threads/palloc.c:141:  page_idx = pg_no (pages) - pg_no (pool->base);
src/threads/palloc.c:147:  ASSERT (bitmap_all (pool->used_map, page_idx, page_cnt));
src/threads/palloc.c:148:  bitmap_set_multiple (pool->used_map, page_idx, page_cnt, false);
src/threads/palloc.c:169:  page_cnt -= bm_pages;
src/threads/palloc.c:174:  lock_init (&p->lock);
src/threads/palloc.c:175:  p->used_map = bitmap_create_in_buf (page_cnt, base, bm_pages * PGSIZE);
src/threads/palloc.c:176:  p->base = base + bm_pages * PGSIZE;
src/threads/palloc.c:185:  size_t start_page = pg_no (pool->base);
src/threads/palloc.c:186:  size_t end_page = start_page + bitmap_size (pool->used_map);
src/threads/thread.c:9:#include "threads/intr-stubs.h"
src/threads/thread.c:64:/* If false (default), use round-robin scheduler.
src/threads/thread.c:65:   If true, use multi-level feedback queue scheduler.
src/threads/thread.c:66:   Controlled by kernel command-line option "-o mlfqs". */
src/threads/thread.c:106:  initial_thread->status = THREAD_RUNNING;
src/threads/thread.c:107:  initial_thread->tid = allocate_tid ();
src/threads/thread.c:138:  else if (t->pagedir != NULL)
src/threads/thread.c:181:   Priority scheduling is the goal of Problem 1-3. */
src/threads/thread.c:201:  tid = t->tid = allocate_tid ();
src/threads/thread.c:205:  kf->eip = NULL;
src/threads/thread.c:206:  kf->function = function;
src/threads/thread.c:207:  kf->aux = aux;
src/threads/thread.c:211:  ef->eip = (void (*) (void)) kernel_thread;
src/threads/thread.c:215:  sf->eip = switch_entry;
src/threads/thread.c:238:  thread_current ()->status = THREAD_BLOCKED;
src/threads/thread.c:246:  return list_entry(a, struct thread, elem)->priority
src/threads/thread.c:247:    > list_entry(b, struct thread, elem)->priority;
src/threads/thread.c:250:/* Transitions a blocked thread T to the ready-to-run state.
src/threads/thread.c:266:  ASSERT (t->status == THREAD_BLOCKED);
src/threads/thread.c:267:  list_insert_ordered (&ready_list, &t->elem, threads_compare_priority, 0);
src/threads/thread.c:268:  t->status = THREAD_READY;
src/threads/thread.c:276:  return thread_current ()->name;
src/threads/thread.c:293:  ASSERT (t->status == THREAD_RUNNING);
src/threads/thread.c:302:  return thread_current ()->tid;
src/threads/thread.c:319:  thread_current ()->status = THREAD_DYING;
src/threads/thread.c:345:  update_next_tick_to_wake_up(cur->tick_to_wake_up = ticks);
src/threads/thread.c:347:  list_push_back(&blocked_list, &cur->elem);
src/threads/thread.c:363:    if (tick_to_wake_up >= t->tick_to_wake_up) {
src/threads/thread.c:364:      e = list_remove(&t->elem);
src/threads/thread.c:368:      update_next_tick_to_wake_up(t->tick_to_wake_up);
src/threads/thread.c:386:    list_insert_ordered (&ready_list, &curr->elem, threads_compare_priority, 0);
src/threads/thread.c:387:  curr->status = THREAD_READY;
src/threads/thread.c:396:  thread_current ()->priority = new_priority;
src/threads/thread.c:403:  return thread_current ()->priority;
src/threads/thread.c:459:      /* Re-enable interrupts and wait for the next one.
src/threads/thread.c:465:         between re-enabling interrupts and waiting for the next
src/threads/thread.c:469:         See [IA32-v2a] "HLT", [IA32-v2b] "STI", and [IA32-v3a]
src/threads/thread.c:504:  return t != NULL && t->magic == THREAD_MAGIC;
src/threads/thread.c:517:  t->status = THREAD_BLOCKED;
src/threads/thread.c:518:  strlcpy (t->name, name, sizeof t->name);
src/threads/thread.c:519:  t->stack = (uint8_t *) t + PGSIZE;
src/threads/thread.c:520:  t->priority = priority;
src/threads/thread.c:521:  t->magic = THREAD_MAGIC;
src/threads/thread.c:524:/* Allocates a SIZE-byte frame at the top of thread T's stack and
src/threads/thread.c:529:  /* Stack data is always allocated in word-size units. */
src/threads/thread.c:533:  t->stack -= size;
src/threads/thread.c:534:  return t->stack;
src/threads/thread.c:575:  curr->status = THREAD_RUNNING;
src/threads/thread.c:590:  if (prev != NULL && prev->status == THREAD_DYING && prev != initial_thread) 
src/threads/thread.c:612:  ASSERT (curr->status != THREAD_RUNNING);
src/threads/loader.h:21:#define LOADER_SIG (LOADER_END - LOADER_SIG_LEN)   /* 0xaa55 BIOS signature. */
src/threads/loader.h:22:#define LOADER_ARGS (LOADER_SIG - LOADER_ARGS_LEN)     /* Command-line args. */
src/threads/loader.h:23:#define LOADER_ARG_CNT (LOADER_ARGS - LOADER_ARG_CNT_LEN) /* Number of args. */
src/threads/loader.h:24:#define LOADER_RAM_PGS (LOADER_ARG_CNT - LOADER_RAM_PGS_LEN) /* # RAM pages. */
src/threads/synch.c:5:/* Copyright (c) 1992-1996 The Regents of the University of California.
src/threads/synch.c:39:   - down or "P": wait for the value to become positive, then
src/threads/synch.c:42:   - up or "V": increment the value (and wake up one waiting
src/threads/synch.c:49:  sema->value = value;
src/threads/synch.c:50:  list_init (&sema->waiters);
src/threads/synch.c:70:  while (sema->value == 0) 
src/threads/synch.c:72:      list_push_back (&sema->waiters, &thread_current ()->elem);
src/threads/synch.c:75:  sema->value--;
src/threads/synch.c:93:  if (sema->value > 0) 
src/threads/synch.c:95:      sema->value--;
src/threads/synch.c:117:  if (!list_empty (&sema->waiters)) 
src/threads/synch.c:118:    thread_unblock (list_entry (list_pop_front (&sema->waiters),
src/threads/synch.c:120:  sema->value++;
src/threads/synch.c:126:/* Self-test for semaphores that makes control "ping-pong"
src/threads/synch.c:138:  thread_create ("sema-test", PRI_DEFAULT, sema_test_helper, &sema);
src/threads/synch.c:181:  lock->holder = NULL;
src/threads/synch.c:182:  sema_init (&lock->semaphore, 1);
src/threads/synch.c:200:  sema_down (&lock->semaphore);
src/threads/synch.c:201:  lock->holder = thread_current ();
src/threads/synch.c:218:  success = sema_try_down (&lock->semaphore);
src/threads/synch.c:220:    lock->holder = thread_current ();
src/threads/synch.c:236:  lock->holder = NULL;
src/threads/synch.c:237:  sema_up (&lock->semaphore);
src/threads/synch.c:248:  return lock->holder == thread_current ();
src/threads/synch.c:266:  list_init (&cond->waiters);
src/threads/synch.c:282:   condition variables.  That is, there is a one-to-many mapping
src/threads/synch.c:300:  list_push_back (&cond->waiters, &waiter.elem);
src/threads/synch.c:321:  if (!list_empty (&cond->waiters)) 
src/threads/synch.c:322:    sema_up (&list_entry (list_pop_front (&cond->waiters),
src/threads/synch.c:323:                          struct semaphore_elem, elem)->semaphore);
src/threads/synch.c:338:  while (!list_empty (&cond->waiters))
src/threads/malloc.c:27:   But if the arena that the block was in now has no in-use
src/threads/malloc.c:80:      d->block_size = block_size;
src/threads/malloc.c:81:      d->blocks_per_arena = (PGSIZE - sizeof (struct arena)) / block_size;
src/threads/malloc.c:82:      list_init (&d->free_list);
src/threads/malloc.c:83:      lock_init (&d->lock);
src/threads/malloc.c:100:  /* Find the smallest descriptor that satisfies a SIZE-byte
src/threads/malloc.c:103:    if (d->block_size >= size)
src/threads/malloc.c:116:      a->magic = ARENA_MAGIC;
src/threads/malloc.c:117:      a->desc = NULL;
src/threads/malloc.c:118:      a->free_cnt = page_cnt;
src/threads/malloc.c:122:  lock_acquire (&d->lock);
src/threads/malloc.c:125:  if (list_empty (&d->free_list))
src/threads/malloc.c:133:          lock_release (&d->lock);
src/threads/malloc.c:138:      a->magic = ARENA_MAGIC;
src/threads/malloc.c:139:      a->desc = d;
src/threads/malloc.c:140:      a->free_cnt = d->blocks_per_arena;
src/threads/malloc.c:141:      for (i = 0; i < d->blocks_per_arena; i++) 
src/threads/malloc.c:144:          list_push_back (&d->free_list, &b->free_elem);
src/threads/malloc.c:149:  b = list_entry (list_pop_front (&d->free_list), struct block, free_elem);
src/threads/malloc.c:151:  a->free_cnt--;
src/threads/malloc.c:152:  lock_release (&d->lock);
src/threads/malloc.c:183:  struct desc *d = a->desc;
src/threads/malloc.c:185:  return d != NULL ? d->block_size : PGSIZE * a->free_cnt - pg_ofs (block);
src/threads/malloc.c:225:      struct desc *d = a->desc;
src/threads/malloc.c:232:          /* Clear the block to help detect use-after-free bugs. */
src/threads/malloc.c:233:          memset (b, 0xcc, d->block_size);
src/threads/malloc.c:236:          lock_acquire (&d->lock);
src/threads/malloc.c:239:          list_push_front (&d->free_list, &b->free_elem);
src/threads/malloc.c:242:          if (++a->free_cnt >= d->blocks_per_arena) 
src/threads/malloc.c:246:              ASSERT (a->free_cnt == d->blocks_per_arena);
src/threads/malloc.c:247:              for (i = 0; i < d->blocks_per_arena; i++) 
src/threads/malloc.c:250:                  list_remove (&b->free_elem);
src/threads/malloc.c:255:          lock_release (&d->lock);
src/threads/malloc.c:260:          palloc_free_multiple (a, a->free_cnt);
src/threads/malloc.c:274:  ASSERT (a->magic == ARENA_MAGIC);
src/threads/malloc.c:277:  ASSERT (a->desc == NULL
src/threads/malloc.c:278:          || (pg_ofs (b) - sizeof *a) % a->desc->block_size == 0);
src/threads/malloc.c:279:  ASSERT (a->desc != NULL || pg_ofs (b) == sizeof *a);
src/threads/malloc.c:284:/* Returns the (IDX - 1)'th block within arena A. */
src/threads/malloc.c:289:  ASSERT (a->magic == ARENA_MAGIC);
src/threads/malloc.c:290:  ASSERT (idx < a->desc->blocks_per_arena);
src/threads/malloc.c:293:                           + idx * a->desc->block_size);
src/threads/build/tests/threads/priority-sema.result:5:  (priority-sema) begin
src/threads/build/tests/threads/priority-sema.result:6:  (priority-sema) Thread priority 30 woke up.
src/threads/build/tests/threads/priority-sema.result:7:  (priority-sema) Back in main thread.
src/threads/build/tests/threads/priority-sema.result:8:  (priority-sema) Thread priority 29 woke up.
src/threads/build/tests/threads/priority-sema.result:9:  (priority-sema) Back in main thread.
src/threads/build/tests/threads/priority-sema.result:10:  (priority-sema) Thread priority 28 woke up.
src/threads/build/tests/threads/priority-sema.result:11:  (priority-sema) Back in main thread.
src/threads/build/tests/threads/priority-sema.result:12:  (priority-sema) Thread priority 27 woke up.
src/threads/build/tests/threads/priority-sema.result:13:  (priority-sema) Back in main thread.
src/threads/build/tests/threads/priority-sema.result:14:  (priority-sema) Thread priority 26 woke up.
src/threads/build/tests/threads/priority-sema.result:15:  (priority-sema) Back in main thread.
src/threads/build/tests/threads/priority-sema.result:16:  (priority-sema) Thread priority 25 woke up.
src/threads/build/tests/threads/priority-sema.result:17:  (priority-sema) Back in main thread.
src/threads/build/tests/threads/priority-sema.result:18:  (priority-sema) Thread priority 24 woke up.
src/threads/build/tests/threads/priority-sema.result:19:  (priority-sema) Back in main thread.
src/threads/build/tests/threads/priority-sema.result:20:  (priority-sema) Thread priority 23 woke up.
src/threads/build/tests/threads/priority-sema.result:21:  (priority-sema) Back in main thread.
src/threads/build/tests/threads/priority-sema.result:22:  (priority-sema) Thread priority 22 woke up.
src/threads/build/tests/threads/priority-sema.result:23:  (priority-sema) Back in main thread.
src/threads/build/tests/threads/priority-sema.result:24:  (priority-sema) Thread priority 21 woke up.
src/threads/build/tests/threads/priority-sema.result:25:  (priority-sema) Back in main thread.
src/threads/build/tests/threads/priority-sema.result:26:  (priority-sema) end
src/threads/build/tests/threads/priority-sema.result:27:Differences in `diff -u' format:
src/threads/build/tests/threads/priority-sema.result:28:  (priority-sema) begin
src/threads/build/tests/threads/priority-sema.result:29:- (priority-sema) Thread priority 30 woke up.
src/threads/build/tests/threads/priority-sema.result:30:  (priority-sema) Back in main thread.
src/threads/build/tests/threads/priority-sema.result:31:- (priority-sema) Thread priority 29 woke up.
src/threads/build/tests/threads/priority-sema.result:32:  (priority-sema) Back in main thread.
src/threads/build/tests/threads/priority-sema.result:33:- (priority-sema) Thread priority 28 woke up.
src/threads/build/tests/threads/priority-sema.result:34:  (priority-sema) Back in main thread.
src/threads/build/tests/threads/priority-sema.result:35:- (priority-sema) Thread priority 27 woke up.
src/threads/build/tests/threads/priority-sema.result:36:  (priority-sema) Back in main thread.
src/threads/build/tests/threads/priority-sema.result:37:- (priority-sema) Thread priority 26 woke up.
src/threads/build/tests/threads/priority-sema.result:38:  (priority-sema) Back in main thread.
src/threads/build/tests/threads/priority-sema.result:39:- (priority-sema) Thread priority 25 woke up.
src/threads/build/tests/threads/priority-sema.result:40:  (priority-sema) Back in main thread.
src/threads/build/tests/threads/priority-sema.result:41:- (priority-sema) Thread priority 24 woke up.
src/threads/build/tests/threads/priority-sema.result:42:  (priority-sema) Back in main thread.
src/threads/build/tests/threads/priority-sema.result:43:- (priority-sema) Thread priority 23 woke up.
src/threads/build/tests/threads/priority-sema.result:44:  (priority-sema) Back in main thread.
src/threads/build/tests/threads/priority-sema.result:45:- (priority-sema) Thread priority 22 woke up.
src/threads/build/tests/threads/priority-sema.result:46:  (priority-sema) Back in main thread.
src/threads/build/tests/threads/priority-sema.result:47:- (priority-sema) Thread priority 21 woke up.
src/threads/build/tests/threads/priority-sema.result:48:  (priority-sema) Back in main thread.
src/threads/build/tests/threads/priority-sema.result:49:  (priority-sema) end
src/threads/build/tests/threads/priority-donate-sema.d:1:tests/threads/priority-donate-sema.o:  \
src/threads/build/tests/threads/priority-donate-sema.d:2: ../../tests/threads/priority-donate-sema.c ../../lib/stdio.h \
Binary file src/threads/build/tests/threads/priority-sema.o matches
Binary file src/threads/build/tests/threads/priority-donate-sema.o matches
src/threads/build/tests/threads/alarm-wait.d:1:tests/threads/alarm-wait.o: ../../tests/threads/alarm-wait.c \
Binary file src/threads/build/tests/threads/mlfqs-load-avg.o matches
src/threads/build/tests/threads/priority-condvar.output:2:qemu -hda /tmp/LDou7QlHw6.dsk -m 4 -net none -nographic -monitor null
src/threads/build/tests/threads/priority-condvar.output:3:Kernel command line: -q run priority-condvar
src/threads/build/tests/threads/priority-condvar.output:9:Executing 'priority-condvar':
src/threads/build/tests/threads/priority-condvar.output:10:(priority-condvar) begin
src/threads/build/tests/threads/priority-condvar.output:11:(priority-condvar) Signaling...
src/threads/build/tests/threads/priority-condvar.output:12:(priority-condvar) Signaling...
src/threads/build/tests/threads/priority-condvar.output:13:(priority-condvar) Signaling...
src/threads/build/tests/threads/priority-condvar.output:14:(priority-condvar) Signaling...
src/threads/build/tests/threads/priority-condvar.output:15:(priority-condvar) Signaling...
src/threads/build/tests/threads/priority-condvar.output:16:(priority-condvar) Signaling...
src/threads/build/tests/threads/priority-condvar.output:17:(priority-condvar) Signaling...
src/threads/build/tests/threads/priority-condvar.output:18:(priority-condvar) Signaling...
src/threads/build/tests/threads/priority-condvar.output:19:(priority-condvar) Signaling...
src/threads/build/tests/threads/priority-condvar.output:20:(priority-condvar) Signaling...
src/threads/build/tests/threads/priority-condvar.output:21:(priority-condvar) end
src/threads/build/tests/threads/priority-condvar.output:22:Execution of 'priority-condvar' complete.
Binary file src/threads/build/tests/threads/mlfqs-block.o matches
src/threads/build/tests/threads/priority-donate-chain.output:2:qemu -hda /tmp/z666qY8cOs.dsk -m 4 -net none -nographic -monitor null
src/threads/build/tests/threads/priority-donate-chain.output:3:Kernel command line: -q run priority-donate-chain
src/threads/build/tests/threads/priority-donate-chain.output:9:Executing 'priority-donate-chain':
src/threads/build/tests/threads/priority-donate-chain.output:10:(priority-donate-chain) begin
src/threads/build/tests/threads/priority-donate-chain.output:11:(priority-donate-chain) main got lock.
src/threads/build/tests/threads/priority-donate-chain.output:12:(priority-donate-chain) main should have priority 3.  Actual priority: 0.
src/threads/build/tests/threads/priority-donate-chain.output:13:(priority-donate-chain) main should have priority 6.  Actual priority: 0.
src/threads/build/tests/threads/priority-donate-chain.output:14:(priority-donate-chain) main should have priority 9.  Actual priority: 0.
src/threads/build/tests/threads/priority-donate-chain.output:15:(priority-donate-chain) main should have priority 12.  Actual priority: 0.
src/threads/build/tests/threads/priority-donate-chain.output:16:(priority-donate-chain) main should have priority 15.  Actual priority: 0.
src/threads/build/tests/threads/priority-donate-chain.output:17:(priority-donate-chain) main should have priority 18.  Actual priority: 0.
src/threads/build/tests/threads/priority-donate-chain.output:18:(priority-donate-chain) main should have priority 21.  Actual priority: 0.
src/threads/build/tests/threads/priority-donate-chain.output:19:(priority-donate-chain) main finishing with priority 0.
src/threads/build/tests/threads/priority-donate-chain.output:20:(priority-donate-chain) end
src/threads/build/tests/threads/priority-donate-chain.output:21:Execution of 'priority-donate-chain' complete.
Binary file src/threads/build/tests/threads/tests.o matches
src/threads/build/tests/threads/alarm-priority.output:2:qemu -hda /tmp/u70Ya5SqX7.dsk -m 4 -net none -nographic -monitor null
src/threads/build/tests/threads/alarm-priority.output:3:Kernel command line: -q run alarm-priority
src/threads/build/tests/threads/alarm-priority.output:9:Executing 'alarm-priority':
src/threads/build/tests/threads/alarm-priority.output:10:(alarm-priority) begin
src/threads/build/tests/threads/alarm-priority.output:11:(alarm-priority) Thread priority 30 woke up.
src/threads/build/tests/threads/alarm-priority.output:12:(alarm-priority) Thread priority 29 woke up.
src/threads/build/tests/threads/alarm-priority.output:13:(alarm-priority) Thread priority 28 woke up.
src/threads/build/tests/threads/alarm-priority.output:14:(alarm-priority) Thread priority 27 woke up.
src/threads/build/tests/threads/alarm-priority.output:15:(alarm-priority) Thread priority 26 woke up.
src/threads/build/tests/threads/alarm-priority.output:16:(alarm-priority) Thread priority 25 woke up.
src/threads/build/tests/threads/alarm-priority.output:17:(alarm-priority) Thread priority 24 woke up.
src/threads/build/tests/threads/alarm-priority.output:18:(alarm-priority) Thread priority 23 woke up.
src/threads/build/tests/threads/alarm-priority.output:19:(alarm-priority) Thread priority 22 woke up.
src/threads/build/tests/threads/alarm-priority.output:20:(alarm-priority) Thread priority 21 woke up.
src/threads/build/tests/threads/alarm-priority.output:21:(alarm-priority) end
src/threads/build/tests/threads/alarm-priority.output:22:Execution of 'alarm-priority' complete.
Binary file src/threads/build/tests/threads/priority-donate-multiple.o matches
src/threads/build/tests/threads/priority-change.d:1:tests/threads/priority-change.o: ../../tests/threads/priority-change.c \
src/threads/build/tests/threads/alarm-simultaneous.output:2:qemu -hda /tmp/xae1nFuASk.dsk -m 4 -net none -nographic -monitor null
src/threads/build/tests/threads/alarm-simultaneous.output:3:Kernel command line: -q run alarm-simultaneous
src/threads/build/tests/threads/alarm-simultaneous.output:9:Executing 'alarm-simultaneous':
src/threads/build/tests/threads/alarm-simultaneous.output:10:(alarm-simultaneous) begin
src/threads/build/tests/threads/alarm-simultaneous.output:11:(alarm-simultaneous) Creating 3 threads to sleep 5 times each.
src/threads/build/tests/threads/alarm-simultaneous.output:12:(alarm-simultaneous) Each thread sleeps 10 ticks each time.
src/threads/build/tests/threads/alarm-simultaneous.output:13:(alarm-simultaneous) Within an iteration, all threads should wake up on the same tick.
src/threads/build/tests/threads/alarm-simultaneous.output:14:(alarm-simultaneous) iteration 0, thread 0: woke up after 10 ticks
src/threads/build/tests/threads/alarm-simultaneous.output:15:(alarm-simultaneous) iteration 0, thread 1: woke up 0 ticks later
src/threads/build/tests/threads/alarm-simultaneous.output:16:(alarm-simultaneous) iteration 0, thread 2: woke up 0 ticks later
src/threads/build/tests/threads/alarm-simultaneous.output:17:(alarm-simultaneous) iteration 1, thread 0: woke up 10 ticks later
src/threads/build/tests/threads/alarm-simultaneous.output:18:(alarm-simultaneous) iteration 1, thread 1: woke up 0 ticks later
src/threads/build/tests/threads/alarm-simultaneous.output:19:(alarm-simultaneous) iteration 1, thread 2: woke up 0 ticks later
src/threads/build/tests/threads/alarm-simultaneous.output:20:(alarm-simultaneous) iteration 2, thread 0: woke up 10 ticks later
src/threads/build/tests/threads/alarm-simultaneous.output:21:(alarm-simultaneous) iteration 2, thread 1: woke up 0 ticks later
src/threads/build/tests/threads/alarm-simultaneous.output:22:(alarm-simultaneous) iteration 2, thread 2: woke up 0 ticks later
src/threads/build/tests/threads/alarm-simultaneous.output:23:(alarm-simultaneous) iteration 3, thread 0: woke up 10 ticks later
src/threads/build/tests/threads/alarm-simultaneous.output:24:(alarm-simultaneous) iteration 3, thread 1: woke up 0 ticks later
src/threads/build/tests/threads/alarm-simultaneous.output:25:(alarm-simultaneous) iteration 3, thread 2: woke up 0 ticks later
src/threads/build/tests/threads/alarm-simultaneous.output:26:(alarm-simultaneous) iteration 4, thread 0: woke up 10 ticks later
src/threads/build/tests/threads/alarm-simultaneous.output:27:(alarm-simultaneous) iteration 4, thread 1: woke up 0 ticks later
src/threads/build/tests/threads/alarm-simultaneous.output:28:(alarm-simultaneous) iteration 4, thread 2: woke up 0 ticks later
src/threads/build/tests/threads/alarm-simultaneous.output:29:(alarm-simultaneous) end
src/threads/build/tests/threads/alarm-simultaneous.output:30:Execution of 'alarm-simultaneous' complete.
src/threads/build/tests/threads/priority-preempt.d:1:tests/threads/priority-preempt.o: ../../tests/threads/priority-preempt.c \
src/threads/build/tests/threads/priority-fifo.output:2:qemu -hda /tmp/rO9iA0Log2.dsk -m 4 -net none -nographic -monitor null
src/threads/build/tests/threads/priority-fifo.output:3:Kernel command line: -q run priority-fifo
src/threads/build/tests/threads/priority-fifo.output:9:Executing 'priority-fifo':
src/threads/build/tests/threads/priority-fifo.output:10:(priority-fifo) begin
src/threads/build/tests/threads/priority-fifo.output:11:(priority-fifo) 16 threads will iterate 16 times in the same order each time.
src/threads/build/tests/threads/priority-fifo.output:12:(priority-fifo) If the order varies then there is a bug.
src/threads/build/tests/threads/priority-fifo.output:13:(priority-fifo) end
src/threads/build/tests/threads/priority-fifo.output:14:Execution of 'priority-fifo' complete.
src/threads/build/tests/threads/priority-donate-chain.result:5:  (priority-donate-chain) begin
src/threads/build/tests/threads/priority-donate-chain.result:6:  (priority-donate-chain) main got lock.
src/threads/build/tests/threads/priority-donate-chain.result:7:  (priority-donate-chain) main should have priority 3.  Actual priority: 3.
src/threads/build/tests/threads/priority-donate-chain.result:8:  (priority-donate-chain) main should have priority 6.  Actual priority: 6.
src/threads/build/tests/threads/priority-donate-chain.result:9:  (priority-donate-chain) main should have priority 9.  Actual priority: 9.
src/threads/build/tests/threads/priority-donate-chain.result:10:  (priority-donate-chain) main should have priority 12.  Actual priority: 12.
src/threads/build/tests/threads/priority-donate-chain.result:11:  (priority-donate-chain) main should have priority 15.  Actual priority: 15.
src/threads/build/tests/threads/priority-donate-chain.result:12:  (priority-donate-chain) main should have priority 18.  Actual priority: 18.
src/threads/build/tests/threads/priority-donate-chain.result:13:  (priority-donate-chain) main should have priority 21.  Actual priority: 21.
src/threads/build/tests/threads/priority-donate-chain.result:14:  (priority-donate-chain) thread 1 got lock
src/threads/build/tests/threads/priority-donate-chain.result:15:  (priority-donate-chain) thread 1 should have priority 21. Actual priority: 21
src/threads/build/tests/threads/priority-donate-chain.result:16:  (priority-donate-chain) thread 2 got lock
src/threads/build/tests/threads/priority-donate-chain.result:17:  (priority-donate-chain) thread 2 should have priority 21. Actual priority: 21
src/threads/build/tests/threads/priority-donate-chain.result:18:  (priority-donate-chain) thread 3 got lock
src/threads/build/tests/threads/priority-donate-chain.result:19:  (priority-donate-chain) thread 3 should have priority 21. Actual priority: 21
src/threads/build/tests/threads/priority-donate-chain.result:20:  (priority-donate-chain) thread 4 got lock
src/threads/build/tests/threads/priority-donate-chain.result:21:  (priority-donate-chain) thread 4 should have priority 21. Actual priority: 21
src/threads/build/tests/threads/priority-donate-chain.result:22:  (priority-donate-chain) thread 5 got lock
src/threads/build/tests/threads/priority-donate-chain.result:23:  (priority-donate-chain) thread 5 should have priority 21. Actual priority: 21
src/threads/build/tests/threads/priority-donate-chain.result:24:  (priority-donate-chain) thread 6 got lock
src/threads/build/tests/threads/priority-donate-chain.result:25:  (priority-donate-chain) thread 6 should have priority 21. Actual priority: 21
src/threads/build/tests/threads/priority-donate-chain.result:26:  (priority-donate-chain) thread 7 got lock
src/threads/build/tests/threads/priority-donate-chain.result:27:  (priority-donate-chain) thread 7 should have priority 21. Actual priority: 21
src/threads/build/tests/threads/priority-donate-chain.result:28:  (priority-donate-chain) thread 7 finishing with priority 21.
src/threads/build/tests/threads/priority-donate-chain.result:29:  (priority-donate-chain) interloper 7 finished.
src/threads/build/tests/threads/priority-donate-chain.result:30:  (priority-donate-chain) thread 6 finishing with priority 18.
src/threads/build/tests/threads/priority-donate-chain.result:31:  (priority-donate-chain) interloper 6 finished.
src/threads/build/tests/threads/priority-donate-chain.result:32:  (priority-donate-chain) thread 5 finishing with priority 15.
src/threads/build/tests/threads/priority-donate-chain.result:33:  (priority-donate-chain) interloper 5 finished.
src/threads/build/tests/threads/priority-donate-chain.result:34:  (priority-donate-chain) thread 4 finishing with priority 12.
src/threads/build/tests/threads/priority-donate-chain.result:35:  (priority-donate-chain) interloper 4 finished.
src/threads/build/tests/threads/priority-donate-chain.result:36:  (priority-donate-chain) thread 3 finishing with priority 9.
src/threads/build/tests/threads/priority-donate-chain.result:37:  (priority-donate-chain) interloper 3 finished.
src/threads/build/tests/threads/priority-donate-chain.result:38:  (priority-donate-chain) thread 2 finishing with priority 6.
src/threads/build/tests/threads/priority-donate-chain.result:39:  (priority-donate-chain) interloper 2 finished.
src/threads/build/tests/threads/priority-donate-chain.result:40:  (priority-donate-chain) thread 1 finishing with priority 3.
src/threads/build/tests/threads/priority-donate-chain.result:41:  (priority-donate-chain) interloper 1 finished.
src/threads/build/tests/threads/priority-donate-chain.result:42:  (priority-donate-chain) main finishing with priority 0.
src/threads/build/tests/threads/priority-donate-chain.result:43:  (priority-donate-chain) end
src/threads/build/tests/threads/priority-donate-chain.result:44:Differences in `diff -u' format:
src/threads/build/tests/threads/priority-donate-chain.result:45:  (priority-donate-chain) begin
src/threads/build/tests/threads/priority-donate-chain.result:46:  (priority-donate-chain) main got lock.
src/threads/build/tests/threads/priority-donate-chain.result:47:- (priority-donate-chain) main should have priority 3.  Actual priority: 3.
src/threads/build/tests/threads/priority-donate-chain.result:48:- (priority-donate-chain) main should have priority 6.  Actual priority: 6.
src/threads/build/tests/threads/priority-donate-chain.result:49:- (priority-donate-chain) main should have priority 9.  Actual priority: 9.
src/threads/build/tests/threads/priority-donate-chain.result:50:- (priority-donate-chain) main should have priority 12.  Actual priority: 12.
src/threads/build/tests/threads/priority-donate-chain.result:51:- (priority-donate-chain) main should have priority 15.  Actual priority: 15.
src/threads/build/tests/threads/priority-donate-chain.result:52:- (priority-donate-chain) main should have priority 18.  Actual priority: 18.
src/threads/build/tests/threads/priority-donate-chain.result:53:- (priority-donate-chain) main should have priority 21.  Actual priority: 21.
src/threads/build/tests/threads/priority-donate-chain.result:54:- (priority-donate-chain) thread 1 got lock
src/threads/build/tests/threads/priority-donate-chain.result:55:- (priority-donate-chain) thread 1 should have priority 21. Actual priority: 21
src/threads/build/tests/threads/priority-donate-chain.result:56:- (priority-donate-chain) thread 2 got lock
src/threads/build/tests/threads/priority-donate-chain.result:57:- (priority-donate-chain) thread 2 should have priority 21. Actual priority: 21
src/threads/build/tests/threads/priority-donate-chain.result:58:- (priority-donate-chain) thread 3 got lock
src/threads/build/tests/threads/priority-donate-chain.result:59:- (priority-donate-chain) thread 3 should have priority 21. Actual priority: 21
src/threads/build/tests/threads/priority-donate-chain.result:60:- (priority-donate-chain) thread 4 got lock
src/threads/build/tests/threads/priority-donate-chain.result:61:- (priority-donate-chain) thread 4 should have priority 21. Actual priority: 21
src/threads/build/tests/threads/priority-donate-chain.result:62:- (priority-donate-chain) thread 5 got lock
src/threads/build/tests/threads/priority-donate-chain.result:63:- (priority-donate-chain) thread 5 should have priority 21. Actual priority: 21
src/threads/build/tests/threads/priority-donate-chain.result:64:- (priority-donate-chain) thread 6 got lock
src/threads/build/tests/threads/priority-donate-chain.result:65:- (priority-donate-chain) thread 6 should have priority 21. Actual priority: 21
src/threads/build/tests/threads/priority-donate-chain.result:66:- (priority-donate-chain) thread 7 got lock
src/threads/build/tests/threads/priority-donate-chain.result:67:- (priority-donate-chain) thread 7 should have priority 21. Actual priority: 21
src/threads/build/tests/threads/priority-donate-chain.result:68:- (priority-donate-chain) thread 7 finishing with priority 21.
src/threads/build/tests/threads/priority-donate-chain.result:69:- (priority-donate-chain) interloper 7 finished.
src/threads/build/tests/threads/priority-donate-chain.result:70:- (priority-donate-chain) thread 6 finishing with priority 18.
src/threads/build/tests/threads/priority-donate-chain.result:71:- (priority-donate-chain) interloper 6 finished.
src/threads/build/tests/threads/priority-donate-chain.result:72:- (priority-donate-chain) thread 5 finishing with priority 15.
src/threads/build/tests/threads/priority-donate-chain.result:73:- (priority-donate-chain) interloper 5 finished.
src/threads/build/tests/threads/priority-donate-chain.result:74:- (priority-donate-chain) thread 4 finishing with priority 12.
src/threads/build/tests/threads/priority-donate-chain.result:75:- (priority-donate-chain) interloper 4 finished.
src/threads/build/tests/threads/priority-donate-chain.result:76:- (priority-donate-chain) thread 3 finishing with priority 9.
src/threads/build/tests/threads/priority-donate-chain.result:77:- (priority-donate-chain) interloper 3 finished.
src/threads/build/tests/threads/priority-donate-chain.result:78:- (priority-donate-chain) thread 2 finishing with priority 6.
src/threads/build/tests/threads/priority-donate-chain.result:79:- (priority-donate-chain) interloper 2 finished.
src/threads/build/tests/threads/priority-donate-chain.result:80:- (priority-donate-chain) thread 1 finishing with priority 3.
src/threads/build/tests/threads/priority-donate-chain.result:81:- (priority-donate-chain) interloper 1 finished.
src/threads/build/tests/threads/priority-donate-chain.result:82:+ (priority-donate-chain) main should have priority 3.  Actual priority: 0.
src/threads/build/tests/threads/priority-donate-chain.result:83:+ (priority-donate-chain) main should have priority 6.  Actual priority: 0.
src/threads/build/tests/threads/priority-donate-chain.result:84:+ (priority-donate-chain) main should have priority 9.  Actual priority: 0.
src/threads/build/tests/threads/priority-donate-chain.result:85:+ (priority-donate-chain) main should have priority 12.  Actual priority: 0.
src/threads/build/tests/threads/priority-donate-chain.result:86:+ (priority-donate-chain) main should have priority 15.  Actual priority: 0.
src/threads/build/tests/threads/priority-donate-chain.result:87:+ (priority-donate-chain) main should have priority 18.  Actual priority: 0.
src/threads/build/tests/threads/priority-donate-chain.result:88:+ (priority-donate-chain) main should have priority 21.  Actual priority: 0.
src/threads/build/tests/threads/priority-donate-chain.result:89:  (priority-donate-chain) main finishing with priority 0.
src/threads/build/tests/threads/priority-donate-chain.result:90:  (priority-donate-chain) end
src/threads/build/tests/threads/priority-donate-sema.result:5:  (priority-donate-sema) begin
src/threads/build/tests/threads/priority-donate-sema.result:6:  (priority-donate-sema) Thread L acquired lock.
src/threads/build/tests/threads/priority-donate-sema.result:7:  (priority-donate-sema) Thread L downed semaphore.
src/threads/build/tests/threads/priority-donate-sema.result:8:  (priority-donate-sema) Thread H acquired lock.
src/threads/build/tests/threads/priority-donate-sema.result:9:  (priority-donate-sema) Thread H finished.
src/threads/build/tests/threads/priority-donate-sema.result:10:  (priority-donate-sema) Thread M finished.
src/threads/build/tests/threads/priority-donate-sema.result:11:  (priority-donate-sema) Thread L finished.
src/threads/build/tests/threads/priority-donate-sema.result:12:  (priority-donate-sema) Main thread finished.
src/threads/build/tests/threads/priority-donate-sema.result:13:  (priority-donate-sema) end
src/threads/build/tests/threads/priority-donate-sema.result:14:Differences in `diff -u' format:
src/threads/build/tests/threads/priority-donate-sema.result:15:  (priority-donate-sema) begin
src/threads/build/tests/threads/priority-donate-sema.result:16:- (priority-donate-sema) Thread L acquired lock.
src/threads/build/tests/threads/priority-donate-sema.result:17:- (priority-donate-sema) Thread L downed semaphore.
src/threads/build/tests/threads/priority-donate-sema.result:18:- (priority-donate-sema) Thread H acquired lock.
src/threads/build/tests/threads/priority-donate-sema.result:19:- (priority-donate-sema) Thread H finished.
src/threads/build/tests/threads/priority-donate-sema.result:20:- (priority-donate-sema) Thread M finished.
src/threads/build/tests/threads/priority-donate-sema.result:21:- (priority-donate-sema) Thread L finished.
src/threads/build/tests/threads/priority-donate-sema.result:22:  (priority-donate-sema) Main thread finished.
src/threads/build/tests/threads/priority-donate-sema.result:23:  (priority-donate-sema) end
Binary file src/threads/build/tests/threads/priority-preempt.o matches
src/threads/build/tests/threads/alarm-single.output:2:qemu -hda /tmp/IiCTtNaUnP.dsk -m 4 -net none -nographic -monitor null
src/threads/build/tests/threads/alarm-single.output:3:Kernel command line: -q run alarm-single
src/threads/build/tests/threads/alarm-single.output:9:Executing 'alarm-single':
src/threads/build/tests/threads/alarm-single.output:10:(alarm-single) begin
src/threads/build/tests/threads/alarm-single.output:11:(alarm-single) Creating 5 threads to sleep 1 times each.
src/threads/build/tests/threads/alarm-single.output:12:(alarm-single) Thread 0 sleeps 10 ticks each time,
src/threads/build/tests/threads/alarm-single.output:13:(alarm-single) thread 1 sleeps 20 ticks each time, and so on.
src/threads/build/tests/threads/alarm-single.output:14:(alarm-single) If successful, product of iteration count and
src/threads/build/tests/threads/alarm-single.output:15:(alarm-single) sleep duration will appear in nondescending order.
src/threads/build/tests/threads/alarm-single.output:16:(alarm-single) thread 0: duration=10, iteration=1, product=10
src/threads/build/tests/threads/alarm-single.output:17:(alarm-single) thread 1: duration=20, iteration=1, product=20
src/threads/build/tests/threads/alarm-single.output:18:(alarm-single) thread 2: duration=30, iteration=1, product=30
src/threads/build/tests/threads/alarm-single.output:19:(alarm-single) thread 3: duration=40, iteration=1, product=40
src/threads/build/tests/threads/alarm-single.output:20:(alarm-single) thread 4: duration=50, iteration=1, product=50
src/threads/build/tests/threads/alarm-single.output:21:(alarm-single) end
src/threads/build/tests/threads/alarm-single.output:22:Execution of 'alarm-single' complete.
src/threads/build/tests/threads/mlfqs-recent-1.d:1:tests/threads/mlfqs-recent-1.o: ../../tests/threads/mlfqs-recent-1.c \
src/threads/build/tests/threads/alarm-priority.d:1:tests/threads/alarm-priority.o: ../../tests/threads/alarm-priority.c \
Binary file src/threads/build/tests/threads/alarm-negative.o matches
Binary file src/threads/build/tests/threads/mlfqs-load-1.o matches
Binary file src/threads/build/tests/threads/priority-change.o matches
src/threads/build/tests/threads/priority-change.result:5:  (priority-change) begin
src/threads/build/tests/threads/priority-change.result:6:  (priority-change) Creating a high-priority thread 2.
src/threads/build/tests/threads/priority-change.result:7:  (priority-change) Thread 2 now lowering priority.
src/threads/build/tests/threads/priority-change.result:8:  (priority-change) Thread 2 should have just lowered its priority.
src/threads/build/tests/threads/priority-change.result:9:  (priority-change) Thread 2 exiting.
src/threads/build/tests/threads/priority-change.result:10:  (priority-change) Thread 2 should have just exited.
src/threads/build/tests/threads/priority-change.result:11:  (priority-change) end
src/threads/build/tests/threads/priority-change.result:12:Differences in `diff -u' format:
src/threads/build/tests/threads/priority-change.result:13:  (priority-change) begin
src/threads/build/tests/threads/priority-change.result:14:  (priority-change) Creating a high-priority thread 2.
src/threads/build/tests/threads/priority-change.result:15:- (priority-change) Thread 2 now lowering priority.
src/threads/build/tests/threads/priority-change.result:16:  (priority-change) Thread 2 should have just lowered its priority.
src/threads/build/tests/threads/priority-change.result:17:- (priority-change) Thread 2 exiting.
src/threads/build/tests/threads/priority-change.result:18:  (priority-change) Thread 2 should have just exited.
src/threads/build/tests/threads/priority-change.result:19:  (priority-change) end
Binary file src/threads/build/tests/threads/priority-donate-one.o matches
src/threads/build/tests/threads/priority-donate-multiple2.d:1:tests/threads/priority-donate-multiple2.o:  \
src/threads/build/tests/threads/priority-donate-multiple2.d:2: ../../tests/threads/priority-donate-multiple2.c ../../lib/stdio.h \
Binary file src/threads/build/tests/threads/priority-donate-chain.o matches
Binary file src/threads/build/tests/threads/alarm-zero.o matches
src/threads/build/tests/threads/priority-donate-chain.d:1:tests/threads/priority-donate-chain.o:  \
src/threads/build/tests/threads/priority-donate-chain.d:2: ../../tests/threads/priority-donate-chain.c ../../lib/stdio.h \
Binary file src/threads/build/tests/threads/alarm-wait.o matches
src/threads/build/tests/threads/priority-donate-one.d:1:tests/threads/priority-donate-one.o:  \
src/threads/build/tests/threads/priority-donate-one.d:2: ../../tests/threads/priority-donate-one.c ../../lib/stdio.h \
Binary file src/threads/build/tests/threads/alarm-priority.o matches
src/threads/build/tests/threads/priority-condvar.d:1:tests/threads/priority-condvar.o: ../../tests/threads/priority-condvar.c \
src/threads/build/tests/threads/priority-donate-lower.result:5:  (priority-donate-lower) begin
src/threads/build/tests/threads/priority-donate-lower.result:6:  (priority-donate-lower) Main thread should have priority 41.  Actual priority: 41.
src/threads/build/tests/threads/priority-donate-lower.result:7:  (priority-donate-lower) Lowering base priority...
src/threads/build/tests/threads/priority-donate-lower.result:8:  (priority-donate-lower) Main thread should have priority 41.  Actual priority: 41.
src/threads/build/tests/threads/priority-donate-lower.result:9:  (priority-donate-lower) acquire: got the lock
src/threads/build/tests/threads/priority-donate-lower.result:10:  (priority-donate-lower) acquire: done
src/threads/build/tests/threads/priority-donate-lower.result:11:  (priority-donate-lower) acquire must already have finished.
src/threads/build/tests/threads/priority-donate-lower.result:12:  (priority-donate-lower) Main thread should have priority 21.  Actual priority: 21.
src/threads/build/tests/threads/priority-donate-lower.result:13:  (priority-donate-lower) end
src/threads/build/tests/threads/priority-donate-lower.result:14:Differences in `diff -u' format:
src/threads/build/tests/threads/priority-donate-lower.result:15:  (priority-donate-lower) begin
src/threads/build/tests/threads/priority-donate-lower.result:16:- (priority-donate-lower) Main thread should have priority 41.  Actual priority: 41.
src/threads/build/tests/threads/priority-donate-lower.result:17:+ (priority-donate-lower) Main thread should have priority 41.  Actual priority: 31.
src/threads/build/tests/threads/priority-donate-lower.result:18:  (priority-donate-lower) Lowering base priority...
src/threads/build/tests/threads/priority-donate-lower.result:19:- (priority-donate-lower) Main thread should have priority 41.  Actual priority: 41.
src/threads/build/tests/threads/priority-donate-lower.result:20:- (priority-donate-lower) acquire: got the lock
src/threads/build/tests/threads/priority-donate-lower.result:21:- (priority-donate-lower) acquire: done
src/threads/build/tests/threads/priority-donate-lower.result:22:+ (priority-donate-lower) Main thread should have priority 41.  Actual priority: 21.
src/threads/build/tests/threads/priority-donate-lower.result:23:  (priority-donate-lower) acquire must already have finished.
src/threads/build/tests/threads/priority-donate-lower.result:24:  (priority-donate-lower) Main thread should have priority 21.  Actual priority: 21.
src/threads/build/tests/threads/priority-donate-lower.result:25:  (priority-donate-lower) end
src/threads/build/tests/threads/priority-change.output:2:qemu -hda /tmp/nGPxnxVvWX.dsk -m 4 -net none -nographic -monitor null
src/threads/build/tests/threads/priority-change.output:3:Kernel command line: -q run priority-change
src/threads/build/tests/threads/priority-change.output:9:Executing 'priority-change':
src/threads/build/tests/threads/priority-change.output:10:(priority-change) begin
src/threads/build/tests/threads/priority-change.output:11:(priority-change) Creating a high-priority thread 2.
src/threads/build/tests/threads/priority-change.output:12:(priority-change) Thread 2 should have just lowered its priority.
src/threads/build/tests/threads/priority-change.output:13:(priority-change) Thread 2 should have just exited.
src/threads/build/tests/threads/priority-change.output:14:(priority-change) end
src/threads/build/tests/threads/priority-change.output:15:Execution of 'priority-change' complete.
src/threads/build/tests/threads/mlfqs-block.d:1:tests/threads/mlfqs-block.o: ../../tests/threads/mlfqs-block.c \
Binary file src/threads/build/tests/threads/priority-fifo.o matches
Binary file src/threads/build/tests/threads/priority-donate-lower.o matches
src/threads/build/tests/threads/priority-donate-one.output:2:qemu -hda /tmp/SboicsviCG.dsk -m 4 -net none -nographic -monitor null
src/threads/build/tests/threads/priority-donate-one.output:3:Kernel command line: -q run priority-donate-one
src/threads/build/tests/threads/priority-donate-one.output:9:Executing 'priority-donate-one':
src/threads/build/tests/threads/priority-donate-one.output:10:(priority-donate-one) begin
src/threads/build/tests/threads/priority-donate-one.output:11:(priority-donate-one) This thread should have priority 32.  Actual priority: 31.
src/threads/build/tests/threads/priority-donate-one.output:12:(priority-donate-one) This thread should have priority 33.  Actual priority: 31.
src/threads/build/tests/threads/priority-donate-one.output:13:(priority-donate-one) acquire2, acquire1 must already have finished, in that order.
src/threads/build/tests/threads/priority-donate-one.output:14:(priority-donate-one) This should be the last line before finishing this test.
src/threads/build/tests/threads/priority-donate-one.output:15:(priority-donate-one) end
src/threads/build/tests/threads/priority-donate-one.output:16:Execution of 'priority-donate-one' complete.
src/threads/build/tests/threads/priority-donate-lower.d:1:tests/threads/priority-donate-lower.o:  \
src/threads/build/tests/threads/priority-donate-lower.d:2: ../../tests/threads/priority-donate-lower.c ../../lib/stdio.h \
src/threads/build/tests/threads/priority-donate-lower.output:2:qemu -hda /tmp/nbzexwdBuY.dsk -m 4 -net none -nographic -monitor null
src/threads/build/tests/threads/priority-donate-lower.output:3:Kernel command line: -q run priority-donate-lower
src/threads/build/tests/threads/priority-donate-lower.output:9:Executing 'priority-donate-lower':
src/threads/build/tests/threads/priority-donate-lower.output:10:(priority-donate-lower) begin
src/threads/build/tests/threads/priority-donate-lower.output:11:(priority-donate-lower) Main thread should have priority 41.  Actual priority: 31.
src/threads/build/tests/threads/priority-donate-lower.output:12:(priority-donate-lower) Lowering base priority...
src/threads/build/tests/threads/priority-donate-lower.output:13:(priority-donate-lower) Main thread should have priority 41.  Actual priority: 21.
src/threads/build/tests/threads/priority-donate-lower.output:14:(priority-donate-lower) acquire must already have finished.
src/threads/build/tests/threads/priority-donate-lower.output:15:(priority-donate-lower) Main thread should have priority 21.  Actual priority: 21.
src/threads/build/tests/threads/priority-donate-lower.output:16:(priority-donate-lower) end
src/threads/build/tests/threads/priority-donate-lower.output:17:Execution of 'priority-donate-lower' complete.
src/threads/build/tests/threads/priority-sema.d:1:tests/threads/priority-sema.o: ../../tests/threads/priority-sema.c \
src/threads/build/tests/threads/priority-donate-multiple.d:1:tests/threads/priority-donate-multiple.o:  \
src/threads/build/tests/threads/priority-donate-multiple.d:2: ../../tests/threads/priority-donate-multiple.c ../../lib/stdio.h \
src/threads/build/tests/threads/priority-donate-nest.output:2:qemu -hda /tmp/xJqyks5Ena.dsk -m 4 -net none -nographic -monitor null
src/threads/build/tests/threads/priority-donate-nest.output:3:Kernel command line: -q run priority-donate-nest
src/threads/build/tests/threads/priority-donate-nest.output:9:Executing 'priority-donate-nest':
src/threads/build/tests/threads/priority-donate-nest.output:10:(priority-donate-nest) begin
src/threads/build/tests/threads/priority-donate-nest.output:11:(priority-donate-nest) Low thread should have priority 32.  Actual priority: 31.
src/threads/build/tests/threads/priority-donate-nest.output:12:(priority-donate-nest) Low thread should have priority 33.  Actual priority: 31.
src/threads/build/tests/threads/priority-donate-nest.output:13:(priority-donate-nest) Medium thread should have priority 33.  Actual priority: 32.
src/threads/build/tests/threads/priority-donate-nest.output:14:(priority-donate-nest) Medium thread got the lock.
src/threads/build/tests/threads/priority-donate-nest.output:15:(priority-donate-nest) High thread got the lock.
src/threads/build/tests/threads/priority-donate-nest.output:16:(priority-donate-nest) High thread finished.
src/threads/build/tests/threads/priority-donate-nest.output:17:(priority-donate-nest) High thread should have just finished.
src/threads/build/tests/threads/priority-donate-nest.output:18:(priority-donate-nest) Middle thread finished.
src/threads/build/tests/threads/priority-donate-nest.output:19:(priority-donate-nest) Medium thread should just have finished.
src/threads/build/tests/threads/priority-donate-nest.output:20:(priority-donate-nest) Low thread should have priority 31.  Actual priority: 31.
src/threads/build/tests/threads/priority-donate-nest.output:21:(priority-donate-nest) end
src/threads/build/tests/threads/priority-donate-nest.output:22:Execution of 'priority-donate-nest' complete.
src/threads/build/tests/threads/priority-fifo.d:1:tests/threads/priority-fifo.o: ../../tests/threads/priority-fifo.c \
Binary file src/threads/build/tests/threads/priority-donate-nest.o matches
src/threads/build/tests/threads/priority-donate-one.result:5:  (priority-donate-one) begin
src/threads/build/tests/threads/priority-donate-one.result:6:  (priority-donate-one) This thread should have priority 32.  Actual priority: 32.
src/threads/build/tests/threads/priority-donate-one.result:7:  (priority-donate-one) This thread should have priority 33.  Actual priority: 33.
src/threads/build/tests/threads/priority-donate-one.result:8:  (priority-donate-one) acquire2: got the lock
src/threads/build/tests/threads/priority-donate-one.result:9:  (priority-donate-one) acquire2: done
src/threads/build/tests/threads/priority-donate-one.result:10:  (priority-donate-one) acquire1: got the lock
src/threads/build/tests/threads/priority-donate-one.result:11:  (priority-donate-one) acquire1: done
src/threads/build/tests/threads/priority-donate-one.result:12:  (priority-donate-one) acquire2, acquire1 must already have finished, in that order.
src/threads/build/tests/threads/priority-donate-one.result:13:  (priority-donate-one) This should be the last line before finishing this test.
src/threads/build/tests/threads/priority-donate-one.result:14:  (priority-donate-one) end
src/threads/build/tests/threads/priority-donate-one.result:15:Differences in `diff -u' format:
src/threads/build/tests/threads/priority-donate-one.result:16:  (priority-donate-one) begin
src/threads/build/tests/threads/priority-donate-one.result:17:- (priority-donate-one) This thread should have priority 32.  Actual priority: 32.
src/threads/build/tests/threads/priority-donate-one.result:18:- (priority-donate-one) This thread should have priority 33.  Actual priority: 33.
src/threads/build/tests/threads/priority-donate-one.result:19:- (priority-donate-one) acquire2: got the lock
src/threads/build/tests/threads/priority-donate-one.result:20:- (priority-donate-one) acquire2: done
src/threads/build/tests/threads/priority-donate-one.result:21:- (priority-donate-one) acquire1: got the lock
src/threads/build/tests/threads/priority-donate-one.result:22:- (priority-donate-one) acquire1: done
src/threads/build/tests/threads/priority-donate-one.result:23:+ (priority-donate-one) This thread should have priority 32.  Actual priority: 31.
src/threads/build/tests/threads/priority-donate-one.result:24:+ (priority-donate-one) This thread should have priority 33.  Actual priority: 31.
src/threads/build/tests/threads/priority-donate-one.result:25:  (priority-donate-one) acquire2, acquire1 must already have finished, in that order.
src/threads/build/tests/threads/priority-donate-one.result:26:  (priority-donate-one) This should be the last line before finishing this test.
src/threads/build/tests/threads/priority-donate-one.result:27:  (priority-donate-one) end
src/threads/build/tests/threads/alarm-multiple.output:2:qemu -hda /tmp/SusuIPzlpy.dsk -m 4 -net none -nographic -monitor null
src/threads/build/tests/threads/alarm-multiple.output:3:Kernel command line: -q run alarm-multiple
src/threads/build/tests/threads/alarm-multiple.output:9:Executing 'alarm-multiple':
src/threads/build/tests/threads/alarm-multiple.output:10:(alarm-multiple) begin
src/threads/build/tests/threads/alarm-multiple.output:11:(alarm-multiple) Creating 5 threads to sleep 7 times each.
src/threads/build/tests/threads/alarm-multiple.output:12:(alarm-multiple) Thread 0 sleeps 10 ticks each time,
src/threads/build/tests/threads/alarm-multiple.output:13:(alarm-multiple) thread 1 sleeps 20 ticks each time, and so on.
src/threads/build/tests/threads/alarm-multiple.output:14:(alarm-multiple) If successful, product of iteration count and
src/threads/build/tests/threads/alarm-multiple.output:15:(alarm-multiple) sleep duration will appear in nondescending order.
src/threads/build/tests/threads/alarm-multiple.output:16:(alarm-multiple) thread 0: duration=10, iteration=1, product=10
src/threads/build/tests/threads/alarm-multiple.output:17:(alarm-multiple) thread 1: duration=20, iteration=1, product=20
src/threads/build/tests/threads/alarm-multiple.output:18:(alarm-multiple) thread 0: duration=10, iteration=2, product=20
src/threads/build/tests/threads/alarm-multiple.output:19:(alarm-multiple) thread 2: duration=30, iteration=1, product=30
src/threads/build/tests/threads/alarm-multiple.output:20:(alarm-multiple) thread 0: duration=10, iteration=3, product=30
src/threads/build/tests/threads/alarm-multiple.output:21:(alarm-multiple) thread 3: duration=40, iteration=1, product=40
src/threads/build/tests/threads/alarm-multiple.output:22:(alarm-multiple) thread 1: duration=20, iteration=2, product=40
src/threads/build/tests/threads/alarm-multiple.output:23:(alarm-multiple) thread 0: duration=10, iteration=4, product=40
src/threads/build/tests/threads/alarm-multiple.output:24:(alarm-multiple) thread 4: duration=50, iteration=1, product=50
src/threads/build/tests/threads/alarm-multiple.output:25:(alarm-multiple) thread 0: duration=10, iteration=5, product=50
src/threads/build/tests/threads/alarm-multiple.output:26:(alarm-multiple) thread 2: duration=30, iteration=2, product=60
src/threads/build/tests/threads/alarm-multiple.output:27:(alarm-multiple) thread 1: duration=20, iteration=3, product=60
src/threads/build/tests/threads/alarm-multiple.output:28:(alarm-multiple) thread 0: duration=10, iteration=6, product=60
src/threads/build/tests/threads/alarm-multiple.output:29:(alarm-multiple) thread 0: duration=10, iteration=7, product=70
src/threads/build/tests/threads/alarm-multiple.output:30:(alarm-multiple) thread 3: duration=40, iteration=2, product=80
src/threads/build/tests/threads/alarm-multiple.output:31:(alarm-multiple) thread 1: duration=20, iteration=4, product=80
src/threads/build/tests/threads/alarm-multiple.output:32:(alarm-multiple) thread 2: duration=30, iteration=3, product=90
src/threads/build/tests/threads/alarm-multiple.output:33:(alarm-multiple) thread 4: duration=50, iteration=2, product=100
src/threads/build/tests/threads/alarm-multiple.output:34:(alarm-multiple) thread 1: duration=20, iteration=5, product=100
src/threads/build/tests/threads/alarm-multiple.output:35:(alarm-multiple) thread 3: duration=40, iteration=3, product=120
src/threads/build/tests/threads/alarm-multiple.output:36:(alarm-multiple) thread 2: duration=30, iteration=4, product=120
src/threads/build/tests/threads/alarm-multiple.output:37:(alarm-multiple) thread 1: duration=20, iteration=6, product=120
src/threads/build/tests/threads/alarm-multiple.output:38:(alarm-multiple) thread 1: duration=20, iteration=7, product=140
src/threads/build/tests/threads/alarm-multiple.output:39:(alarm-multiple) thread 4: duration=50, iteration=3, product=150
src/threads/build/tests/threads/alarm-multiple.output:40:(alarm-multiple) thread 2: duration=30, iteration=5, product=150
src/threads/build/tests/threads/alarm-multiple.output:41:(alarm-multiple) thread 3: duration=40, iteration=4, product=160
src/threads/build/tests/threads/alarm-multiple.output:42:(alarm-multiple) thread 2: duration=30, iteration=6, product=180
src/threads/build/tests/threads/alarm-multiple.output:43:(alarm-multiple) thread 4: duration=50, iteration=4, product=200
src/threads/build/tests/threads/alarm-multiple.output:44:(alarm-multiple) thread 3: duration=40, iteration=5, product=200
src/threads/build/tests/threads/alarm-multiple.output:45:(alarm-multiple) thread 2: duration=30, iteration=7, product=210
src/threads/build/tests/threads/alarm-multiple.output:46:(alarm-multiple) thread 3: duration=40, iteration=6, product=240
src/threads/build/tests/threads/alarm-multiple.output:47:(alarm-multiple) thread 4: duration=50, iteration=5, product=250
src/threads/build/tests/threads/alarm-multiple.output:48:(alarm-multiple) thread 3: duration=40, iteration=7, product=280
src/threads/build/tests/threads/alarm-multiple.output:49:(alarm-multiple) thread 4: duration=50, iteration=6, product=300
src/threads/build/tests/threads/alarm-multiple.output:50:(alarm-multiple) thread 4: duration=50, iteration=7, product=350
src/threads/build/tests/threads/alarm-multiple.output:51:(alarm-multiple) end
src/threads/build/tests/threads/alarm-multiple.output:52:Execution of 'alarm-multiple' complete.
src/threads/build/tests/threads/mlfqs-load-60.d:1:tests/threads/mlfqs-load-60.o: ../../tests/threads/mlfqs-load-60.c \
src/threads/build/tests/threads/priority-donate-multiple.result:5:  (priority-donate-multiple) begin
src/threads/build/tests/threads/priority-donate-multiple.result:6:  (priority-donate-multiple) Main thread should have priority 32.  Actual priority: 32.
src/threads/build/tests/threads/priority-donate-multiple.result:7:  (priority-donate-multiple) Main thread should have priority 33.  Actual priority: 33.
src/threads/build/tests/threads/priority-donate-multiple.result:8:  (priority-donate-multiple) Thread b acquired lock b.
src/threads/build/tests/threads/priority-donate-multiple.result:9:  (priority-donate-multiple) Thread b finished.
src/threads/build/tests/threads/priority-donate-multiple.result:10:  (priority-donate-multiple) Thread b should have just finished.
src/threads/build/tests/threads/priority-donate-multiple.result:11:  (priority-donate-multiple) Main thread should have priority 32.  Actual priority: 32.
src/threads/build/tests/threads/priority-donate-multiple.result:12:  (priority-donate-multiple) Thread a acquired lock a.
src/threads/build/tests/threads/priority-donate-multiple.result:13:  (priority-donate-multiple) Thread a finished.
src/threads/build/tests/threads/priority-donate-multiple.result:14:  (priority-donate-multiple) Thread a should have just finished.
src/threads/build/tests/threads/priority-donate-multiple.result:15:  (priority-donate-multiple) Main thread should have priority 31.  Actual priority: 31.
src/threads/build/tests/threads/priority-donate-multiple.result:16:  (priority-donate-multiple) end
src/threads/build/tests/threads/priority-donate-multiple.result:17:Differences in `diff -u' format:
src/threads/build/tests/threads/priority-donate-multiple.result:18:  (priority-donate-multiple) begin
src/threads/build/tests/threads/priority-donate-multiple.result:19:- (priority-donate-multiple) Main thread should have priority 32.  Actual priority: 32.
src/threads/build/tests/threads/priority-donate-multiple.result:20:- (priority-donate-multiple) Main thread should have priority 33.  Actual priority: 33.
src/threads/build/tests/threads/priority-donate-multiple.result:21:- (priority-donate-multiple) Thread b acquired lock b.
src/threads/build/tests/threads/priority-donate-multiple.result:22:- (priority-donate-multiple) Thread b finished.
src/threads/build/tests/threads/priority-donate-multiple.result:23:+ (priority-donate-multiple) Main thread should have priority 32.  Actual priority: 31.
src/threads/build/tests/threads/priority-donate-multiple.result:24:+ (priority-donate-multiple) Main thread should have priority 33.  Actual priority: 31.
src/threads/build/tests/threads/priority-donate-multiple.result:25:  (priority-donate-multiple) Thread b should have just finished.
src/threads/build/tests/threads/priority-donate-multiple.result:26:- (priority-donate-multiple) Main thread should have priority 32.  Actual priority: 32.
src/threads/build/tests/threads/priority-donate-multiple.result:27:- (priority-donate-multiple) Thread a acquired lock a.
src/threads/build/tests/threads/priority-donate-multiple.result:28:- (priority-donate-multiple) Thread a finished.
src/threads/build/tests/threads/priority-donate-multiple.result:29:+ (priority-donate-multiple) Main thread should have priority 32.  Actual priority: 31.
src/threads/build/tests/threads/priority-donate-multiple.result:30:  (priority-donate-multiple) Thread a should have just finished.
src/threads/build/tests/threads/priority-donate-multiple.result:31:  (priority-donate-multiple) Main thread should have priority 31.  Actual priority: 31.
src/threads/build/tests/threads/priority-donate-multiple.result:32:  (priority-donate-multiple) end
src/threads/build/tests/threads/priority-condvar.result:5:  (priority-condvar) begin
src/threads/build/tests/threads/priority-condvar.result:6:  (priority-condvar) Thread priority 23 starting.
src/threads/build/tests/threads/priority-condvar.result:7:  (priority-condvar) Thread priority 22 starting.
src/threads/build/tests/threads/priority-condvar.result:8:  (priority-condvar) Thread priority 21 starting.
src/threads/build/tests/threads/priority-condvar.result:9:  (priority-condvar) Thread priority 30 starting.
src/threads/build/tests/threads/priority-condvar.result:10:  (priority-condvar) Thread priority 29 starting.
src/threads/build/tests/threads/priority-condvar.result:11:  (priority-condvar) Thread priority 28 starting.
src/threads/build/tests/threads/priority-condvar.result:12:  (priority-condvar) Thread priority 27 starting.
src/threads/build/tests/threads/priority-condvar.result:13:  (priority-condvar) Thread priority 26 starting.
src/threads/build/tests/threads/priority-condvar.result:14:  (priority-condvar) Thread priority 25 starting.
src/threads/build/tests/threads/priority-condvar.result:15:  (priority-condvar) Thread priority 24 starting.
src/threads/build/tests/threads/priority-condvar.result:16:  (priority-condvar) Signaling...
src/threads/build/tests/threads/priority-condvar.result:17:  (priority-condvar) Thread priority 30 woke up.
src/threads/build/tests/threads/priority-condvar.result:18:  (priority-condvar) Signaling...
src/threads/build/tests/threads/priority-condvar.result:19:  (priority-condvar) Thread priority 29 woke up.
src/threads/build/tests/threads/priority-condvar.result:20:  (priority-condvar) Signaling...
src/threads/build/tests/threads/priority-condvar.result:21:  (priority-condvar) Thread priority 28 woke up.
src/threads/build/tests/threads/priority-condvar.result:22:  (priority-condvar) Signaling...
src/threads/build/tests/threads/priority-condvar.result:23:  (priority-condvar) Thread priority 27 woke up.
src/threads/build/tests/threads/priority-condvar.result:24:  (priority-condvar) Signaling...
src/threads/build/tests/threads/priority-condvar.result:25:  (priority-condvar) Thread priority 26 woke up.
src/threads/build/tests/threads/priority-condvar.result:26:  (priority-condvar) Signaling...
src/threads/build/tests/threads/priority-condvar.result:27:  (priority-condvar) Thread priority 25 woke up.
src/threads/build/tests/threads/priority-condvar.result:28:  (priority-condvar) Signaling...
src/threads/build/tests/threads/priority-condvar.result:29:  (priority-condvar) Thread priority 24 woke up.
src/threads/build/tests/threads/priority-condvar.result:30:  (priority-condvar) Signaling...
src/threads/build/tests/threads/priority-condvar.result:31:  (priority-condvar) Thread priority 23 woke up.
src/threads/build/tests/threads/priority-condvar.result:32:  (priority-condvar) Signaling...
src/threads/build/tests/threads/priority-condvar.result:33:  (priority-condvar) Thread priority 22 woke up.
src/threads/build/tests/threads/priority-condvar.result:34:  (priority-condvar) Signaling...
src/threads/build/tests/threads/priority-condvar.result:35:  (priority-condvar) Thread priority 21 woke up.
src/threads/build/tests/threads/priority-condvar.result:36:  (priority-condvar) end
src/threads/build/tests/threads/priority-condvar.result:37:Differences in `diff -u' format:
src/threads/build/tests/threads/priority-condvar.result:38:  (priority-condvar) begin
src/threads/build/tests/threads/priority-condvar.result:39:- (priority-condvar) Thread priority 23 starting.
src/threads/build/tests/threads/priority-condvar.result:40:- (priority-condvar) Thread priority 22 starting.
src/threads/build/tests/threads/priority-condvar.result:41:- (priority-condvar) Thread priority 21 starting.
src/threads/build/tests/threads/priority-condvar.result:42:- (priority-condvar) Thread priority 30 starting.
src/threads/build/tests/threads/priority-condvar.result:43:- (priority-condvar) Thread priority 29 starting.
src/threads/build/tests/threads/priority-condvar.result:44:- (priority-condvar) Thread priority 28 starting.
src/threads/build/tests/threads/priority-condvar.result:45:- (priority-condvar) Thread priority 27 starting.
src/threads/build/tests/threads/priority-condvar.result:46:- (priority-condvar) Thread priority 26 starting.
src/threads/build/tests/threads/priority-condvar.result:47:- (priority-condvar) Thread priority 25 starting.
src/threads/build/tests/threads/priority-condvar.result:48:- (priority-condvar) Thread priority 24 starting.
src/threads/build/tests/threads/priority-condvar.result:49:  (priority-condvar) Signaling...
src/threads/build/tests/threads/priority-condvar.result:50:- (priority-condvar) Thread priority 30 woke up.
src/threads/build/tests/threads/priority-condvar.result:51:  (priority-condvar) Signaling...
src/threads/build/tests/threads/priority-condvar.result:52:- (priority-condvar) Thread priority 29 woke up.
src/threads/build/tests/threads/priority-condvar.result:53:  (priority-condvar) Signaling...
src/threads/build/tests/threads/priority-condvar.result:54:- (priority-condvar) Thread priority 28 woke up.
src/threads/build/tests/threads/priority-condvar.result:55:  (priority-condvar) Signaling...
src/threads/build/tests/threads/priority-condvar.result:56:- (priority-condvar) Thread priority 27 woke up.
src/threads/build/tests/threads/priority-condvar.result:57:  (priority-condvar) Signaling...
src/threads/build/tests/threads/priority-condvar.result:58:- (priority-condvar) Thread priority 26 woke up.
src/threads/build/tests/threads/priority-condvar.result:59:  (priority-condvar) Signaling...
src/threads/build/tests/threads/priority-condvar.result:60:- (priority-condvar) Thread priority 25 woke up.
src/threads/build/tests/threads/priority-condvar.result:61:  (priority-condvar) Signaling...
src/threads/build/tests/threads/priority-condvar.result:62:- (priority-condvar) Thread priority 24 woke up.
src/threads/build/tests/threads/priority-condvar.result:63:  (priority-condvar) Signaling...
src/threads/build/tests/threads/priority-condvar.result:64:- (priority-condvar) Thread priority 23 woke up.
src/threads/build/tests/threads/priority-condvar.result:65:  (priority-condvar) Signaling...
src/threads/build/tests/threads/priority-condvar.result:66:- (priority-condvar) Thread priority 22 woke up.
src/threads/build/tests/threads/priority-condvar.result:67:  (priority-condvar) Signaling...
src/threads/build/tests/threads/priority-condvar.result:68:- (priority-condvar) Thread priority 21 woke up.
src/threads/build/tests/threads/priority-condvar.result:69:  (priority-condvar) end
Binary file src/threads/build/tests/threads/mlfqs-recent-1.o matches
Binary file src/threads/build/tests/threads/mlfqs-fair.o matches
src/threads/build/tests/threads/mlfqs-load-avg.d:1:tests/threads/mlfqs-load-avg.o: ../../tests/threads/mlfqs-load-avg.c \
Binary file src/threads/build/tests/threads/priority-donate-multiple2.o matches
src/threads/build/tests/threads/alarm-zero.d:1:tests/threads/alarm-zero.o: ../../tests/threads/alarm-zero.c \
src/threads/build/tests/threads/priority-preempt.output:2:qemu -hda /tmp/TT5YzplDNV.dsk -m 4 -net none -nographic -monitor null
src/threads/build/tests/threads/priority-preempt.output:3:Kernel command line: -q run priority-preempt
src/threads/build/tests/threads/priority-preempt.output:9:Executing 'priority-preempt':
src/threads/build/tests/threads/priority-preempt.output:10:(priority-preempt) begin
src/threads/build/tests/threads/priority-preempt.output:11:(priority-preempt) The high-priority thread should have already completed.
src/threads/build/tests/threads/priority-preempt.output:12:(priority-preempt) end
src/threads/build/tests/threads/priority-preempt.output:13:Execution of 'priority-preempt' complete.
src/threads/build/tests/threads/priority-sema.output:2:qemu -hda /tmp/j10x9f3Ucv.dsk -m 4 -net none -nographic -monitor null
src/threads/build/tests/threads/priority-sema.output:3:Kernel command line: -q run priority-sema
src/threads/build/tests/threads/priority-sema.output:9:Executing 'priority-sema':
src/threads/build/tests/threads/priority-sema.output:10:(priority-sema) begin
src/threads/build/tests/threads/priority-sema.output:11:(priority-sema) Back in main thread.
src/threads/build/tests/threads/priority-sema.output:12:(priority-sema) Back in main thread.
src/threads/build/tests/threads/priority-sema.output:13:(priority-sema) Back in main thread.
src/threads/build/tests/threads/priority-sema.output:14:(priority-sema) Back in main thread.
src/threads/build/tests/threads/priority-sema.output:15:(priority-sema) Back in main thread.
src/threads/build/tests/threads/priority-sema.output:16:(priority-sema) Back in main thread.
src/threads/build/tests/threads/priority-sema.output:17:(priority-sema) Back in main thread.
src/threads/build/tests/threads/priority-sema.output:18:(priority-sema) Back in main thread.
src/threads/build/tests/threads/priority-sema.output:19:(priority-sema) Back in main thread.
src/threads/build/tests/threads/priority-sema.output:20:(priority-sema) Back in main thread.
src/threads/build/tests/threads/priority-sema.output:21:(priority-sema) end
src/threads/build/tests/threads/priority-sema.output:22:Execution of 'priority-sema' complete.
src/threads/build/tests/threads/priority-donate-nest.d:1:tests/threads/priority-donate-nest.o:  \
src/threads/build/tests/threads/priority-donate-nest.d:2: ../../tests/threads/priority-donate-nest.c ../../lib/stdio.h \
src/threads/build/tests/threads/alarm-negative.d:1:tests/threads/alarm-negative.o: ../../tests/threads/alarm-negative.c \
src/threads/build/tests/threads/priority-donate-sema.output:2:qemu -hda /tmp/GNhswCo06l.dsk -m 4 -net none -nographic -monitor null
src/threads/build/tests/threads/priority-donate-sema.output:3:Kernel command line: -q run priority-donate-sema
src/threads/build/tests/threads/priority-donate-sema.output:9:Executing 'priority-donate-sema':
src/threads/build/tests/threads/priority-donate-sema.output:10:(priority-donate-sema) begin
src/threads/build/tests/threads/priority-donate-sema.output:11:(priority-donate-sema) Main thread finished.
src/threads/build/tests/threads/priority-donate-sema.output:12:(priority-donate-sema) end
src/threads/build/tests/threads/priority-donate-sema.output:13:Execution of 'priority-donate-sema' complete.
src/threads/build/tests/threads/alarm-zero.output:2:qemu -hda /tmp/yZfTcTnuCD.dsk -m 4 -net none -nographic -monitor null
src/threads/build/tests/threads/alarm-zero.output:3:Kernel command line: -q run alarm-zero
src/threads/build/tests/threads/alarm-zero.output:9:Executing 'alarm-zero':
src/threads/build/tests/threads/alarm-zero.output:10:(alarm-zero) begin
src/threads/build/tests/threads/alarm-zero.output:11:(alarm-zero) PASS
src/threads/build/tests/threads/alarm-zero.output:12:(alarm-zero) end
src/threads/build/tests/threads/alarm-zero.output:13:Execution of 'alarm-zero' complete.
src/threads/build/tests/threads/alarm-simultaneous.d:1:tests/threads/alarm-simultaneous.o:  \
src/threads/build/tests/threads/alarm-simultaneous.d:2: ../../tests/threads/alarm-simultaneous.c ../../lib/stdio.h \
src/threads/build/tests/threads/mlfqs-fair.d:1:tests/threads/mlfqs-fair.o: ../../tests/threads/mlfqs-fair.c \
Binary file src/threads/build/tests/threads/priority-condvar.o matches
src/threads/build/tests/threads/priority-preempt.result:5:  (priority-preempt) begin
src/threads/build/tests/threads/priority-preempt.result:6:  (priority-preempt) Thread high-priority iteration 0
src/threads/build/tests/threads/priority-preempt.result:7:  (priority-preempt) Thread high-priority iteration 1
src/threads/build/tests/threads/priority-preempt.result:8:  (priority-preempt) Thread high-priority iteration 2
src/threads/build/tests/threads/priority-preempt.result:9:  (priority-preempt) Thread high-priority iteration 3
src/threads/build/tests/threads/priority-preempt.result:10:  (priority-preempt) Thread high-priority iteration 4
src/threads/build/tests/threads/priority-preempt.result:11:  (priority-preempt) Thread high-priority done!
src/threads/build/tests/threads/priority-preempt.result:12:  (priority-preempt) The high-priority thread should have already completed.
src/threads/build/tests/threads/priority-preempt.result:13:  (priority-preempt) end
src/threads/build/tests/threads/priority-preempt.result:14:Differences in `diff -u' format:
src/threads/build/tests/threads/priority-preempt.result:15:  (priority-preempt) begin
src/threads/build/tests/threads/priority-preempt.result:16:- (priority-preempt) Thread high-priority iteration 0
src/threads/build/tests/threads/priority-preempt.result:17:- (priority-preempt) Thread high-priority iteration 1
src/threads/build/tests/threads/priority-preempt.result:18:- (priority-preempt) Thread high-priority iteration 2
src/threads/build/tests/threads/priority-preempt.result:19:- (priority-preempt) Thread high-priority iteration 3
src/threads/build/tests/threads/priority-preempt.result:20:- (priority-preempt) Thread high-priority iteration 4
src/threads/build/tests/threads/priority-preempt.result:21:- (priority-preempt) Thread high-priority done!
src/threads/build/tests/threads/priority-preempt.result:22:  (priority-preempt) The high-priority thread should have already completed.
src/threads/build/tests/threads/priority-preempt.result:23:  (priority-preempt) end
src/threads/build/tests/threads/mlfqs-load-1.d:1:tests/threads/mlfqs-load-1.o: ../../tests/threads/mlfqs-load-1.c \
src/threads/build/tests/threads/priority-donate-multiple2.output:2:qemu -hda /tmp/grVxYutJjh.dsk -m 4 -net none -nographic -monitor null
src/threads/build/tests/threads/priority-donate-multiple2.output:3:Kernel command line: -q run priority-donate-multiple2
src/threads/build/tests/threads/priority-donate-multiple2.output:9:Executing 'priority-donate-multiple2':
src/threads/build/tests/threads/priority-donate-multiple2.output:10:(priority-donate-multiple2) begin
src/threads/build/tests/threads/priority-donate-multiple2.output:11:(priority-donate-multiple2) Main thread should have priority 34.  Actual priority: 31.
src/threads/build/tests/threads/priority-donate-multiple2.output:12:(priority-donate-multiple2) Main thread should have priority 36.  Actual priority: 31.
src/threads/build/tests/threads/priority-donate-multiple2.output:13:(priority-donate-multiple2) Main thread should have priority 36.  Actual priority: 31.
src/threads/build/tests/threads/priority-donate-multiple2.output:14:(priority-donate-multiple2) Threads b, a, c should have just finished, in that order.
src/threads/build/tests/threads/priority-donate-multiple2.output:15:(priority-donate-multiple2) Main thread should have priority 31.  Actual priority: 31.
src/threads/build/tests/threads/priority-donate-multiple2.output:16:(priority-donate-multiple2) end
src/threads/build/tests/threads/priority-donate-multiple2.output:17:Execution of 'priority-donate-multiple2' complete.
Binary file src/threads/build/tests/threads/alarm-simultaneous.o matches
src/threads/build/tests/threads/priority-donate-multiple2.result:5:  (priority-donate-multiple2) begin
src/threads/build/tests/threads/priority-donate-multiple2.result:6:  (priority-donate-multiple2) Main thread should have priority 34.  Actual priority: 34.
src/threads/build/tests/threads/priority-donate-multiple2.result:7:  (priority-donate-multiple2) Main thread should have priority 36.  Actual priority: 36.
src/threads/build/tests/threads/priority-donate-multiple2.result:8:  (priority-donate-multiple2) Main thread should have priority 36.  Actual priority: 36.
src/threads/build/tests/threads/priority-donate-multiple2.result:9:  (priority-donate-multiple2) Thread b acquired lock b.
src/threads/build/tests/threads/priority-donate-multiple2.result:10:  (priority-donate-multiple2) Thread b finished.
src/threads/build/tests/threads/priority-donate-multiple2.result:11:  (priority-donate-multiple2) Thread a acquired lock a.
src/threads/build/tests/threads/priority-donate-multiple2.result:12:  (priority-donate-multiple2) Thread a finished.
src/threads/build/tests/threads/priority-donate-multiple2.result:13:  (priority-donate-multiple2) Thread c finished.
src/threads/build/tests/threads/priority-donate-multiple2.result:14:  (priority-donate-multiple2) Threads b, a, c should have just finished, in that order.
src/threads/build/tests/threads/priority-donate-multiple2.result:15:  (priority-donate-multiple2) Main thread should have priority 31.  Actual priority: 31.
src/threads/build/tests/threads/priority-donate-multiple2.result:16:  (priority-donate-multiple2) end
src/threads/build/tests/threads/priority-donate-multiple2.result:17:Differences in `diff -u' format:
src/threads/build/tests/threads/priority-donate-multiple2.result:18:  (priority-donate-multiple2) begin
src/threads/build/tests/threads/priority-donate-multiple2.result:19:- (priority-donate-multiple2) Main thread should have priority 34.  Actual priority: 34.
src/threads/build/tests/threads/priority-donate-multiple2.result:20:- (priority-donate-multiple2) Main thread should have priority 36.  Actual priority: 36.
src/threads/build/tests/threads/priority-donate-multiple2.result:21:- (priority-donate-multiple2) Main thread should have priority 36.  Actual priority: 36.
src/threads/build/tests/threads/priority-donate-multiple2.result:22:- (priority-donate-multiple2) Thread b acquired lock b.
src/threads/build/tests/threads/priority-donate-multiple2.result:23:- (priority-donate-multiple2) Thread b finished.
src/threads/build/tests/threads/priority-donate-multiple2.result:24:- (priority-donate-multiple2) Thread a acquired lock a.
src/threads/build/tests/threads/priority-donate-multiple2.result:25:- (priority-donate-multiple2) Thread a finished.
src/threads/build/tests/threads/priority-donate-multiple2.result:26:- (priority-donate-multiple2) Thread c finished.
src/threads/build/tests/threads/priority-donate-multiple2.result:27:+ (priority-donate-multiple2) Main thread should have priority 34.  Actual priority: 31.
src/threads/build/tests/threads/priority-donate-multiple2.result:28:+ (priority-donate-multiple2) Main thread should have priority 36.  Actual priority: 31.
src/threads/build/tests/threads/priority-donate-multiple2.result:29:+ (priority-donate-multiple2) Main thread should have priority 36.  Actual priority: 31.
src/threads/build/tests/threads/priority-donate-multiple2.result:30:  (priority-donate-multiple2) Threads b, a, c should have just finished, in that order.
src/threads/build/tests/threads/priority-donate-multiple2.result:31:  (priority-donate-multiple2) Main thread should have priority 31.  Actual priority: 31.
src/threads/build/tests/threads/priority-donate-multiple2.result:32:  (priority-donate-multiple2) end
Binary file src/threads/build/tests/threads/mlfqs-load-60.o matches
src/threads/build/tests/threads/alarm-negative.output:2:qemu -hda /tmp/S9AWWQsyN0.dsk -m 4 -net none -nographic -monitor null
src/threads/build/tests/threads/alarm-negative.output:3:Kernel command line: -q run alarm-negative
src/threads/build/tests/threads/alarm-negative.output:9:Executing 'alarm-negative':
src/threads/build/tests/threads/alarm-negative.output:10:(alarm-negative) begin
src/threads/build/tests/threads/alarm-negative.output:11:(alarm-negative) PASS
src/threads/build/tests/threads/alarm-negative.output:12:(alarm-negative) end
src/threads/build/tests/threads/alarm-negative.output:13:Execution of 'alarm-negative' complete.
src/threads/build/tests/threads/priority-donate-multiple.output:2:qemu -hda /tmp/V4RgTcMM1L.dsk -m 4 -net none -nographic -monitor null
src/threads/build/tests/threads/priority-donate-multiple.output:3:Kernel command line: -q run priority-donate-multiple
src/threads/build/tests/threads/priority-donate-multiple.output:9:Executing 'priority-donate-multiple':
src/threads/build/tests/threads/priority-donate-multiple.output:10:(priority-donate-multiple) begin
src/threads/build/tests/threads/priority-donate-multiple.output:11:(priority-donate-multiple) Main thread should have priority 32.  Actual priority: 31.
src/threads/build/tests/threads/priority-donate-multiple.output:12:(priority-donate-multiple) Main thread should have priority 33.  Actual priority: 31.
src/threads/build/tests/threads/priority-donate-multiple.output:13:(priority-donate-multiple) Thread b should have just finished.
src/threads/build/tests/threads/priority-donate-multiple.output:14:(priority-donate-multiple) Main thread should have priority 32.  Actual priority: 31.
src/threads/build/tests/threads/priority-donate-multiple.output:15:(priority-donate-multiple) Thread a should have just finished.
src/threads/build/tests/threads/priority-donate-multiple.output:16:(priority-donate-multiple) Main thread should have priority 31.  Actual priority: 31.
src/threads/build/tests/threads/priority-donate-multiple.output:17:(priority-donate-multiple) end
src/threads/build/tests/threads/priority-donate-multiple.output:18:Execution of 'priority-donate-multiple' complete.
src/threads/build/tests/threads/priority-donate-nest.result:5:  (priority-donate-nest) begin
src/threads/build/tests/threads/priority-donate-nest.result:6:  (priority-donate-nest) Low thread should have priority 32.  Actual priority: 32.
src/threads/build/tests/threads/priority-donate-nest.result:7:  (priority-donate-nest) Low thread should have priority 33.  Actual priority: 33.
src/threads/build/tests/threads/priority-donate-nest.result:8:  (priority-donate-nest) Medium thread should have priority 33.  Actual priority: 33.
src/threads/build/tests/threads/priority-donate-nest.result:9:  (priority-donate-nest) Medium thread got the lock.
src/threads/build/tests/threads/priority-donate-nest.result:10:  (priority-donate-nest) High thread got the lock.
src/threads/build/tests/threads/priority-donate-nest.result:11:  (priority-donate-nest) High thread finished.
src/threads/build/tests/threads/priority-donate-nest.result:12:  (priority-donate-nest) High thread should have just finished.
src/threads/build/tests/threads/priority-donate-nest.result:13:  (priority-donate-nest) Middle thread finished.
src/threads/build/tests/threads/priority-donate-nest.result:14:  (priority-donate-nest) Medium thread should just have finished.
src/threads/build/tests/threads/priority-donate-nest.result:15:  (priority-donate-nest) Low thread should have priority 31.  Actual priority: 31.
src/threads/build/tests/threads/priority-donate-nest.result:16:  (priority-donate-nest) end
src/threads/build/tests/threads/priority-donate-nest.result:17:Differences in `diff -u' format:
src/threads/build/tests/threads/priority-donate-nest.result:18:  (priority-donate-nest) begin
src/threads/build/tests/threads/priority-donate-nest.result:19:- (priority-donate-nest) Low thread should have priority 32.  Actual priority: 32.
src/threads/build/tests/threads/priority-donate-nest.result:20:- (priority-donate-nest) Low thread should have priority 33.  Actual priority: 33.
src/threads/build/tests/threads/priority-donate-nest.result:21:- (priority-donate-nest) Medium thread should have priority 33.  Actual priority: 33.
src/threads/build/tests/threads/priority-donate-nest.result:22:+ (priority-donate-nest) Low thread should have priority 32.  Actual priority: 31.
src/threads/build/tests/threads/priority-donate-nest.result:23:+ (priority-donate-nest) Low thread should have priority 33.  Actual priority: 31.
src/threads/build/tests/threads/priority-donate-nest.result:24:+ (priority-donate-nest) Medium thread should have priority 33.  Actual priority: 32.
src/threads/build/tests/threads/priority-donate-nest.result:25:  (priority-donate-nest) Medium thread got the lock.
src/threads/build/tests/threads/priority-donate-nest.result:26:  (priority-donate-nest) High thread got the lock.
src/threads/build/tests/threads/priority-donate-nest.result:27:  (priority-donate-nest) High thread finished.
src/threads/build/tests/threads/priority-donate-nest.result:28:  (priority-donate-nest) High thread should have just finished.
src/threads/build/tests/threads/priority-donate-nest.result:29:  (priority-donate-nest) Middle thread finished.
src/threads/build/tests/threads/priority-donate-nest.result:30:  (priority-donate-nest) Medium thread should just have finished.
src/threads/build/tests/threads/priority-donate-nest.result:31:  (priority-donate-nest) Low thread should have priority 31.  Actual priority: 31.
src/threads/build/tests/threads/priority-donate-nest.result:32:  (priority-donate-nest) end
Binary file src/threads/build/devices/vga.o matches
Binary file src/threads/build/devices/input.o matches
Binary file src/threads/build/devices/intq.o matches
Binary file src/threads/build/devices/disk.o matches
Binary file src/threads/build/devices/timer.o matches
Binary file src/threads/build/devices/serial.o matches
Binary file src/threads/build/devices/kbd.o matches
Binary file src/threads/build/lib/arithmetic.o matches
Binary file src/threads/build/lib/stdio.o matches
Binary file src/threads/build/lib/string.o matches
Binary file src/threads/build/lib/random.o matches
Binary file src/threads/build/lib/debug.o matches
Binary file src/threads/build/lib/kernel/list.o matches
Binary file src/threads/build/lib/kernel/hash.o matches
Binary file src/threads/build/lib/kernel/bitmap.o matches
Binary file src/threads/build/lib/kernel/debug.o matches
Binary file src/threads/build/lib/kernel/console.o matches
Binary file src/threads/build/lib/stdlib.o matches
Binary file src/threads/build/kernel.o matches
src/threads/build/threads/thread.d:6:  ../../threads/intr-stubs.h ../../threads/palloc.h \
src/threads/build/threads/kernel.lds.s:1:OUTPUT_FORMAT("elf32-i386")
Binary file src/threads/build/threads/malloc.o matches
Binary file src/threads/build/threads/palloc.o matches
Binary file src/threads/build/threads/thread.o matches
Binary file src/threads/build/threads/init.o matches
Binary file src/threads/build/threads/switch.o matches
Binary file src/threads/build/threads/interrupt.o matches
src/threads/build/threads/interrupt.d:5:  ../../threads/intr-stubs.h ../../threads/io.h ../../threads/thread.h \
Binary file src/threads/build/threads/synch.o matches
src/threads/build/threads/intr-stubs.d:1:threads/intr-stubs.o: ../../threads/intr-stubs.S ../../threads/loader.h
Binary file src/threads/build/threads/intr-stubs.o matches
Binary file src/threads/build/os.dsk matches
Binary file src/threads/build/kernel.bin matches
src/threads/loader.S:47:#### 0x7c00-0x7e00 (512 bytes).  Then it jumps to the beginning of it,
src/threads/loader.S:48:#### in real mode.  This code switches into protected mode (32-bit
src/threads/loader.S:55:#define CR0_EM 0x00000004      /* (Floating-point) Emulation. */
src/threads/loader.S:57:#define CR0_WP 0x00010000      /* Write-Protect enable in kernel mode. */
src/threads/loader.S:63:# Code runs in real mode, which is a 16-bit segment.
src/threads/loader.S:114:#### clear if successful, with AX = (kB of physical memory) - 1024.
src/threads/loader.S:143:# See [IA32-v3a] section 3.7.6 "Page-Directory and Page-Table Entries"
src/threads/loader.S:156:# Set up one-to-map linear to physical map for the first 64 MB of RAM.
src/threads/loader.S:157:# See [IA32-v3a] section 3.7.6 "Page-Directory and Page-Table Entries"
src/threads/loader.S:189:#       write-protect bits in page tables (!).
src/threads/loader.S:190:#    EM (Emulation): forces floating-point instructions to trap.
src/threads/loader.S:197:# We're now in protected mode in a 16-bit segment.  The CPU still has
src/threads/loader.S:198:# the real-mode code segment cached in %cs's segment descriptor.  We
src/threads/loader.S:200:# Because we're not in a 32-bit segment the data32 prefix is needed to
src/threads/loader.S:201:# jump to a 32-bit offset.
src/threads/loader.S:205:# We're now in protected mode in a 32-bit segment.
src/threads/loader.S:310:	.word	0x17			# sizeof (gdt) - 1
src/threads/loader.S:332:	.org LOADER_RAM_PGS - LOADER_BASE
src/threads/loader.S:336:#### Command-line arguments and their count.
src/threads/loader.S:339:	.org LOADER_ARG_CNT - LOADER_BASE
src/threads/loader.S:342:	.org LOADER_ARGS - LOADER_BASE
src/threads/loader.S:346:#### Boot-sector signature.
src/threads/loader.S:348:	.org LOADER_SIG - LOADER_BASE
src/threads/io.h:51:  /* See [IA32-v2a] "IN". */
src/threads/io.h:62:  /* See [IA32-v2a] "INS". */
src/threads/io.h:74:  /* See [IA32-v2a] "IN". */
src/threads/io.h:79:/* Reads CNT 16-bit (halfword) units from PORT, one after
src/threads/io.h:84:  /* See [IA32-v2a] "INS". */
src/threads/io.h:95:  /* See [IA32-v2a] "IN". */
src/threads/io.h:101:/* Reads CNT 32-bit (word) units from PORT, one after another,
src/threads/io.h:106:  /* See [IA32-v2a] "INS". */
src/threads/io.h:117:  /* See [IA32-v2b] "OUT". */
src/threads/io.h:121:/* Writes to PORT each byte of data in the CNT-byte buffer
src/threads/io.h:126:  /* See [IA32-v2b] "OUTS". */
src/threads/io.h:133:/* Writes the 16-bit DATA to PORT. */
src/threads/io.h:137:  /* See [IA32-v2b] "OUT". */
src/threads/io.h:141:/* Writes to PORT each 16-bit unit (halfword) of data in the
src/threads/io.h:142:   CNT-halfword buffer starting at ADDR. */
src/threads/io.h:146:  /* See [IA32-v2b] "OUTS". */
src/threads/io.h:153:/* Writes the 32-bit DATA to PORT. */
src/threads/io.h:157:  /* See [IA32-v2b] "OUT". */
src/threads/io.h:161:/* Writes to PORT each 32-bit unit (word) of data in the CNT-word
src/threads/io.h:166:  /* See [IA32-v2b] "OUTS". */
src/threads/intr-stubs.h:6:   These are little snippets of code in intr-stubs.S, one for
src/threads/intr-stubs.h:9:   See intr-stubs.S for more information.
src/threads/intr-stubs.h:19:#endif /* threads/intr-stubs.h */
src/threads/bochsout.txt:19:00000000000i[     ]   x86-64 support: no
src/threads/bochsout.txt:35:00000000000i[MEM0 ] rom at 0xf0000/65536 ('/usr/local//share/bochs/BIOS-bochs-latest')
src/threads/bochsout.txt:36:00000000000i[MEM0 ] rom at 0xc0000/32768 ('/usr/local//share/bochs/VGABIOS-lgpl-latest')
src/threads/bochsout.txt:51:00000000000i[HD   ] HD on ata0-0: '/tmp/JtHvZ22sK0.dsk' 'flat' mode 
src/threads/bochsout.txt:78:00000317563i[KBD  ] reset-disable command received
src/threads/bochsout.txt:87:00000737822i[BIOS ] ata0-0: PCHS=1/16/63 translation=none LCHS=1/16/63
src/threads/init.h:15:/* -q: Power off when kernel tasks complete? */
src/threads/Make.vars:1:# -*- makefile -*-
src/threads/Make.vars:7:SIMULATOR = --qemu
src/threads/pte.h:15:   +----------------------+----------------------+----------------------+
src/threads/pte.h:17:   +----------------------+----------------------+----------------------+
src/threads/pte.h:44:   Pintos reference guide chapter, or [IA32-v3a] 3.7.6
src/threads/pte.h:45:   "Page-Directory and Page-Table Entries".
src/threads/pte.h:50:   +------------------------------------+------------------------+
src/threads/pte.h:52:   +------------------------------------+------------------------+
src/threads/pte.h:65:#define PTE_W 0x2               /* 1=read/write, 0=read-only. */
src/threads/kernel.lds.S:3:OUTPUT_FORMAT("elf32-i386")
src/threads/kernel.lds.S:13:  /* Kernel starts with code, followed by read-only data and writable data. */
src/threads/kernel.lds.S:20:  /* BSS (zero-initialized data) is after everything else. */
src/Makefile:5:	@echo "This top-level make has only 'clean' targets."
src/Makefile:10:	for d in $(CLEAN_SUBDIRS); do $(MAKE) -C $$d $@; done
src/Makefile:11:	rm -f TAGS tags
src/Makefile:14:	find . -name '*~' -exec rm '{}' \;
src/Makefile:17:TAGS_SOURCES = find $(TAGS_SUBDIRS) -name \*.[chS] -print
src/Makefile:29:	cscope -b -q -k
src/filesys/free-map.c:1:#include "filesys/free-map.h"
src/filesys/free-map.c:17:    PANIC ("bitmap creation failed--disk is too large");
src/filesys/fsutil.c:73:   string "PUT\0" followed by a 32-bit little-endian integer
src/filesys/fsutil.c:127:      size -= chunk_size;
src/filesys/fsutil.c:138:   followed by the file's size in bytes as a 32-bit,
src/filesys/fsutil.c:139:   little-endian integer.  Subsequent sectors receive the file's
src/filesys/fsutil.c:189:      memset (buffer + chunk_size, 0, DISK_SECTOR_SIZE - chunk_size);
src/filesys/fsutil.c:191:      size -= chunk_size;
src/filesys/filesys.c:6:#include "filesys/free-map.h"
src/filesys/inode.c:7:#include "filesys/free-map.h"
src/filesys/inode.c:13:/* On-disk inode.
src/filesys/inode.c:31:/* In-memory inode. */
src/filesys/inode.c:44:   Returns -1 if INODE does not contain data for a byte at offset
src/filesys/inode.c:50:  if (pos < inode->data.length)
src/filesys/inode.c:51:    return inode->data.start + pos / DISK_SECTOR_SIZE;
src/filesys/inode.c:53:    return -1;
src/filesys/inode.c:88:      disk_inode->length = length;
src/filesys/inode.c:89:      disk_inode->magic = INODE_MAGIC;
src/filesys/inode.c:90:      if (free_map_allocate (sectors, &disk_inode->start))
src/filesys/inode.c:99:                disk_write (filesys_disk, disk_inode->start + i, zeros); 
src/filesys/inode.c:122:      if (inode->sector == sector) 
src/filesys/inode.c:135:  list_push_front (&open_inodes, &inode->elem);
src/filesys/inode.c:136:  inode->sector = sector;
src/filesys/inode.c:137:  inode->open_cnt = 1;
src/filesys/inode.c:138:  inode->deny_write_cnt = 0;
src/filesys/inode.c:139:  inode->removed = false;
src/filesys/inode.c:140:  disk_read (filesys_disk, inode->sector, &inode->data);
src/filesys/inode.c:149:    inode->open_cnt++;
src/filesys/inode.c:157:  return inode->sector;
src/filesys/inode.c:171:  if (--inode->open_cnt == 0)
src/filesys/inode.c:174:      list_remove (&inode->elem);
src/filesys/inode.c:177:      if (inode->removed) 
src/filesys/inode.c:179:          free_map_release (inode->sector, 1);
src/filesys/inode.c:180:          free_map_release (inode->data.start,
src/filesys/inode.c:181:                            bytes_to_sectors (inode->data.length)); 
src/filesys/inode.c:194:  inode->removed = true;
src/filesys/inode.c:214:      off_t inode_left = inode_length (inode) - offset;
src/filesys/inode.c:215:      int sector_left = DISK_SECTOR_SIZE - sector_ofs;
src/filesys/inode.c:243:      size -= chunk_size;
src/filesys/inode.c:265:  if (inode->deny_write_cnt)
src/filesys/inode.c:275:      off_t inode_left = inode_length (inode) - offset;
src/filesys/inode.c:276:      int sector_left = DISK_SECTOR_SIZE - sector_ofs;
src/filesys/inode.c:311:      size -= chunk_size;
src/filesys/inode.c:325:  inode->deny_write_cnt++;
src/filesys/inode.c:326:  ASSERT (inode->deny_write_cnt <= inode->open_cnt);
src/filesys/inode.c:329:/* Re-enables writes to INODE.
src/filesys/inode.c:335:  ASSERT (inode->deny_write_cnt > 0);
src/filesys/inode.c:336:  ASSERT (inode->deny_write_cnt <= inode->open_cnt);
src/filesys/inode.c:337:  inode->deny_write_cnt--;
src/filesys/inode.c:344:  return inode->data.length;
src/filesys/directory.c:40:      dir->inode = inode;
src/filesys/directory.c:41:      dir->pos = 0;
src/filesys/directory.c:65:  return dir_open (inode_reopen (dir->inode));
src/filesys/directory.c:74:      inode_close (dir->inode);
src/filesys/directory.c:83:  return dir->inode;
src/filesys/directory.c:88:   if EP is non-null, and sets *OFSP to the byte offset of the
src/filesys/directory.c:89:   directory entry if OFSP is non-null.
src/filesys/directory.c:101:  for (ofs = 0; inode_read_at (dir->inode, &e, sizeof e, ofs) == sizeof e;
src/filesys/directory.c:161:     current end-of-file.
src/filesys/directory.c:166:  for (ofs = 0; inode_read_at (dir->inode, &e, sizeof e, ofs) == sizeof e;
src/filesys/directory.c:175:  success = inode_write_at (dir->inode, &e, sizeof e, ofs) == sizeof e;
src/filesys/directory.c:206:  if (inode_write_at (dir->inode, &e, sizeof e, ofs) != sizeof e) 
src/filesys/directory.c:226:  while (inode_read_at (dir->inode, &e, sizeof e, dir->pos) == sizeof e) 
src/filesys/directory.c:228:      dir->pos += sizeof e;
src/filesys/free-map.h:17:#endif /* filesys/free-map.h */
src/filesys/Make.vars:1:# -*- makefile -*-
src/filesys/Make.vars:3:os.dsk: DEFINES = -DUSERPROG -DFILESYS
src/filesys/Make.vars:6:GRADING_FILE = $(SRCDIR)/tests/filesys/Grading.no-vm
src/filesys/Make.vars:7:SIMULATOR = --qemu
src/filesys/Make.vars:10:#os.dsk: DEFINES += -DVM
src/filesys/Make.vars:13:#GRADING_FILE = $(SRCDIR)/tests/filesys/Grading.with-vm
src/filesys/file.c:23:      file->inode = inode;
src/filesys/file.c:24:      file->pos = 0;
src/filesys/file.c:25:      file->deny_write = false;
src/filesys/file.c:41:  return file_open (inode_reopen (file->inode));
src/filesys/file.c:51:      inode_close (file->inode);
src/filesys/file.c:60:  return file->inode;
src/filesys/file.c:71:  off_t bytes_read = inode_read_at (file->inode, buffer, size, file->pos);
src/filesys/file.c:72:  file->pos += bytes_read;
src/filesys/file.c:84:  return inode_read_at (file->inode, buffer, size, file_ofs);
src/filesys/file.c:97:  off_t bytes_written = inode_write_at (file->inode, buffer, size, file->pos);
src/filesys/file.c:98:  file->pos += bytes_written;
src/filesys/file.c:113:  return inode_write_at (file->inode, buffer, size, file_ofs);
src/filesys/file.c:122:  if (!file->deny_write) 
src/filesys/file.c:124:      file->deny_write = true;
src/filesys/file.c:125:      inode_deny_write (file->inode);
src/filesys/file.c:129:/* Re-enables write operations on FILE's underlying inode.
src/filesys/file.c:136:  if (file->deny_write) 
src/filesys/file.c:138:      file->deny_write = false;
src/filesys/file.c:139:      inode_allow_write (file->inode);
src/filesys/file.c:148:  return inode_length (file->inode);
src/filesys/file.c:158:  file->pos = new_pos;
src/filesys/file.c:167:  return file->pos;
src/misc/bochs-2.2.6-solaris-link.patch:1:--- bochs-2.2.6.orig/Makefile.in	2006-04-03 16:34:51.170387000 -0700
src/misc/bochs-2.2.6-solaris-link.patch:2:+++ bochs-2.2.6/Makefile.in	2006-04-03 16:34:57.480303000 -0700
src/misc/bochs-2.2.6-solaris-link.patch:3:@@ -93,7 +93,7 @@
src/misc/bochs-2.2.6-solaris-link.patch:4: CFLAGS = @CFLAGS@ @GUI_CFLAGS@ $(MCH_CFLAGS) $(FLA_FLAGS) @DEFINE_PLUGIN_PATH@ -DBX_SHARE_PATH='"$(sharedir)"'
src/misc/bochs-2.2.6-solaris-link.patch:5: CXXFLAGS = @CXXFLAGS@ @GUI_CXXFLAGS@ $(MCH_CFLAGS) $(FLA_FLAGS) @DEFINE_PLUGIN_PATH@ -DBX_SHARE_PATH='"$(sharedir)"'
src/misc/bochs-2.2.6-solaris-link.patch:7:-LDFLAGS = @LDFLAGS@
src/misc/bochs-2.2.6-solaris-link.patch:8:+LDFLAGS = @LDFLAGS@ -lsocket
src/misc/bochs-2.2.6-solaris-link.patch:11: #   linux needs just -lreadline
src/misc/bochs-2.2.6-big-endian.patch:1:diff -urp bochs-2.2.6/gdbstub.cc bochs-2.2.6.orig/gdbstub.cc
src/misc/bochs-2.2.6-big-endian.patch:2:--- bochs-2.2.6.orig/gdbstub.cc	2006-01-17 09:15:29.000000000 -0800
src/misc/bochs-2.2.6-big-endian.patch:3:+++ bochs-2.2.6/gdbstub.cc	2006-04-03 13:47:39.000000000 -0700
src/misc/bochs-2.2.6-big-endian.patch:4:@@ -672,35 +672,36 @@
src/misc/bochs-2.2.6-big-endian.patch:8:-            registers[0] = EAX;
src/misc/bochs-2.2.6-big-endian.patch:9:-            registers[1] = ECX;
src/misc/bochs-2.2.6-big-endian.patch:10:-            registers[2] = EDX;
src/misc/bochs-2.2.6-big-endian.patch:11:-            registers[3] = EBX;
src/misc/bochs-2.2.6-big-endian.patch:12:-            registers[4] = ESP;
src/misc/bochs-2.2.6-big-endian.patch:13:-            registers[5] = EBP;
src/misc/bochs-2.2.6-big-endian.patch:14:-            registers[6] = ESI;
src/misc/bochs-2.2.6-big-endian.patch:15:-            registers[7] = EDI;
src/misc/bochs-2.2.6-big-endian.patch:26:-                 registers[8] = EIP + 1;
src/misc/bochs-2.2.6-big-endian.patch:31:-                 registers[8] = EIP;
src/misc/bochs-2.2.6-big-endian.patch:34:-            registers[9] = BX_CPU_THIS_PTR read_eflags();
src/misc/bochs-2.2.6-big-endian.patch:35:-            registers[10] = 
src/misc/bochs-2.2.6-big-endian.patch:36:-              BX_CPU_THIS_PTR sregs[BX_SEG_REG_CS].selector.value;
src/misc/bochs-2.2.6-big-endian.patch:37:-            registers[11] = 
src/misc/bochs-2.2.6-big-endian.patch:38:-              BX_CPU_THIS_PTR sregs[BX_SEG_REG_SS].selector.value;
src/misc/bochs-2.2.6-big-endian.patch:39:-            registers[12] = 
src/misc/bochs-2.2.6-big-endian.patch:40:-              BX_CPU_THIS_PTR sregs[BX_SEG_REG_DS].selector.value;
src/misc/bochs-2.2.6-big-endian.patch:41:-            registers[13] = 
src/misc/bochs-2.2.6-big-endian.patch:42:-              BX_CPU_THIS_PTR sregs[BX_SEG_REG_ES].selector.value;
src/misc/bochs-2.2.6-big-endian.patch:43:-            registers[14] = 
src/misc/bochs-2.2.6-big-endian.patch:44:-              BX_CPU_THIS_PTR sregs[BX_SEG_REG_FS].selector.value;
src/misc/bochs-2.2.6-big-endian.patch:45:-            registers[15] = 
src/misc/bochs-2.2.6-big-endian.patch:46:-              BX_CPU_THIS_PTR sregs[BX_SEG_REG_GS].selector.value;
src/misc/bochs-2.2.6-ms-extensions.patch:1:diff -urp orig/bochs-2.1.1/gui/Makefile.in bochs-2.1.1/gui/Makefile.in
src/misc/bochs-2.2.6-ms-extensions.patch:2:--- orig/bochs-2.1.1/gui/Makefile.in	2003-11-28 07:07:28.000000000 -0800
src/misc/bochs-2.2.6-ms-extensions.patch:3:+++ bochs-2.1.1/gui/Makefile.in	2004-09-13 15:05:09.402039000 -0700
src/misc/bochs-2.2.6-ms-extensions.patch:4:@@ -44,7 +44,7 @@ SHELL = /bin/sh
src/misc/bochs-2.2.6-ms-extensions.patch:8:-CXXFLAGS = $(BX_INCDIRS) @CXXFLAGS@  @GUI_CXXFLAGS@
src/misc/bochs-2.2.6-ms-extensions.patch:9:+CXXFLAGS = $(BX_INCDIRS) @CXXFLAGS@  @GUI_CXXFLAGS@ -fms-extensions
src/misc/gcc-3.3.6-cross-howto:2:cross-compiler:
src/misc/gcc-3.3.6-cross-howto:6:PREFIX=/usr/class/cs140/`uname -m`
src/misc/gcc-3.3.6-cross-howto:10:wget ftp://ftp.gnu.org/pub/gnu/binutils/binutils-2.15.tar.bz2
src/misc/gcc-3.3.6-cross-howto:11:wget ftp://sources.redhat.com/pub/newlib/newlib-1.13.0.tar.gz
src/misc/gcc-3.3.6-cross-howto:12:wget ftp://ftp.gnu.org/pub/gnu/gcc/gcc-3.3.6/gcc-core-3.3.6.tar.bz2
src/misc/gcc-3.3.6-cross-howto:13:wget ftp://ftp.gnu.org/pub/gnu/gdb/gdb-6.3.tar.bz2
src/misc/gcc-3.3.6-cross-howto:15:bzcat binutils-2.15.tar.bz2 | tar x
src/misc/gcc-3.3.6-cross-howto:16:tar xzf newlib-1.13.0.tar.gz
src/misc/gcc-3.3.6-cross-howto:17:bzcat gcc-core-3.3.6.tar.bz2 | tar x
src/misc/gcc-3.3.6-cross-howto:18:bzcat gdb-6.3.tar.bz2 | tar x
src/misc/gcc-3.3.6-cross-howto:20:cd $TMP/binutils-2.15
src/misc/gcc-3.3.6-cross-howto:23:../configure --target=i386-elf --prefix=$PREFIX
src/misc/gcc-3.3.6-cross-howto:24:make LDFLAGS=-lintl
src/misc/gcc-3.3.6-cross-howto:27:cd $TMP/gcc-3.3.6
src/misc/gcc-3.3.6-cross-howto:30:../configure --target=i386-elf --prefix=$PREFIX --with-gnu-as --with-as=$PREFIX/bin/i386-elf-as --with-gnu-ld --with-ld=$PREFIX/bin/i386-elf-ld --with-headers=$TMP/newlib-1.13.0/newlib/libc/include --with-newlib
src/misc/gcc-3.3.6-cross-howto:34:cd $TMP/gdb-6.3
src/misc/gcc-3.3.6-cross-howto:37:../configure --target=i386-elf --prefix=$PREFIX --disable-tui
src/misc/gcc-3.3.6-cross-howto:38:make LDFLAGS=-lintl
src/misc/bochs-2.2.6-jitter.patch:1:diff -urp bochs-2.2.6/iodev/pit82c54.cc bochs-2.2.6.orig/iodev/pit82c54.cc
src/misc/bochs-2.2.6-jitter.patch:2:--- bochs-2.2.6.orig/iodev/pit82c54.cc	2006-01-08 12:39:08.000000000 -0800
src/misc/bochs-2.2.6-jitter.patch:3:+++ bochs-2.2.6/iodev/pit82c54.cc	2006-04-03 14:00:27.000000000 -0700
src/misc/bochs-2.2.6-jitter.patch:4:@@ -28,6 +28,7 @@
src/misc/bochs-2.2.6-jitter.patch:9: #define LOG_THIS this->
src/misc/bochs-2.2.6-jitter.patch:12:@@ -359,7 +360,13 @@
src/misc/bochs-2.2.6-jitter.patch:16:-	    set_count(thisctr, thisctr.inlatch);
src/misc/bochs-2.2.6-jitter.patch:24: 	    thisctr.next_change_time=(thisctr.count_binary-1) & 0xFFFF;
src/misc/bochs-2.2.6-jitter.patch:27:diff -urp bochs-2.2.6/main.cc bochs-2.2.6.orig/main.cc
src/misc/bochs-2.2.6-jitter.patch:28:--- bochs-2.2.6.orig/main.cc	2006-01-22 04:31:15.000000000 -0800
src/misc/bochs-2.2.6-jitter.patch:29:+++ bochs-2.2.6/main.cc	2006-04-03 14:00:54.000000000 -0700
src/misc/bochs-2.2.6-jitter.patch:30:@@ -105,6 +105,7 @@
src/misc/bochs-2.2.6-jitter.patch:38:@@ -459,6 +460,13 @@
src/misc/bochs-2.2.6-jitter.patch:39:     else if (!strcmp ("-q", argv[arg])) {
src/misc/bochs-2.2.6-jitter.patch:40:       SIM->get_param_enum(BXP_BOCHS_START)->set (BX_QUICK_START);
src/misc/bochs-2.2.6-jitter.patch:42:+    else if (!strcmp ("-j", argv[arg])) {
src/misc/bochs-2.2.6-jitter.patch:43:+      if (++arg >= argc) BX_PANIC(("-j must be followed by a number"));
src/misc/bochs-2.2.6-jitter.patch:49:     else if (!strcmp ("-f", argv[arg])) {
src/misc/bochs-2.2.6-jitter.patch:50:       if (++arg >= argc) BX_PANIC(("-f must be followed by a filename"));
src/misc/bochs-2.2.6-jitter.patch:52:diff -up /home/blp/cs140/bochs-2.2.6/bochs.h\~ /home/blp/cs140/bochs-2.2.6/bochs.h
src/misc/bochs-2.2.6-jitter.patch:53:--- bochs-2.2.6/bochs.h.orig	2006-01-28 08:16:02.000000000 -0800
src/misc/bochs-2.2.6-jitter.patch:54:+++ bochs-2.2.6/bochs.h	2006-04-03 14:03:54.000000000 -0700
src/misc/bochs-2.2.6-jitter.patch:55:@@ -698,4 +698,6 @@ int bx_init_hardware ();
src/misc/bochs-2.2.6-gdbstub-ENN.patch:1:--- bochs-2.2.6/gdbstub.cc	2006-01-17 12:15:29.000000000 -0500
src/misc/bochs-2.2.6-gdbstub-ENN.patch:2:+++ bochs-2.2.6-patched/gdbstub.cc	2007-02-06 23:04:51.095523904 -0500
src/misc/bochs-2.2.6-gdbstub-ENN.patch:3:@@ -515,7 +515,7 @@
src/misc/bochs-2.2.6-gdbstub-ENN.patch:7:-                           put_reply("ENN");
src/misc/bochs-2.2.6-gdbstub-ENN.patch:12:@@ -761,7 +761,7 @@
src/misc/bochs-2.2.6-gdbstub-ENN.patch:16:-                 put_reply("ENN");
src/misc/bochs-2.2.6-gdbstub-ENN.patch:21:@@ -782,7 +782,7 @@
src/misc/bochs-2.2.6-gdbstub-ENN.patch:25:-                 put_reply("ENN");
src/misc/bochs-2.2.6-build.sh:1:#! /bin/sh -e
src/misc/bochs-2.2.6-build.sh:3:if test -z "$SRCDIR" || test -z "$PINTOSDIR" || test -z "$DSTDIR"; then
src/misc/bochs-2.2.6-build.sh:5:    echo "  where <srcdir> contains bochs-2.2.6.tar.gz"
src/misc/bochs-2.2.6-build.sh:14:mkdir bochs-2.2.6
src/misc/bochs-2.2.6-build.sh:15:tar xzf $SRCDIR/bochs-2.2.6.tar.gz
src/misc/bochs-2.2.6-build.sh:16:cd bochs-2.2.6
src/misc/bochs-2.2.6-build.sh:17:cat $PINTOSDIR/src/misc/bochs-2.2.6-ms-extensions.patch | patch -p1
src/misc/bochs-2.2.6-build.sh:18:cat $PINTOSDIR/src/misc/bochs-2.2.6-big-endian.patch | patch -p1
src/misc/bochs-2.2.6-build.sh:19:cat $PINTOSDIR/src/misc/bochs-2.2.6-jitter.patch | patch -p1
src/misc/bochs-2.2.6-build.sh:20:cat $PINTOSDIR/src/misc/bochs-2.2.6-triple-fault.patch | patch -p1
src/misc/bochs-2.2.6-build.sh:21:cat $PINTOSDIR/src/misc/bochs-2.2.6-solaris-tty.patch | patch -p1
src/misc/bochs-2.2.6-build.sh:22:cat $PINTOSDIR/src/misc/bochs-2.2.6-page-fault-segv.patch | patch -p1
src/misc/bochs-2.2.6-build.sh:23:cat $PINTOSDIR/src/misc/bochs-2.2.6-paranoia.patch | patch -p1
src/misc/bochs-2.2.6-build.sh:24:cat $PINTOSDIR/src/misc/bochs-2.2.6-gdbstub-ENN.patch | patch -p1
src/misc/bochs-2.2.6-build.sh:25:if test "`uname -s`" = "SunOS"; then
src/misc/bochs-2.2.6-build.sh:26:    cat $PINTOSDIR/src/misc/bochs-2.2.6-solaris-link.patch | patch -p1
src/misc/bochs-2.2.6-build.sh:28:CFGOPTS="--with-x --with-x11 --with-term --with-nogui --prefix=$DSTDIR"
src/misc/bochs-2.2.6-build.sh:31:        ../configure $CFGOPTS --enable-gdb-stub && 
src/misc/bochs-2.2.6-build.sh:35:mkdir with-dbg &&
src/misc/bochs-2.2.6-build.sh:36:        cd with-dbg &&
src/misc/bochs-2.2.6-build.sh:37:        ../configure --enable-debugger $CFGOPTS &&
src/misc/bochs-2.2.6-build.sh:39:        cp bochs $DSTDIR/bin/bochs-dbg &&
src/misc/bochs-2.2.6-triple-fault.patch:1:diff -u bochs-2.2.6.orig/cpu/exception.cc bochs-2.2.6/cpu/exception.cc
src/misc/bochs-2.2.6-triple-fault.patch:2:--- bochs-2.2.6.orig/cpu/exception.cc
src/misc/bochs-2.2.6-triple-fault.patch:3:+++ bochs-2.2.6/cpu/exception.cc
src/misc/bochs-2.2.6-triple-fault.patch:4:@@ -841,6 +841,13 @@ void BX_CPU_C::exception(unsigned vector
src/misc/bochs-2.2.6-triple-fault.patch:18:@@ -860,6 +867,13 @@ void BX_CPU_C::exception(unsigned vector
src/misc/bochs-2.2.6-triple-fault.patch:32:diff -u bochs-2.2.6.orig/gdbstub.cc bochs-2.2.6/gdbstub.cc
src/misc/bochs-2.2.6-triple-fault.patch:33:--- bochs-2.2.6.orig/gdbstub.cc
src/misc/bochs-2.2.6-triple-fault.patch:34:+++ bochs-2.2.6/gdbstub.cc
src/misc/bochs-2.2.6-triple-fault.patch:35:@@ -466,19 +466,19 @@ static void debug_loop(void)
src/misc/bochs-2.2.6-triple-fault.patch:40:                  bx_cpu.cpu_loop(-1);
src/misc/bochs-2.2.6-triple-fault.patch:45:-                 if (last_stop_reason == GDBSTUB_EXECUTION_BREAKPOINT ||
src/misc/bochs-2.2.6-triple-fault.patch:46:-                     last_stop_reason == GDBSTUB_TRACE)
src/misc/bochs-2.2.6-triple-fault.patch:53:-                      write_signal(&buf[1], SIGTRAP);
src/misc/bochs-2.2.6-paranoia.patch:1:Index: bochs-2.2.6/iodev/hdimage.h
src/misc/bochs-2.2.6-paranoia.patch:2:diff -u bochs-2.2.6/iodev/hdimage.h\~ bochs-2.2.6/iodev/hdimage.h
src/misc/bochs-2.2.6-paranoia.patch:3:--- bochs-2.2.6/iodev/hdimage.h~ 2005-11-06 03:07:01.000000000 -0800
src/misc/bochs-2.2.6-paranoia.patch:4:+++ bochs-2.2.6/iodev/hdimage.h 2006-09-28 15:55:50.000000000 -0700
src/misc/bochs-2.2.6-paranoia.patch:5:@@ -273,14 +273,8 @@ class sparse_image_t : public device_ima
src/misc/bochs-2.2.6-paranoia.patch:9:-#ifndef PARANOID
src/misc/bochs-2.2.6-paranoia.patch:10:-       sparse_image_t::
src/misc/bochs-2.2.6-paranoia.patch:11:-#endif
src/misc/bochs-2.2.6-paranoia.patch:14:-#ifndef PARANOID
src/misc/bochs-2.2.6-paranoia.patch:15:-       sparse_image_t::
src/misc/bochs-2.2.6-paranoia.patch:16:-#endif
src/misc/bochs-2.2.6-page-fault-segv.patch:1:Index: bochs-2.2.6/cpu/exception.cc
src/misc/bochs-2.2.6-page-fault-segv.patch:2:diff -u bochs-2.2.6/cpu/exception.cc\~ bochs-2.2.6/cpu/exception.cc
src/misc/bochs-2.2.6-page-fault-segv.patch:3:--- bochs-2.2.6/cpu/exception.cc~ 2006-09-28 15:51:39.000000000 -0700
src/misc/bochs-2.2.6-page-fault-segv.patch:4:+++ bochs-2.2.6/cpu/exception.cc 2006-12-08 11:14:33.000000000 -0800
src/misc/bochs-2.2.6-page-fault-segv.patch:5:@@ -1033,6 +1033,10 @@ void BX_CPU_C::exception(unsigned vector
src/misc/bochs-2.2.6-page-fault-segv.patch:16:Index: bochs-2.2.6/gdbstub.cc
src/misc/bochs-2.2.6-page-fault-segv.patch:17:diff -u bochs-2.2.6/gdbstub.cc\~ bochs-2.2.6/gdbstub.cc
src/misc/bochs-2.2.6-page-fault-segv.patch:18:--- bochs-2.2.6/gdbstub.cc~ 2006-09-28 15:51:39.000000000 -0700
src/misc/bochs-2.2.6-page-fault-segv.patch:19:+++ bochs-2.2.6/gdbstub.cc 2006-12-08 11:12:03.000000000 -0800
src/misc/bochs-2.2.6-page-fault-segv.patch:20:@@ -26,6 +26,7 @@ static int last_stop_reason = GDBSTUB_ST
src/misc/bochs-2.2.6-page-fault-segv.patch:28:@@ -271,6 +272,12 @@ int bx_gdbstub_check(unsigned int eip)
src/misc/bochs-2.2.6-page-fault-segv.patch:41:@@ -452,6 +459,10 @@ static void debug_loop(void)
src/misc/bochs-2.2.6-page-fault-segv.patch:52:@@ -476,10 +487,14 @@ static void debug_loop(void)
src/misc/bochs-2.2.6-page-fault-segv.patch:56:-                 else
src/misc/bochs-2.2.6-page-fault-segv.patch:68:Index: bochs-2.2.6/bochs.h
src/misc/bochs-2.2.6-page-fault-segv.patch:69:diff -u bochs-2.2.6/bochs.h\~ bochs-2.2.6/bochs.h
src/misc/bochs-2.2.6-page-fault-segv.patch:70:--- bochs-2.2.6/bochs.h~ 2006-09-28 15:51:39.000000000 -0700
src/misc/bochs-2.2.6-page-fault-segv.patch:71:+++ bochs-2.2.6/bochs.h 2006-12-08 11:14:19.000000000 -0800
src/misc/bochs-2.2.6-page-fault-segv.patch:72:@@ -375,6 +375,7 @@ BOCHSAPI extern logfunc_t *genlog;
src/misc/gdb-macros:5:# Use "help user-defined" for help.
src/misc/gdb-macros:9:# $Id: gdb-macros,v 1.1 2006-04-07 18:29:34 blp Exp $
src/misc/gdb-macros:14:    set $rc = (char*)&((struct $arg0 *)0)->$arg1 - (char*)0
src/misc/gdb-macros:19:    set $rc = ((struct $arg1 *) ((uint8_t *) ($arg0) - $rc))
src/misc/gdb-macros:25:    set $e = $list->head.next
src/misc/gdb-macros:30:        printf "pintos-debug: dumplist #%d: %p ", $i++, $l
src/misc/gdb-macros:32:        set $e = $e->next
src/misc/gdb-macros:44:   if $arg0 == ($esp - ((unsigned)$esp % 4096)) 
src/misc/gdb-macros:51:       set $esp = ((struct thread *)$arg0)->stack
src/misc/gdb-macros:70:    set $e = $list->head.next
src/misc/gdb-macros:73:        printf "pintos-debug: dumping backtrace of thread '%s' @%p\n", \
src/misc/gdb-macros:74:                ((struct thread*)$rc)->name, $rc
src/misc/gdb-macros:76:        set $e = $e->next
src/misc/gdb-macros:98:define hook-stop
src/misc/gdb-macros:105:            printf "pintos-debug: a page fault exception occurred in user mode\n"
src/misc/gdb-macros:106:            printf "pintos-debug: hit 'c' to continue, or 's' to step to intr_handler\n"
src/misc/gdb-macros:109:            printf "pintos-debug: a page fault occurred in kernel mode\n"
src/misc/bochs-2.2.6-solaris-tty.patch:1:--- bochs-2.2.6/iodev/serial.cc	2005-07-11 09:24:47.000000000 -0700
src/misc/bochs-2.2.6-solaris-tty.patch:2:+++ bochs-2.2.6.patch/iodev/serial.cc	2006-05-28 16:41:33.278938000 -0700
src/misc/bochs-2.2.6-solaris-tty.patch:3:@@ -245,8 +245,13 @@
src/misc/bochs-2.2.6-solaris-tty.patch:7:-            bcopy((caddr_t) &BX_SER_THIS s[i].term_orig, (caddr_t) &BX_SER_THIS s[i].term_new, sizeof(struct termios));
src/misc/bochs-2.2.6-solaris-tty.patch:8:-            cfmakeraw(&BX_SER_THIS s[i].term_new);
src/misc/bochs-2.2.6-solaris-tty.patch:16:             BX_SER_THIS s[i].term_new.c_oflag |= OPOST | ONLCR;  // Enable NL to CR-NL translation
src/misc/bochs-2.2.6-solaris-tty.patch:18:             // ctl-C will exit Bochs, or trap to the debugger
src/misc/bochs-2.2.6-solaris-tty.patch:21:--- bochs-2.2.6/iodev/serial.h	2005-07-10 09:51:09.000000000 -0700
src/misc/bochs-2.2.6-solaris-tty.patch:22:+++ bochs-2.2.6.patch/iodev/serial.h	2006-05-28 16:39:03.757839000 -0700
src/misc/bochs-2.2.6-solaris-tty.patch:23:@@ -40,7 +40,7 @@
src/misc/bochs-2.2.6-solaris-tty.patch:27:-#if defined(__NetBSD__) || defined(__FreeBSD__) || defined(__OpenBSD__) || defined(__linux__) || defined(__GNU__) || defined(__GLIBC__) || defined(__APPLE__)
src/Makefile.userprog:1:# -*- makefile -*-
src/Makefile.userprog:3:$(PROGS): CPPFLAGS += -I$(SRCDIR)/lib/user -I.
src/Makefile.userprog:6:$(PROGS): LDFLAGS = -nostdlib -static -Wl,-T,$(LDSCRIPT)
src/Makefile.userprog:11:lib_SRC += lib/random.c			# Pseudo-random numbers.
src/Makefile.userprog:35:	$$(CC) $$(LDFLAGS) $$($(1)_OBJ) $$(LIB) -o $$@
src/Makefile.userprog:41:	rm -f $@
src/Makefile.userprog:46:	rm -f $(PROGS) $(PROGS_OBJ) $(PROGS_DEP)
src/Makefile.userprog:47:	rm -f $(LIB_DEP) $(LIB_OBJ) lib/user/entry.[do] libc.a 
src/Makefile.userprog:51:-include $(LIB_DEP) $(PROGS_DEP)
src/utils/.cvsignore:1:setitimer-helper
src/utils/.cvsignore:2:squish-pty
src/utils/.cvsignore:3:squish-unix
src/utils/pintos-gdb:4:GDBMACROS=/usr/class/cs140/pintos/pintos/src/misc/gdb-macros
src/utils/pintos-gdb:7:if command -v i386-elf-gdb >/dev/null 2>&1; then
src/utils/pintos-gdb:8:	GDB=i386-elf-gdb
src/utils/pintos-gdb:14:if test -f "$GDBMACROS"; then
src/utils/pintos-gdb:15:	exec $GDB -x "$GDBMACROS" "$@"
src/utils/Makefile:1:all: setitimer-helper squish-pty squish-unix
src/utils/Makefile:4:CFLAGS = -Wall -W
src/utils/Makefile:5:LDFLAGS = -lm
src/utils/Makefile:6:setitimer-helper: setitimer-helper.o
src/utils/Makefile:7:squish-pty: squish-pty.o
src/utils/Makefile:8:squish-unix: squish-unix.o
src/utils/Makefile:11:	rm -f *.o setitimer-helper squish-pty squish-unix
src/utils/backtrace:1:#! /usr/bin/perl -w
src/utils/backtrace:6:if (grep ($_ eq '-h' || $_ eq '--help', @ARGV)) {
src/utils/backtrace:23:die "backtrace: at least one argument required (use --help for help)\n"
src/utils/backtrace:27:@ARGV = grep (!/^(call|stack:?|[-+])$/i, @ARGV);
src/utils/backtrace:34:    die "backtrace: $bin: not found (use --help for help)\n" if ! -e $bin;
src/utils/backtrace:39:    if (-e 'kernel.o') {
src/utils/backtrace:41:    } elsif (-e 'build/kernel.o') {
src/utils/backtrace:44:	die "backtrace: no binary specified and neither \"kernel.o\" nor \"build/kernel.o\" exists (use --help for help)\n";
src/utils/backtrace:50:my ($a2l) = search_path ("i386-elf-addr2line") || search_path ("addr2line");
src/utils/backtrace:52:    die "backtrace: neither `i386-elf-addr2line' nor `addr2line' in PATH\n";
src/utils/backtrace:58:	return $file if -e $file;
src/utils/backtrace:66:    open (A2L, "$a2l -fe $bin " . join (' ', map ($_->{ADDR}, @locs)) . "|");
src/utils/backtrace:85:    if (defined ($loc->{BINARY})
src/utils/backtrace:87:	&& (!defined ($cur_binary) || $loc->{BINARY} ne $cur_binary)) {
src/utils/backtrace:88:	$cur_binary = $loc->{BINARY};
src/utils/backtrace:92:    my ($addr) = $loc->{ADDR};
src/utils/backtrace:93:    $addr = sprintf ("0x%08x", hex ($addr)) if $addr =~ /^0x[0-9a-f]+$/i;
src/utils/backtrace:96:    if (defined ($loc->{BINARY})) {
src/utils/backtrace:97:	my ($function) = $loc->{FUNCTION};
src/utils/backtrace:98:	my ($line) = $loc->{LINE};
src/utils/backtrace:100:	$line = "..." . substr ($line, -25) if length ($line) > 28;
src/utils/pintos:1:#! /usr/bin/perl -w
src/utils/pintos:9:# Command-line options.
src/utils/pintos:41:    usage (0) if @ARGV == 0 || (@ARGV == 1 && $ARGV[0] eq '--help');
src/utils/pintos:44:    if (grep ($_ eq '--', @kernel_args)) {
src/utils/pintos:46:	while ((my $arg = shift (@kernel_args)) ne '--') {
src/utils/pintos:55:		    "no-debug" => sub { set_debug ("none") },
src/utils/pintos:64:		    "k|kill-on-failure" => \$kill_on_failure,
src/utils/pintos:66:		    "v|no-vga" => sub { set_vga ('none'); },
src/utils/pintos:67:		    "s|no-serial" => sub { $serial = 0; },
src/utils/pintos:70:		    "p|put-file=s" => sub { add_file (\@puts, $_[1]); },
src/utils/pintos:71:		    "g|get-file=s" => sub { add_file (\@gets, $_[1]); },
src/utils/pintos:76:		    "os-disk=s" => \$disks{OS}{FILE_NAME},
src/utils/pintos:77:		    "fs-disk=s" => \$disks{FS}{FILE_NAME},
src/utils/pintos:78:		    "scratch-disk=s" => \$disks{SCRATCH}{FILE_NAME},
src/utils/pintos:79:		    "swap-disk=s" => \$disks{SWAP}{FILE_NAME},
src/utils/pintos:81:		    "0|disk-0|hda=s" => \$disks_by_iface[0]{FILE_NAME},
src/utils/pintos:82:		    "1|disk-1|hdb=s" => \$disks_by_iface[1]{FILE_NAME},
src/utils/pintos:83:		    "2|disk-2|hdc=s" => \$disks_by_iface[2]{FILE_NAME},
src/utils/pintos:84:		    "3|disk-3|hdd=s" => \$disks_by_iface[3]{FILE_NAME})
src/utils/pintos:92:    undef $timeout, print "warning: disabling timeout with --$debug\n"
src/utils/pintos:95:    print "warning: enabling serial port for -k or --kill-on-failure\n"
src/utils/pintos:106:Usage: pintos [OPTION...] -- [ARGUMENT...]
src/utils/pintos:110:  --bochs                  (default) Use Bochs as simulator
src/utils/pintos:111:  --qemu                   Use QEMU as simulator
src/utils/pintos:112:  --player                 Use VMware Player as simulator
src/utils/pintos:114:  --no-debug               (default) No debugger
src/utils/pintos:115:  --monitor                Debug with simulator's monitor
src/utils/pintos:116:  --gdb                    Debug with gdb
src/utils/pintos:118:  -v, --no-vga             No VGA display or keyboard
src/utils/pintos:119:  -s, --no-serial          No serial input or output
src/utils/pintos:120:  -t, --terminal           Display VGA in terminal (Bochs only)
src/utils/pintos:122:  -j SEED                  Randomize timer interrupts
src/utils/pintos:123:  -r, --realtime           Use realistic, not reproducible, timings
src/utils/pintos:125:  -T, --timeout=N          Kill Pintos after N seconds CPU time or N*load_avg
src/utils/pintos:126:                           seconds wall-clock time (whichever comes first)
src/utils/pintos:127:  -k, --kill-on-failure    Kill Pintos a few seconds after a kernel or user
src/utils/pintos:130:  -m, --mem=N              Give Pintos N MB physical RAM (default: 4)
src/utils/pintos:132:  -p, --put-file=HOSTFN    Copy HOSTFN into VM, by default under same name
src/utils/pintos:133:  -g, --get-file=GUESTFN   Copy GUESTFN out of VM, by default under same name
src/utils/pintos:134:  -a, --as=FILENAME        Specifies guest (for -p) or host (for -g) file name
src/utils/pintos:136:  --os-disk=FILE           Set OS disk file (default: os.dsk)
src/utils/pintos:137:  --fs-disk=FILE|SIZE      Set FS disk file (default: fs.dsk)
src/utils/pintos:138:  --scratch-disk=FILE|SIZE Set scratch disk (default: scratch.dsk)
src/utils/pintos:139:  --swap-disk=FILE|SIZE    Set swap disk file (default: swap.dsk)
src/utils/pintos:141:  -h, --help               Display this help message.
src/utils/pintos:149:    die "--$new_sim conflicts with --$sim\n"
src/utils/pintos:157:    die "--$new_debug conflicts with --$debug\n"
src/utils/pintos:174:    die "--realtime conflicts with --jitter\n" if defined $realtime;
src/utils/pintos:175:    die "different --jitter already defined\n"
src/utils/pintos:180:# Sets real-time timer interrupts.
src/utils/pintos:182:    die "--realtime conflicts with --jitter\n" if defined $jitter;
src/utils/pintos:199:    die "-a (or --as) is only allowed after -p or -g\n" if !defined $as_ref;
src/utils/pintos:200:    die "Only one -a (or --as) is allowed after -p or -g\n"
src/utils/pintos:201:      if defined $as_ref->[1];
src/utils/pintos:202:    $as_ref->[1] = $as;
src/utils/pintos:211:	if (!defined ($disk->{FILE_NAME})) {
src/utils/pintos:212:	    for my $try_fn ($disk->{DEF_FN}, "build/" . $disk->{DEF_FN}) {
src/utils/pintos:213:		$disk->{FILE_NAME} = $try_fn, last
src/utils/pintos:214:		  if -e $try_fn;
src/utils/pintos:219:	next if !defined ($disk->{FILE_NAME});
src/utils/pintos:221:	if ($disk->{FILE_NAME} =~ /^\d+(\.\d+)?|\.\d+$/) {
src/utils/pintos:226:	    my ($mb) = $disk->{FILE_NAME};
src/utils/pintos:227:	    undef $disk->{FILE_NAME};
src/utils/pintos:233:	    -e $disk->{FILE_NAME} or die "$disk->{FILE_NAME}: stat: $!\n";
src/utils/pintos:234:	    -s _ or die "$disk->{FILE_NAME}: disk has zero size\n";
src/utils/pintos:256:    put_scratch_file ($_->[0]) foreach @puts;
src/utils/pintos:274:	my ($name) = defined ($get->[1]) ? $get->[1] : $get->[0];
src/utils/pintos:291:    # Write metadata sector, which consists of a 4-byte signature
src/utils/pintos:294:    my ($size) = -s _;
src/utils/pintos:307:    write_fully ($disk_handle, $disk_file_name, "\0" x (512 - $size % 512))
src/utils/pintos:321:    # Read metadata sector, which has a 4-byte signature followed by
src/utils/pintos:325:    (print STDERR "bad signature on scratch disk--did Pintos run fail?\n"),
src/utils/pintos:338:    read_fully ($disk_handle, $disk_file_name, 512 - $size % 512)
src/utils/pintos:349:      while @kernel_args && $kernel_args[0] =~ /^-/;
src/utils/pintos:350:    push (@args, 'put', defined $_->[1] ? $_->[1] : $_->[0]) foreach @puts;
src/utils/pintos:352:    push (@args, 'get', $_->[0]) foreach @gets;
src/utils/pintos:364:    $args .= "\0" x (128 - length ($args));
src/utils/pintos:391:    my ($bin) = $debug eq 'monitor' ? 'bochs-dbg' : 'bochs';
src/utils/pintos:395:	$squish_pty = find_in_path ("squish-pty");
src/utils/pintos:396:	print "warning: can't find squish-pty, so terminal input will fail\n"
src/utils/pintos:403:romimage: file=\$BXSHARE/BIOS-bochs-latest, address=0xf0000
src/utils/pintos:404:vgaromimage: file=\$BXSHARE/VGABIOS-lgpl-latest
src/utils/pintos:414:    print_bochs_disk_line ("ata0-master", 0);
src/utils/pintos:415:    print_bochs_disk_line ("ata0-slave", 1);
src/utils/pintos:420:	print_bochs_disk_line ("ata1-master", 2);
src/utils/pintos:421:	print_bochs_disk_line ("ata1-slave", 3);
src/utils/pintos:435:    my (@cmd) = ($bin, '-q');
src/utils/pintos:437:    push (@cmd, '-j', $jitter) if defined $jitter;
src/utils/pintos:460:    my ($file) = $disk->{FILE_NAME};
src/utils/pintos:471:    print "warning: qemu doesn't support --terminal\n"
src/utils/pintos:477:	my ($option) = ('-hda', '-hdb', '-hdc', '-hdd')[$iface];
src/utils/pintos:481:    push (@cmd, '-m', $mem);
src/utils/pintos:482:    push (@cmd, '-net', 'none');
src/utils/pintos:483:    push (@cmd, '-nographic') if $vga eq 'none';
src/utils/pintos:484:    push (@cmd, '-serial', 'stdio') if $serial && $vga ne 'none';
src/utils/pintos:485:    push (@cmd, '-S') if $debug eq 'monitor';
src/utils/pintos:486:    push (@cmd, '-s', '-S') if $debug eq 'gdb';
src/utils/pintos:487:    push (@cmd, '-monitor', 'null') if $vga eq 'none' && $debug eq 'none';
src/utils/pintos:501:    player_unsup ("--$debug") if $debug ne 'none';
src/utils/pintos:502:    player_unsup ("--no-vga") if $vga eq 'none';
src/utils/pintos:503:    player_unsup ("--terminal") if $vga eq 'terminal';
src/utils/pintos:504:    player_unsup ("--jitter") if defined $jitter;
src/utils/pintos:505:    player_unsup ("--timeout"), undef $timeout if defined $timeout;
src/utils/pintos:506:    player_unsup ("--kill-on-failure"), undef $kill_on_failure
src/utils/pintos:515:#! /usr/bin/vmware -G
src/utils/pintos:539:	my ($dsk) = $disk->{FILE_NAME};
src/utils/pintos:583:	$squish_unix = find_in_path ("squish-unix");
src/utils/pintos:584:	print "warning: can't find squish-unix, so terminal input ",
src/utils/pintos:603:    if (!defined ($disk->{HANDLE})) {
src/utils/pintos:604:	if ($disk->{FILE_NAME}) {
src/utils/pintos:605:	    sysopen ($disk->{HANDLE}, $disk->{FILE_NAME}, O_RDWR)
src/utils/pintos:606:	      or die "$disk->{FILE_NAME}: open: $!\n";
src/utils/pintos:608:	    ($disk->{HANDLE}, $disk->{FILE_NAME}) = tempfile (UNLINK => 1,
src/utils/pintos:612:    return ($disk->{HANDLE}, $disk->{FILE_NAME});
src/utils/pintos:620:    die if !$disk->{FILE_NAME};
src/utils/pintos:625:	       -s $orig_handle);
src/utils/pintos:626:    return ($disk->{HANDLE}, $disk->{FILE_NAME}) = ($cp_handle, $cp_file_name);
src/utils/pintos:636:    if (-s ($handle) < $size) {
src/utils/pintos:637:	sysseek ($handle, $size - 1, 0) == $size - 1
src/utils/pintos:650:    my ($file) = $disk->{FILE_NAME};
src/utils/pintos:651:    my ($size) = -s $file;
src/utils/pintos:674:	$size -= $chunk_size;
src/utils/pintos:726:	my $termios = POSIX::Termios->new;
src/utils/pintos:727:	$termios->getattr (0);
src/utils/pintos:728:	$cleanup = sub { $termios->setattr (0, &POSIX::TCSANOW); }
src/utils/pintos:828:	print "\nTIMEOUT after ", time () - $start_time,
src/utils/pintos:829:	  " seconds of wall-clock time";
src/utils/pintos:830:	print  " - $load_avg" if defined $load_avg;
src/utils/pintos:854:	    { exec ("setitimer-helper", $timeout, @_); };
src/utils/pintos:856:	    print STDERR "warning: setitimer-helper is not installed, so ",
src/utils/pintos:880:    -x "$_/$program" and return $program foreach split (':', $ENV{PATH});
Binary file src/utils/squish-pty matches
src/utils/setitimer-helper.c:19:               "setitimer-helper: runs a program with a virtual CPU limit\n"
src/utils/setitimer-helper.c:36:      it.it_value.tv_usec = (timeout - floor (timeout)) * 1000000;
Binary file src/utils/squish-unix matches
Binary file src/utils/setitimer-helper matches
src/utils/squish-unix.c:64:/* Make FD non-blocking if NONBLOCKING is true,
src/utils/squish-unix.c:81:   FD_IS_SOCK is true, that returned end-of-file or error
src/utils/squish-unix.c:94:          *fd = -1;
src/utils/squish-unix.c:120:  /* Make SOCK, stdin, and stdout non-blocking. */
src/utils/squish-unix.c:126:     end-of-line. */
src/utils/squish-unix.c:135:  while (pipes[0].in != -1 || pipes[1].in != -1
src/utils/squish-unix.c:136:         || (pipes[1].size && pipes[1].out != -1))
src/utils/squish-unix.c:149:          /* Don't do anything with the stdin->sock pipe until we
src/utils/squish-unix.c:150:             have some data for the sock->stdout pipe.  If we get
src/utils/squish-unix.c:155:          if (p->in != -1 && p->size + p->ofs < sizeof p->buf)
src/utils/squish-unix.c:156:            FD_SET (p->in, &read_fds);
src/utils/squish-unix.c:157:          if (p->out != -1 && p->size > 0)
src/utils/squish-unix.c:158:            FD_SET (p->out, &write_fds); 
src/utils/squish-unix.c:169:              if (p->out == -1)
src/utils/squish-unix.c:177:                  while (p->size > 0) 
src/utils/squish-unix.c:179:                      n = write (p->out, p->buf + p->ofs, p->size);
src/utils/squish-unix.c:183:                        fail_io ("zero-length write");
src/utils/squish-unix.c:184:                      p->ofs += n;
src/utils/squish-unix.c:185:                      p->size -= n;
src/utils/squish-unix.c:187:                  p->ofs = 0;
src/utils/squish-unix.c:189:                  p->size = n = read (p->in, p->buf, sizeof p->buf);
src/utils/squish-unix.c:200:          if (p->in != -1 && FD_ISSET (p->in, &read_fds))
src/utils/squish-unix.c:202:              ssize_t n = read (p->in, p->buf + p->ofs + p->size,
src/utils/squish-unix.c:203:                                sizeof p->buf - p->ofs - p->size);
src/utils/squish-unix.c:206:                  p->active = true;
src/utils/squish-unix.c:207:                  p->size += n;
src/utils/squish-unix.c:208:                  if (p->size == BUFSIZ && p->ofs != 0)
src/utils/squish-unix.c:210:                      memmove (p->buf, p->buf + p->ofs, p->size);
src/utils/squish-unix.c:211:                      p->ofs = 0;
src/utils/squish-unix.c:214:              else if (!handle_error (n, &p->in, p->in == sock, "read"))
src/utils/squish-unix.c:217:          if (p->out != -1 && FD_ISSET (p->out, &write_fds)) 
src/utils/squish-unix.c:219:              ssize_t n = write (p->out, p->buf + p->ofs, p->size);
src/utils/squish-unix.c:222:                  p->ofs += n;
src/utils/squish-unix.c:223:                  p->size -= n;
src/utils/squish-unix.c:224:                  if (p->size == 0)
src/utils/squish-unix.c:225:                    p->ofs = 0;
src/utils/squish-unix.c:227:              else if (!handle_error (n, &p->out, p->out == sock, "write"))
src/utils/squish-unix.c:252:               "usage: squish-unix SOCKET COMMAND [ARG]...\n"
src/utils/squish-unix.c:266:  sun.sun_path[sizeof sun.sun_path - 1] = '\0';
Binary file src/utils/squish-unix.o matches
Binary file src/utils/squish-pty.o matches
Binary file src/utils/setitimer-helper.o matches
src/utils/squish-pty.c:61:/* Make FD non-blocking if NONBLOCKING is true,
src/utils/squish-pty.c:78:   is true, that returned end-of-file or error indication RETVAL.
src/utils/squish-pty.c:105:          *fd = -1;
src/utils/squish-pty.c:127:  /* Make PTY, stdin, and stdout non-blocking. */
src/utils/squish-pty.c:133:     waiting for end-of-line.  We want to minimize context
src/utils/squish-pty.c:145:  while (pipes[0].in != -1 || pipes[1].in != -1)
src/utils/squish-pty.c:157:          /* Don't do anything with the stdin->pty pipe until we
src/utils/squish-pty.c:158:             have some data for the pty->stdout pipe.  If we get
src/utils/squish-pty.c:163:          if (p->in != -1 && p->size + p->ofs < sizeof p->buf)
src/utils/squish-pty.c:164:            FD_SET (p->in, &read_fds);
src/utils/squish-pty.c:165:          if (p->out != -1 && p->size > 0)
src/utils/squish-pty.c:166:            FD_SET (p->out, &write_fds); 
src/utils/squish-pty.c:182:          if (p->out == -1)
src/utils/squish-pty.c:190:              while (p->size > 0) 
src/utils/squish-pty.c:192:                  n = write (p->out, p->buf + p->ofs, p->size);
src/utils/squish-pty.c:196:                    fail_io ("zero-length write");
src/utils/squish-pty.c:197:                  p->ofs += n;
src/utils/squish-pty.c:198:                  p->size -= n;
src/utils/squish-pty.c:200:              p->ofs = 0;
src/utils/squish-pty.c:202:              p->size = n = read (p->in, p->buf, sizeof p->buf);
src/utils/squish-pty.c:211:          if (p->in != -1 && FD_ISSET (p->in, &read_fds))
src/utils/squish-pty.c:213:              ssize_t n = read (p->in, p->buf + p->ofs + p->size,
src/utils/squish-pty.c:214:                                sizeof p->buf - p->ofs - p->size);
src/utils/squish-pty.c:217:                  p->active = true;
src/utils/squish-pty.c:218:                  p->size += n;
src/utils/squish-pty.c:219:                  if (p->size == BUFSIZ && p->ofs != 0)
src/utils/squish-pty.c:221:                      memmove (p->buf, p->buf + p->ofs, p->size);
src/utils/squish-pty.c:222:                      p->ofs = 0;
src/utils/squish-pty.c:225:              else if (!handle_error (n, &p->in, p->in == pty, "read"))
src/utils/squish-pty.c:228:          if (p->out != -1 && FD_ISSET (p->out, &write_fds)) 
src/utils/squish-pty.c:230:              ssize_t n = write (p->out, p->buf + p->ofs, p->size);
src/utils/squish-pty.c:233:                  p->ofs += n;
src/utils/squish-pty.c:234:                  p->size -= n;
src/utils/squish-pty.c:235:                  if (p->size == 0)
src/utils/squish-pty.c:236:                    p->ofs = 0;
src/utils/squish-pty.c:238:              else if (!handle_error (n, &p->out, p->out == pty, "write"))
src/utils/squish-pty.c:267:               "usage: squish-pty COMMAND [ARG]...\n"
src/utils/pintos-mkdisk:14:die "$disk: already exists\n" if -e $disk;
src/utils/pintos-mkdisk:23:sysseek (DISK, $bytes - 1, SEEK_SET) or die "$disk: seek: $!\n";
src/utils/pintos-mkdisk:29:pintos-mkdisk, a utility for creating Pintos virtual disks
src/utils/pintos-mkdisk:34:  -h, --help        Display this help message.
src/vm/Make.vars:1:# -*- makefile -*-
src/vm/Make.vars:3:os.dsk: DEFINES = -DUSERPROG -DFILESYS -DVM
src/vm/Make.vars:7:SIMULATOR = --qemu
src/Make.config:1:# -*- makefile -*-
src/Make.config:9:# If it's x86-64, use the compiler and linker in 32-bit mode.
src/Make.config:10:# Otherwise assume cross-tools are installed as i386-elf-*.
src/Make.config:13:ifneq (0, $(shell expr `uname -m` : '$(X86)'))
src/Make.config:18:  ifneq (0, $(shell expr `uname -m` : '$(X86_64)'))
src/Make.config:19:    CC = gcc -m32
src/Make.config:20:    LD = ld -melf_i386
src/Make.config:23:    CC = i386-elf-gcc
src/Make.config:24:    LD = i386-elf-ld
src/Make.config:25:    OBJCOPY = i386-elf-objcopy
src/Make.config:29:ifeq ($(strip $(shell command -v $(CC) 2> /dev/null)),)
src/Make.config:35:WARNINGS = -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers
src/Make.config:36:CFLAGS = -g -msoft-float -O
src/Make.config:37:CPPFLAGS = -nostdinc -I$(SRCDIR) -I$(SRCDIR)/lib
src/Make.config:38:ASFLAGS = -Wa,--gstabs
src/Make.config:40:DEPS = -MMD -MF $(@:.o=.d)
src/Make.config:42:# Turn off -fstack-protector, which we don't support.
src/Make.config:43:ifeq ($(strip $(shell echo | $(CC) -fno-stack-protector -E - > /dev/null 2>&1; echo $$?)),0)
src/Make.config:44:CFLAGS += -fno-stack-protector
src/Make.config:48:	$(CC) -c $< -o $@ $(CFLAGS) $(CPPFLAGS) $(WARNINGS) $(DEFINES) $(DEPS)
src/Make.config:51:	$(CC) -c $< -o $@ $(ASFLAGS) $(CPPFLAGS) $(DEFINES) $(DEPS)
src/LICENSE:34:/* Copyright (c) 1992-1996 The Regents of the University of California.
run.sh:4:  -dit \
run.sh:5:  -v $(pwd):/pintos \
run.sh:6:  -v /tmp/.X11-unix/:/tmp/.X11-unix/ \
run.sh:7:  -e DISPLAY=$DISPLAY \
run.sh:8:  --name $1 \
run.sh:9:  hangpark/pintos-dev-env-kaist
run.sh:11:xhost +local:"docker container ls -f name=$1 -q"
